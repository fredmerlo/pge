{
  "format_version": "1.2",
  "terraform_version": "1.8.5",
  "variables": {
    "lambda_secret": {
      "value": null
    }
  },
  "planned_values": {
    "root_module": {
      "resources": [
        {
          "address": "aws_api_gateway_account.api_gateway_account",
          "mode": "managed",
          "type": "aws_api_gateway_account",
          "name": "api_gateway_account",
          "provider_name": "registry.terraform.io/hashicorp/aws",
          "schema_version": 0,
          "values": {
            "api_key_version": "4",
            "cloudwatch_role_arn": "arn:aws:iam::900357929763:role/api_gateway_cloudwatch_global",
            "features": [
              "UsagePlans"
            ],
            "id": "api-gateway-account",
            "reset_on_delete": null,
            "throttle_settings": [
              {
                "burst_limit": 5000,
                "rate_limit": 10000
              }
            ]
          },
          "sensitive_values": {
            "features": [
              false
            ],
            "throttle_settings": [
              {}
            ]
          }
        },
        {
          "address": "aws_api_gateway_deployment.pge_deployment",
          "mode": "managed",
          "type": "aws_api_gateway_deployment",
          "name": "pge_deployment",
          "provider_name": "registry.terraform.io/hashicorp/aws",
          "schema_version": 0,
          "values": {
            "canary_settings": [],
            "created_date": "2025-02-03T14:35:24Z",
            "description": "PGE Deployment",
            "execution_arn": "arn:aws:execute-api:us-east-1:900357929763:iaoe8o5c0e/",
            "id": "kd8dub",
            "invoke_url": "https://iaoe8o5c0e.execute-api.us-east-1.amazonaws.com/",
            "rest_api_id": "iaoe8o5c0e",
            "stage_description": null,
            "stage_name": null,
            "triggers": {
              "redeployment": "44ef8d8a8234f34b10a0a2f9708979366dc866df"
            },
            "variables": null
          },
          "sensitive_values": {
            "canary_settings": [],
            "triggers": {}
          }
        },
        {
          "address": "aws_api_gateway_integration.pge_integration_get",
          "mode": "managed",
          "type": "aws_api_gateway_integration",
          "name": "pge_integration_get",
          "provider_name": "registry.terraform.io/hashicorp/aws",
          "schema_version": 0,
          "values": {
            "cache_key_parameters": [],
            "cache_namespace": "gl9g61",
            "connection_id": "",
            "connection_type": "INTERNET",
            "content_handling": "",
            "credentials": "",
            "http_method": "GET",
            "id": "agi-iaoe8o5c0e-gl9g61-GET",
            "integration_http_method": "POST",
            "passthrough_behavior": "WHEN_NO_MATCH",
            "request_parameters": {},
            "request_templates": {},
            "resource_id": "gl9g61",
            "rest_api_id": "iaoe8o5c0e",
            "timeout_milliseconds": 29000,
            "tls_config": [],
            "type": "AWS_PROXY",
            "uri": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:900357929763:function:pge-lambda-with-docker-build-from-ecr/invocations"
          },
          "sensitive_values": {
            "cache_key_parameters": [],
            "request_parameters": {},
            "request_templates": {},
            "tls_config": []
          }
        },
        {
          "address": "aws_api_gateway_integration.pge_integration_post",
          "mode": "managed",
          "type": "aws_api_gateway_integration",
          "name": "pge_integration_post",
          "provider_name": "registry.terraform.io/hashicorp/aws",
          "schema_version": 0,
          "values": {
            "cache_key_parameters": [],
            "cache_namespace": "wwpvml",
            "connection_id": "",
            "connection_type": "INTERNET",
            "content_handling": "",
            "credentials": "",
            "http_method": "POST",
            "id": "agi-iaoe8o5c0e-wwpvml-POST",
            "integration_http_method": "POST",
            "passthrough_behavior": "WHEN_NO_MATCH",
            "request_parameters": {},
            "request_templates": {},
            "resource_id": "wwpvml",
            "rest_api_id": "iaoe8o5c0e",
            "timeout_milliseconds": 29000,
            "tls_config": [],
            "type": "AWS_PROXY",
            "uri": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:900357929763:function:pge-lambda-with-docker-build-from-ecr/invocations"
          },
          "sensitive_values": {
            "cache_key_parameters": [],
            "request_parameters": {},
            "request_templates": {},
            "tls_config": []
          }
        },
        {
          "address": "aws_api_gateway_method.pge_method_get",
          "mode": "managed",
          "type": "aws_api_gateway_method",
          "name": "pge_method_get",
          "provider_name": "registry.terraform.io/hashicorp/aws",
          "schema_version": 0,
          "values": {
            "api_key_required": false,
            "authorization": "NONE",
            "authorization_scopes": [],
            "authorizer_id": "",
            "http_method": "GET",
            "id": "agm-iaoe8o5c0e-gl9g61-GET",
            "operation_name": "",
            "request_models": {},
            "request_parameters": {},
            "request_validator_id": "",
            "resource_id": "gl9g61",
            "rest_api_id": "iaoe8o5c0e"
          },
          "sensitive_values": {
            "authorization_scopes": [],
            "request_models": {},
            "request_parameters": {}
          }
        },
        {
          "address": "aws_api_gateway_method.pge_method_post",
          "mode": "managed",
          "type": "aws_api_gateway_method",
          "name": "pge_method_post",
          "provider_name": "registry.terraform.io/hashicorp/aws",
          "schema_version": 0,
          "values": {
            "api_key_required": false,
            "authorization": "NONE",
            "authorization_scopes": [],
            "authorizer_id": "",
            "http_method": "POST",
            "id": "agm-iaoe8o5c0e-wwpvml-POST",
            "operation_name": "",
            "request_models": {},
            "request_parameters": {},
            "request_validator_id": "",
            "resource_id": "wwpvml",
            "rest_api_id": "iaoe8o5c0e"
          },
          "sensitive_values": {
            "authorization_scopes": [],
            "request_models": {},
            "request_parameters": {}
          }
        },
        {
          "address": "aws_api_gateway_method_settings.pge_method_settings",
          "mode": "managed",
          "type": "aws_api_gateway_method_settings",
          "name": "pge_method_settings",
          "provider_name": "registry.terraform.io/hashicorp/aws",
          "schema_version": 0,
          "values": {
            "id": "iaoe8o5c0e-pge-*/*",
            "method_path": "*/*",
            "rest_api_id": "iaoe8o5c0e",
            "settings": [
              {
                "cache_data_encrypted": false,
                "cache_ttl_in_seconds": 300,
                "caching_enabled": false,
                "data_trace_enabled": true,
                "logging_level": "INFO",
                "metrics_enabled": false,
                "require_authorization_for_cache_control": true,
                "throttling_burst_limit": -1,
                "throttling_rate_limit": -1,
                "unauthorized_cache_control_header_strategy": "SUCCEED_WITH_RESPONSE_HEADER"
              }
            ],
            "stage_name": "pge"
          },
          "sensitive_values": {
            "settings": [
              {}
            ]
          }
        },
        {
          "address": "aws_api_gateway_resource.pge_resource_data",
          "mode": "managed",
          "type": "aws_api_gateway_resource",
          "name": "pge_resource_data",
          "provider_name": "registry.terraform.io/hashicorp/aws",
          "schema_version": 0,
          "values": {
            "id": "gl9g61",
            "parent_id": "i6dhoza7l1",
            "path": "/data",
            "path_part": "data",
            "rest_api_id": "iaoe8o5c0e"
          },
          "sensitive_values": {}
        },
        {
          "address": "aws_api_gateway_resource.pge_resource_token",
          "mode": "managed",
          "type": "aws_api_gateway_resource",
          "name": "pge_resource_token",
          "provider_name": "registry.terraform.io/hashicorp/aws",
          "schema_version": 0,
          "values": {
            "id": "wwpvml",
            "parent_id": "i6dhoza7l1",
            "path": "/token",
            "path_part": "token",
            "rest_api_id": "iaoe8o5c0e"
          },
          "sensitive_values": {}
        },
        {
          "address": "aws_api_gateway_rest_api.pge_rest_api",
          "mode": "managed",
          "type": "aws_api_gateway_rest_api",
          "name": "pge_rest_api",
          "provider_name": "registry.terraform.io/hashicorp/aws",
          "schema_version": 0,
          "values": {
            "api_key_source": "HEADER",
            "arn": "arn:aws:apigateway:us-east-1::/restapis/iaoe8o5c0e",
            "binary_media_types": [],
            "body": null,
            "created_date": "2025-02-03T09:42:01Z",
            "description": "PGE REST API",
            "disable_execute_api_endpoint": false,
            "endpoint_configuration": [
              {
                "types": [
                  "REGIONAL"
                ],
                "vpc_endpoint_ids": []
              }
            ],
            "execution_arn": "arn:aws:execute-api:us-east-1:900357929763:iaoe8o5c0e",
            "fail_on_warnings": null,
            "id": "iaoe8o5c0e",
            "minimum_compression_size": "",
            "name": "pge-rest-api",
            "parameters": null,
            "policy": "",
            "put_rest_api_mode": null,
            "root_resource_id": "i6dhoza7l1",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_values": {
            "binary_media_types": [],
            "endpoint_configuration": [
              {
                "types": [
                  false
                ],
                "vpc_endpoint_ids": []
              }
            ],
            "tags": {},
            "tags_all": {}
          }
        },
        {
          "address": "aws_api_gateway_stage.pge_stage",
          "mode": "managed",
          "type": "aws_api_gateway_stage",
          "name": "pge_stage",
          "provider_name": "registry.terraform.io/hashicorp/aws",
          "schema_version": 0,
          "values": {
            "access_log_settings": [
              {
                "destination_arn": "arn:aws:logs:us-east-1:900357929763:log-group:API-Gateway-Execution-Logs_iaoe8o5c0e/pge",
                "format": "{\"caller\":\"$context.identity.caller\",\"extendedRequestId\":\"$context.extendedRequestId\",\"httpMethod\":\"$context.httpMethod\",\"ip\":\"$context.identity.sourceIp\",\"protocol\":\"$context.protocol\",\"requestId\":\"$context.requestId\",\"requestTime\":\"$context.requestTime\",\"resourcePath\":\"$context.resourcePath\",\"responseLatency\":\"$context.responseLatency\",\"responseLength\":\"$context.responseLength\",\"status\":\"$context.status\",\"user\":\"$context.identity.user\"}"
              }
            ],
            "arn": "arn:aws:apigateway:us-east-1::/restapis/iaoe8o5c0e/stages/pge",
            "cache_cluster_enabled": false,
            "cache_cluster_size": "",
            "canary_settings": [],
            "client_certificate_id": "",
            "deployment_id": "kd8dub",
            "description": "",
            "documentation_version": "",
            "execution_arn": "arn:aws:execute-api:us-east-1:900357929763:iaoe8o5c0e/pge",
            "id": "ags-iaoe8o5c0e-pge",
            "invoke_url": "https://iaoe8o5c0e.execute-api.us-east-1.amazonaws.com/pge",
            "rest_api_id": "iaoe8o5c0e",
            "stage_name": "pge",
            "tags": {},
            "tags_all": {},
            "variables": {},
            "web_acl_arn": "",
            "xray_tracing_enabled": false
          },
          "sensitive_values": {
            "access_log_settings": [
              {}
            ],
            "canary_settings": [],
            "tags": {},
            "tags_all": {},
            "variables": {}
          }
        },
        {
          "address": "aws_cloudwatch_log_group.pge_api_log_group",
          "mode": "managed",
          "type": "aws_cloudwatch_log_group",
          "name": "pge_api_log_group",
          "provider_name": "registry.terraform.io/hashicorp/aws",
          "schema_version": 0,
          "values": {
            "arn": "arn:aws:logs:us-east-1:900357929763:log-group:API-Gateway-Execution-Logs_iaoe8o5c0e/pge",
            "id": "API-Gateway-Execution-Logs_iaoe8o5c0e/pge",
            "kms_key_id": "",
            "log_group_class": "STANDARD",
            "name": "API-Gateway-Execution-Logs_iaoe8o5c0e/pge",
            "name_prefix": "",
            "retention_in_days": 14,
            "skip_destroy": false,
            "tags": {},
            "tags_all": {}
          },
          "sensitive_values": {
            "tags": {},
            "tags_all": {}
          }
        },
        {
          "address": "aws_iam_policy.pge_data_bucket_policy",
          "mode": "managed",
          "type": "aws_iam_policy",
          "name": "pge_data_bucket_policy",
          "provider_name": "registry.terraform.io/hashicorp/aws",
          "schema_version": 0,
          "values": {
            "arn": "arn:aws:iam::900357929763:policy/pge_data_bucket_policy",
            "attachment_count": 1,
            "description": "Policy for PGE data bucket",
            "id": "arn:aws:iam::900357929763:policy/pge_data_bucket_policy",
            "name": "pge_data_bucket_policy",
            "name_prefix": "",
            "path": "/",
            "policy": "{\"Statement\":[{\"Action\":[\"s3:PutObject\",\"s3:ListBucket\",\"s3:GetObject\"],\"Effect\":\"Allow\",\"Resource\":[\"arn:aws:s3:::pge-data-bucket/*\",\"arn:aws:s3:::pge-data-bucket\"]}],\"Version\":\"2012-10-17\"}",
            "policy_id": "ANPA5DIMDXMRRHP3F7HJA",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_values": {
            "tags": {},
            "tags_all": {}
          }
        },
        {
          "address": "aws_iam_policy_attachment.pge_data_bucket_policy_attachment",
          "mode": "managed",
          "type": "aws_iam_policy_attachment",
          "name": "pge_data_bucket_policy_attachment",
          "provider_name": "registry.terraform.io/hashicorp/aws",
          "schema_version": 0,
          "values": {
            "groups": [],
            "id": "pge_data_bucket_policy_attachment",
            "name": "pge_data_bucket_policy_attachment",
            "policy_arn": "arn:aws:iam::900357929763:policy/pge_data_bucket_policy",
            "roles": [
              "pge-lambda-with-docker-build-from-ecr"
            ],
            "users": []
          },
          "sensitive_values": {
            "groups": [],
            "roles": [
              false
            ],
            "users": []
          }
        },
        {
          "address": "aws_iam_role.cloudwatch",
          "mode": "managed",
          "type": "aws_iam_role",
          "name": "cloudwatch",
          "provider_name": "registry.terraform.io/hashicorp/aws",
          "schema_version": 0,
          "values": {
            "arn": "arn:aws:iam::900357929763:role/api_gateway_cloudwatch_global",
            "assume_role_policy": "{\"Statement\":[{\"Action\":\"sts:AssumeRole\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"apigateway.amazonaws.com\"}}],\"Version\":\"2012-10-17\"}",
            "create_date": "2025-02-03T13:34:25Z",
            "description": "",
            "force_detach_policies": false,
            "id": "api_gateway_cloudwatch_global",
            "inline_policy": [
              {
                "name": "cloudwatch_global",
                "policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Action\":[\"logs:TestMetricFilter\",\"logs:PutRetentionPolicy\",\"logs:PutLogEvents\",\"logs:GetLogEvents\",\"logs:FilterLogEvents\",\"logs:DescribeLogStreams\",\"logs:DescribeLogGroups\",\"logs:DeleteLogStream\",\"logs:DeleteLogGroup\",\"logs:CreateLogStream\",\"logs:CreateLogGroup\"],\"Effect\":\"Allow\",\"Resource\":\"*\"}]}"
              }
            ],
            "managed_policy_arns": [],
            "max_session_duration": 3600,
            "name": "api_gateway_cloudwatch_global",
            "name_prefix": "",
            "path": "/",
            "permissions_boundary": "",
            "tags": {},
            "tags_all": {},
            "unique_id": "AROA5DIMDXMRXGIJJZJNO"
          },
          "sensitive_values": {
            "inline_policy": [
              {}
            ],
            "managed_policy_arns": [],
            "tags": {},
            "tags_all": {}
          }
        },
        {
          "address": "aws_iam_role_policy.cloudwatch",
          "mode": "managed",
          "type": "aws_iam_role_policy",
          "name": "cloudwatch",
          "provider_name": "registry.terraform.io/hashicorp/aws",
          "schema_version": 0,
          "values": {
            "id": "api_gateway_cloudwatch_global:cloudwatch_global",
            "name": "cloudwatch_global",
            "name_prefix": "",
            "policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Action\":[\"logs:TestMetricFilter\",\"logs:PutRetentionPolicy\",\"logs:PutLogEvents\",\"logs:GetLogEvents\",\"logs:FilterLogEvents\",\"logs:DescribeLogStreams\",\"logs:DescribeLogGroups\",\"logs:DeleteLogStream\",\"logs:DeleteLogGroup\",\"logs:CreateLogStream\",\"logs:CreateLogGroup\"],\"Effect\":\"Allow\",\"Resource\":\"*\"}]}",
            "role": "api_gateway_cloudwatch_global"
          },
          "sensitive_values": {}
        },
        {
          "address": "aws_lambda_permission.pge_lambda_permission",
          "mode": "managed",
          "type": "aws_lambda_permission",
          "name": "pge_lambda_permission",
          "provider_name": "registry.terraform.io/hashicorp/aws",
          "schema_version": 0,
          "values": {
            "action": "lambda:InvokeFunction",
            "event_source_token": null,
            "function_name": "pge-lambda-with-docker-build-from-ecr",
            "function_url_auth_type": null,
            "id": "AllowAPIGatewayInvoke",
            "principal": "apigateway.amazonaws.com",
            "principal_org_id": null,
            "qualifier": "",
            "source_account": null,
            "source_arn": "arn:aws:execute-api:us-east-1:900357929763:iaoe8o5c0e/*/*",
            "statement_id": "AllowAPIGatewayInvoke",
            "statement_id_prefix": ""
          },
          "sensitive_values": {}
        },
        {
          "address": "aws_s3_bucket.pge_data_bucket",
          "mode": "managed",
          "type": "aws_s3_bucket",
          "name": "pge_data_bucket",
          "provider_name": "registry.terraform.io/hashicorp/aws",
          "schema_version": 0,
          "values": {
            "acceleration_status": "",
            "acl": null,
            "arn": "arn:aws:s3:::pge-data-bucket",
            "bucket": "pge-data-bucket",
            "bucket_domain_name": "pge-data-bucket.s3.amazonaws.com",
            "bucket_prefix": "",
            "bucket_regional_domain_name": "pge-data-bucket.s3.us-east-1.amazonaws.com",
            "cors_rule": [],
            "force_destroy": false,
            "grant": [
              {
                "id": "38a6d1dcf9481cb7b268cb327c83bc600980dda287ac43350ed03e2883f2282e",
                "permissions": [
                  "FULL_CONTROL"
                ],
                "type": "CanonicalUser",
                "uri": ""
              }
            ],
            "hosted_zone_id": "Z3AQBSTGFYJSTF",
            "id": "pge-data-bucket",
            "lifecycle_rule": [],
            "logging": [],
            "object_lock_configuration": [],
            "object_lock_enabled": false,
            "policy": "",
            "region": "us-east-1",
            "replication_configuration": [],
            "request_payer": "BucketOwner",
            "server_side_encryption_configuration": [
              {
                "rule": [
                  {
                    "apply_server_side_encryption_by_default": [
                      {
                        "kms_master_key_id": "",
                        "sse_algorithm": "AES256"
                      }
                    ],
                    "bucket_key_enabled": false
                  }
                ]
              }
            ],
            "tags": {},
            "tags_all": {},
            "timeouts": null,
            "versioning": [
              {
                "enabled": true,
                "mfa_delete": false
              }
            ],
            "website": [],
            "website_domain": null,
            "website_endpoint": null
          },
          "sensitive_values": {
            "cors_rule": [],
            "grant": [
              {
                "permissions": [
                  false
                ]
              }
            ],
            "lifecycle_rule": [],
            "logging": [],
            "object_lock_configuration": [],
            "replication_configuration": [],
            "server_side_encryption_configuration": [
              {
                "rule": [
                  {
                    "apply_server_side_encryption_by_default": [
                      {}
                    ]
                  }
                ]
              }
            ],
            "tags": {},
            "tags_all": {},
            "versioning": [
              {}
            ],
            "website": []
          }
        },
        {
          "address": "aws_s3_bucket_public_access_block.pge_s3_bucket_public_access_block",
          "mode": "managed",
          "type": "aws_s3_bucket_public_access_block",
          "name": "pge_s3_bucket_public_access_block",
          "provider_name": "registry.terraform.io/hashicorp/aws",
          "schema_version": 0,
          "values": {
            "block_public_acls": true,
            "block_public_policy": true,
            "bucket": "pge-data-bucket",
            "id": "pge-data-bucket",
            "ignore_public_acls": true,
            "restrict_public_buckets": true
          },
          "sensitive_values": {}
        },
        {
          "address": "aws_s3_bucket_versioning.pge_s3_versioning",
          "mode": "managed",
          "type": "aws_s3_bucket_versioning",
          "name": "pge_s3_versioning",
          "provider_name": "registry.terraform.io/hashicorp/aws",
          "schema_version": 0,
          "values": {
            "bucket": "pge-data-bucket",
            "expected_bucket_owner": "",
            "id": "pge-data-bucket",
            "mfa": null,
            "versioning_configuration": [
              {
                "mfa_delete": "",
                "status": "Enabled"
              }
            ]
          },
          "sensitive_values": {
            "versioning_configuration": [
              {}
            ]
          }
        }
      ],
      "child_modules": [
        {
          "resources": [
            {
              "address": "module.docker_build_from_ecr.docker_image.this",
              "mode": "managed",
              "type": "docker_image",
              "name": "this",
              "provider_name": "registry.terraform.io/kreuzwerker/docker",
              "schema_version": 0,
              "values": {
                "build": [
                  {
                    "auth_config": [],
                    "build_arg": null,
                    "build_args": {
                      "provenance": "false"
                    },
                    "build_id": "",
                    "cache_from": [
                      "900357929763.dkr.ecr.us-east-1.amazonaws.com/pge-ecr:latest"
                    ],
                    "cgroup_parent": "",
                    "context": "../",
                    "cpu_period": null,
                    "cpu_quota": null,
                    "cpu_set_cpus": "",
                    "cpu_set_mems": "",
                    "cpu_shares": null,
                    "dockerfile": "Dockerfile",
                    "extra_hosts": [],
                    "force_remove": null,
                    "isolation": "",
                    "label": null,
                    "labels": null,
                    "memory": null,
                    "memory_swap": null,
                    "network_mode": "",
                    "no_cache": null,
                    "platform": "linux/amd64",
                    "pull_parent": null,
                    "remote_context": "",
                    "remove": true,
                    "security_opt": [],
                    "session_id": "",
                    "shm_size": null,
                    "squash": null,
                    "suppress_output": null,
                    "tag": [],
                    "target": "",
                    "ulimit": [],
                    "version": ""
                  }
                ],
                "force_remove": false,
                "id": "sha256:015596983bac83d5e53cff87a113552ad187fc8158a9fb01bd7bfe2c77309c2d900357929763.dkr.ecr.us-east-1.amazonaws.com/pge-ecr",
                "image_id": "sha256:015596983bac83d5e53cff87a113552ad187fc8158a9fb01bd7bfe2c77309c2d",
                "keep_locally": false,
                "name": "900357929763.dkr.ecr.us-east-1.amazonaws.com/pge-ecr",
                "platform": null,
                "pull_triggers": null,
                "repo_digest": "",
                "triggers": {
                  "dir_sha": "eba97a0aa08bb5719fba2a7a7fe7a2215d10b57d"
                }
              },
              "sensitive_values": {
                "build": [
                  {
                    "auth_config": [],
                    "build_args": {},
                    "cache_from": [
                      false
                    ],
                    "extra_hosts": [],
                    "security_opt": [],
                    "tag": [],
                    "ulimit": []
                  }
                ],
                "triggers": {}
              }
            },
            {
              "address": "module.docker_build_from_ecr.docker_registry_image.this",
              "mode": "managed",
              "type": "docker_registry_image",
              "name": "this",
              "provider_name": "registry.terraform.io/kreuzwerker/docker",
              "schema_version": 0,
              "values": {
                "id": "sha256:42448f457502cd9f2d853a7a5332bcec0d8e9fc3da4b97483e428c7c45f6ed0e",
                "insecure_skip_verify": false,
                "keep_remotely": false,
                "name": "900357929763.dkr.ecr.us-east-1.amazonaws.com/pge-ecr",
                "sha256_digest": "sha256:42448f457502cd9f2d853a7a5332bcec0d8e9fc3da4b97483e428c7c45f6ed0e",
                "triggers": {
                  "dir_sha": "eba97a0aa08bb5719fba2a7a7fe7a2215d10b57d"
                }
              },
              "sensitive_values": {
                "triggers": {}
              }
            }
          ],
          "address": "module.docker_build_from_ecr"
        },
        {
          "resources": [
            {
              "address": "module.ecr.aws_ecr_repository.this[0]",
              "mode": "managed",
              "type": "aws_ecr_repository",
              "name": "this",
              "index": 0,
              "provider_name": "registry.terraform.io/hashicorp/aws",
              "schema_version": 0,
              "values": {
                "arn": "arn:aws:ecr:us-east-1:900357929763:repository/pge-ecr",
                "encryption_configuration": [
                  {
                    "encryption_type": "AES256",
                    "kms_key": ""
                  }
                ],
                "force_delete": true,
                "id": "pge-ecr",
                "image_scanning_configuration": [
                  {
                    "scan_on_push": true
                  }
                ],
                "image_tag_mutability": "MUTABLE",
                "name": "pge-ecr",
                "registry_id": "900357929763",
                "repository_url": "900357929763.dkr.ecr.us-east-1.amazonaws.com/pge-ecr",
                "tags": {},
                "tags_all": {},
                "timeouts": null
              },
              "sensitive_values": {
                "encryption_configuration": [
                  {}
                ],
                "image_scanning_configuration": [
                  {}
                ],
                "tags": {},
                "tags_all": {}
              }
            },
            {
              "address": "module.ecr.aws_ecr_repository_policy.this[0]",
              "mode": "managed",
              "type": "aws_ecr_repository_policy",
              "name": "this",
              "index": 0,
              "provider_name": "registry.terraform.io/hashicorp/aws",
              "schema_version": 0,
              "values": {
                "id": "pge-ecr",
                "policy": "{\"Statement\":[{\"Action\":[\"ecr:ListTagsForResource\",\"ecr:ListImages\",\"ecr:GetRepositoryPolicy\",\"ecr:GetLifecyclePolicyPreview\",\"ecr:GetLifecyclePolicy\",\"ecr:GetDownloadUrlForLayer\",\"ecr:GetAuthorizationToken\",\"ecr:DescribeRepositories\",\"ecr:DescribeImages\",\"ecr:DescribeImageScanFindings\",\"ecr:BatchGetImage\",\"ecr:BatchCheckLayerAvailability\"],\"Effect\":\"Allow\",\"Principal\":{\"AWS\":\"arn:aws:iam::900357929763:root\"},\"Sid\":\"PrivateReadOnly\"},{\"Action\":[\"ecr:GetDownloadUrlForLayer\",\"ecr:BatchGetImage\"],\"Condition\":{\"StringLike\":{\"aws:sourceArn\":\"arn:aws:lambda:us-east-1:900357929763:function:pge-lambda-with-docker-build-from-ecr\"}},\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"lambda.amazonaws.com\"},\"Sid\":\"PrivateLambdaReadOnly\"}],\"Version\":\"2012-10-17\"}",
                "registry_id": "900357929763",
                "repository": "pge-ecr"
              },
              "sensitive_values": {}
            }
          ],
          "address": "module.ecr"
        },
        {
          "resources": [
            {
              "address": "module.lambda_function_with_docker_build_from_ecr.aws_cloudwatch_log_group.lambda[0]",
              "mode": "managed",
              "type": "aws_cloudwatch_log_group",
              "name": "lambda",
              "index": 0,
              "provider_name": "registry.terraform.io/hashicorp/aws",
              "schema_version": 0,
              "values": {
                "arn": "arn:aws:logs:us-east-1:900357929763:log-group:/aws/lambda/pge-lambda-with-docker-build-from-ecr",
                "id": "/aws/lambda/pge-lambda-with-docker-build-from-ecr",
                "kms_key_id": "",
                "log_group_class": "STANDARD",
                "name": "/aws/lambda/pge-lambda-with-docker-build-from-ecr",
                "name_prefix": "",
                "retention_in_days": 0,
                "skip_destroy": false,
                "tags": {},
                "tags_all": {}
              },
              "sensitive_values": {
                "tags": {},
                "tags_all": {}
              }
            },
            {
              "address": "module.lambda_function_with_docker_build_from_ecr.aws_iam_role.lambda[0]",
              "mode": "managed",
              "type": "aws_iam_role",
              "name": "lambda",
              "index": 0,
              "provider_name": "registry.terraform.io/hashicorp/aws",
              "schema_version": 0,
              "values": {
                "arn": "arn:aws:iam::900357929763:role/pge-lambda-with-docker-build-from-ecr",
                "assume_role_policy": "{\"Statement\":[{\"Action\":\"sts:AssumeRole\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"lambda.amazonaws.com\"}}],\"Version\":\"2012-10-17\"}",
                "create_date": "2025-02-03T04:29:26Z",
                "description": "",
                "force_detach_policies": true,
                "id": "pge-lambda-with-docker-build-from-ecr",
                "inline_policy": [
                  {
                    "name": "pge-lambda-with-docker-build-from-ecr-logs",
                    "policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Action\":[\"logs:PutLogEvents\",\"logs:CreateLogStream\",\"logs:CreateLogGroup\"],\"Effect\":\"Allow\",\"Resource\":[\"arn:aws:logs:us-east-1:900357929763:log-group:/aws/lambda/pge-lambda-with-docker-build-from-ecr:*:*\",\"arn:aws:logs:us-east-1:900357929763:log-group:/aws/lambda/pge-lambda-with-docker-build-from-ecr:*\"]}]}"
                  }
                ],
                "managed_policy_arns": [
                  "arn:aws:iam::900357929763:policy/pge_data_bucket_policy"
                ],
                "max_session_duration": 3600,
                "name": "pge-lambda-with-docker-build-from-ecr",
                "name_prefix": "",
                "path": "/",
                "permissions_boundary": "",
                "tags": {},
                "tags_all": {},
                "unique_id": "AROA5DIMDXMRQCIZRDTMW"
              },
              "sensitive_values": {
                "inline_policy": [
                  {}
                ],
                "managed_policy_arns": [
                  false
                ],
                "tags": {},
                "tags_all": {}
              }
            },
            {
              "address": "module.lambda_function_with_docker_build_from_ecr.aws_iam_role_policy.logs[0]",
              "mode": "managed",
              "type": "aws_iam_role_policy",
              "name": "logs",
              "index": 0,
              "provider_name": "registry.terraform.io/hashicorp/aws",
              "schema_version": 0,
              "values": {
                "id": "pge-lambda-with-docker-build-from-ecr:pge-lambda-with-docker-build-from-ecr-logs",
                "name": "pge-lambda-with-docker-build-from-ecr-logs",
                "name_prefix": "",
                "policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Action\":[\"logs:PutLogEvents\",\"logs:CreateLogStream\",\"logs:CreateLogGroup\"],\"Effect\":\"Allow\",\"Resource\":[\"arn:aws:logs:us-east-1:900357929763:log-group:/aws/lambda/pge-lambda-with-docker-build-from-ecr:*:*\",\"arn:aws:logs:us-east-1:900357929763:log-group:/aws/lambda/pge-lambda-with-docker-build-from-ecr:*\"]}]}",
                "role": "pge-lambda-with-docker-build-from-ecr"
              },
              "sensitive_values": {}
            },
            {
              "address": "module.lambda_function_with_docker_build_from_ecr.aws_lambda_function.this[0]",
              "mode": "managed",
              "type": "aws_lambda_function",
              "name": "this",
              "index": 0,
              "provider_name": "registry.terraform.io/hashicorp/aws",
              "schema_version": 0,
              "values": {
                "architectures": [
                  "x86_64"
                ],
                "arn": "arn:aws:lambda:us-east-1:900357929763:function:pge-lambda-with-docker-build-from-ecr",
                "code_sha256": "42448f457502cd9f2d853a7a5332bcec0d8e9fc3da4b97483e428c7c45f6ed0e",
                "code_signing_config_arn": "",
                "dead_letter_config": [],
                "description": "PGE Test",
                "environment": [
                  {
                    "variables": {
                      "FILE_OUTPUT": "pge-data-bucket"
                    }
                  }
                ],
                "ephemeral_storage": [
                  {
                    "size": 512
                  }
                ],
                "file_system_config": [],
                "filename": null,
                "function_name": "pge-lambda-with-docker-build-from-ecr",
                "handler": "",
                "id": "pge-lambda-with-docker-build-from-ecr",
                "image_config": [],
                "image_uri": "900357929763.dkr.ecr.us-east-1.amazonaws.com/pge-ecr@sha256:42448f457502cd9f2d853a7a5332bcec0d8e9fc3da4b97483e428c7c45f6ed0e",
                "invoke_arn": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:900357929763:function:pge-lambda-with-docker-build-from-ecr/invocations",
                "kms_key_arn": "",
                "last_modified": "2025-02-04T11:49:21.000+0000",
                "layers": [],
                "logging_config": [
                  {
                    "application_log_level": "",
                    "log_format": "Text",
                    "log_group": "/aws/lambda/pge-lambda-with-docker-build-from-ecr",
                    "system_log_level": ""
                  }
                ],
                "memory_size": 128,
                "package_type": "Image",
                "publish": false,
                "qualified_arn": "arn:aws:lambda:us-east-1:900357929763:function:pge-lambda-with-docker-build-from-ecr:$LATEST",
                "qualified_invoke_arn": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:900357929763:function:pge-lambda-with-docker-build-from-ecr:$LATEST/invocations",
                "replace_security_groups_on_destroy": null,
                "replacement_security_group_ids": null,
                "reserved_concurrent_executions": -1,
                "role": "arn:aws:iam::900357929763:role/pge-lambda-with-docker-build-from-ecr",
                "runtime": "",
                "s3_bucket": null,
                "s3_key": null,
                "s3_object_version": null,
                "signing_job_arn": "",
                "signing_profile_version_arn": "",
                "skip_destroy": false,
                "snap_start": [],
                "source_code_hash": "",
                "source_code_size": 0,
                "tags": {
                  "terraform-aws-modules": "lambda"
                },
                "tags_all": {
                  "terraform-aws-modules": "lambda"
                },
                "timeout": 3,
                "timeouts": null,
                "tracing_config": [
                  {
                    "mode": "PassThrough"
                  }
                ],
                "version": "$LATEST",
                "vpc_config": []
              },
              "sensitive_values": {
                "architectures": [
                  false
                ],
                "dead_letter_config": [],
                "environment": [
                  {
                    "variables": {}
                  }
                ],
                "ephemeral_storage": [
                  {}
                ],
                "file_system_config": [],
                "image_config": [],
                "layers": [],
                "logging_config": [
                  {}
                ],
                "snap_start": [],
                "tags": {},
                "tags_all": {},
                "tracing_config": [
                  {}
                ],
                "vpc_config": []
              }
            }
          ],
          "address": "module.lambda_function_with_docker_build_from_ecr"
        }
      ]
    }
  },
  "resource_changes": [
    {
      "address": "aws_api_gateway_account.api_gateway_account",
      "mode": "managed",
      "type": "aws_api_gateway_account",
      "name": "api_gateway_account",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "api_key_version": "4",
          "cloudwatch_role_arn": "arn:aws:iam::900357929763:role/api_gateway_cloudwatch_global",
          "features": [
            "UsagePlans"
          ],
          "id": "api-gateway-account",
          "reset_on_delete": null,
          "throttle_settings": [
            {
              "burst_limit": 5000,
              "rate_limit": 10000
            }
          ]
        },
        "after": {
          "api_key_version": "4",
          "cloudwatch_role_arn": "arn:aws:iam::900357929763:role/api_gateway_cloudwatch_global",
          "features": [
            "UsagePlans"
          ],
          "id": "api-gateway-account",
          "reset_on_delete": null,
          "throttle_settings": [
            {
              "burst_limit": 5000,
              "rate_limit": 10000
            }
          ]
        },
        "after_unknown": {},
        "before_sensitive": {
          "features": [
            false
          ],
          "throttle_settings": [
            {}
          ]
        },
        "after_sensitive": {
          "features": [
            false
          ],
          "throttle_settings": [
            {}
          ]
        }
      }
    },
    {
      "address": "aws_api_gateway_deployment.pge_deployment",
      "mode": "managed",
      "type": "aws_api_gateway_deployment",
      "name": "pge_deployment",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "canary_settings": [],
          "created_date": "2025-02-03T14:35:24Z",
          "description": "PGE Deployment",
          "execution_arn": "arn:aws:execute-api:us-east-1:900357929763:iaoe8o5c0e/",
          "id": "kd8dub",
          "invoke_url": "https://iaoe8o5c0e.execute-api.us-east-1.amazonaws.com/",
          "rest_api_id": "iaoe8o5c0e",
          "stage_description": null,
          "stage_name": null,
          "triggers": {
            "redeployment": "44ef8d8a8234f34b10a0a2f9708979366dc866df"
          },
          "variables": null
        },
        "after": {
          "canary_settings": [],
          "created_date": "2025-02-03T14:35:24Z",
          "description": "PGE Deployment",
          "execution_arn": "arn:aws:execute-api:us-east-1:900357929763:iaoe8o5c0e/",
          "id": "kd8dub",
          "invoke_url": "https://iaoe8o5c0e.execute-api.us-east-1.amazonaws.com/",
          "rest_api_id": "iaoe8o5c0e",
          "stage_description": null,
          "stage_name": null,
          "triggers": {
            "redeployment": "44ef8d8a8234f34b10a0a2f9708979366dc866df"
          },
          "variables": null
        },
        "after_unknown": {},
        "before_sensitive": {
          "canary_settings": [],
          "triggers": {}
        },
        "after_sensitive": {
          "canary_settings": [],
          "triggers": {}
        }
      }
    },
    {
      "address": "aws_api_gateway_integration.pge_integration_get",
      "mode": "managed",
      "type": "aws_api_gateway_integration",
      "name": "pge_integration_get",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "cache_key_parameters": [],
          "cache_namespace": "gl9g61",
          "connection_id": "",
          "connection_type": "INTERNET",
          "content_handling": "",
          "credentials": "",
          "http_method": "GET",
          "id": "agi-iaoe8o5c0e-gl9g61-GET",
          "integration_http_method": "POST",
          "passthrough_behavior": "WHEN_NO_MATCH",
          "request_parameters": {},
          "request_templates": {},
          "resource_id": "gl9g61",
          "rest_api_id": "iaoe8o5c0e",
          "timeout_milliseconds": 29000,
          "tls_config": [],
          "type": "AWS_PROXY",
          "uri": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:900357929763:function:pge-lambda-with-docker-build-from-ecr/invocations"
        },
        "after": {
          "cache_key_parameters": [],
          "cache_namespace": "gl9g61",
          "connection_id": "",
          "connection_type": "INTERNET",
          "content_handling": "",
          "credentials": "",
          "http_method": "GET",
          "id": "agi-iaoe8o5c0e-gl9g61-GET",
          "integration_http_method": "POST",
          "passthrough_behavior": "WHEN_NO_MATCH",
          "request_parameters": {},
          "request_templates": {},
          "resource_id": "gl9g61",
          "rest_api_id": "iaoe8o5c0e",
          "timeout_milliseconds": 29000,
          "tls_config": [],
          "type": "AWS_PROXY",
          "uri": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:900357929763:function:pge-lambda-with-docker-build-from-ecr/invocations"
        },
        "after_unknown": {},
        "before_sensitive": {
          "cache_key_parameters": [],
          "request_parameters": {},
          "request_templates": {},
          "tls_config": []
        },
        "after_sensitive": {
          "cache_key_parameters": [],
          "request_parameters": {},
          "request_templates": {},
          "tls_config": []
        }
      }
    },
    {
      "address": "aws_api_gateway_integration.pge_integration_post",
      "mode": "managed",
      "type": "aws_api_gateway_integration",
      "name": "pge_integration_post",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "cache_key_parameters": [],
          "cache_namespace": "wwpvml",
          "connection_id": "",
          "connection_type": "INTERNET",
          "content_handling": "",
          "credentials": "",
          "http_method": "POST",
          "id": "agi-iaoe8o5c0e-wwpvml-POST",
          "integration_http_method": "POST",
          "passthrough_behavior": "WHEN_NO_MATCH",
          "request_parameters": {},
          "request_templates": {},
          "resource_id": "wwpvml",
          "rest_api_id": "iaoe8o5c0e",
          "timeout_milliseconds": 29000,
          "tls_config": [],
          "type": "AWS_PROXY",
          "uri": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:900357929763:function:pge-lambda-with-docker-build-from-ecr/invocations"
        },
        "after": {
          "cache_key_parameters": [],
          "cache_namespace": "wwpvml",
          "connection_id": "",
          "connection_type": "INTERNET",
          "content_handling": "",
          "credentials": "",
          "http_method": "POST",
          "id": "agi-iaoe8o5c0e-wwpvml-POST",
          "integration_http_method": "POST",
          "passthrough_behavior": "WHEN_NO_MATCH",
          "request_parameters": {},
          "request_templates": {},
          "resource_id": "wwpvml",
          "rest_api_id": "iaoe8o5c0e",
          "timeout_milliseconds": 29000,
          "tls_config": [],
          "type": "AWS_PROXY",
          "uri": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:900357929763:function:pge-lambda-with-docker-build-from-ecr/invocations"
        },
        "after_unknown": {},
        "before_sensitive": {
          "cache_key_parameters": [],
          "request_parameters": {},
          "request_templates": {},
          "tls_config": []
        },
        "after_sensitive": {
          "cache_key_parameters": [],
          "request_parameters": {},
          "request_templates": {},
          "tls_config": []
        }
      }
    },
    {
      "address": "aws_api_gateway_method.pge_method_get",
      "mode": "managed",
      "type": "aws_api_gateway_method",
      "name": "pge_method_get",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "api_key_required": false,
          "authorization": "NONE",
          "authorization_scopes": [],
          "authorizer_id": "",
          "http_method": "GET",
          "id": "agm-iaoe8o5c0e-gl9g61-GET",
          "operation_name": "",
          "request_models": {},
          "request_parameters": {},
          "request_validator_id": "",
          "resource_id": "gl9g61",
          "rest_api_id": "iaoe8o5c0e"
        },
        "after": {
          "api_key_required": false,
          "authorization": "NONE",
          "authorization_scopes": [],
          "authorizer_id": "",
          "http_method": "GET",
          "id": "agm-iaoe8o5c0e-gl9g61-GET",
          "operation_name": "",
          "request_models": {},
          "request_parameters": {},
          "request_validator_id": "",
          "resource_id": "gl9g61",
          "rest_api_id": "iaoe8o5c0e"
        },
        "after_unknown": {},
        "before_sensitive": {
          "authorization_scopes": [],
          "request_models": {},
          "request_parameters": {}
        },
        "after_sensitive": {
          "authorization_scopes": [],
          "request_models": {},
          "request_parameters": {}
        }
      }
    },
    {
      "address": "aws_api_gateway_method.pge_method_post",
      "mode": "managed",
      "type": "aws_api_gateway_method",
      "name": "pge_method_post",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "api_key_required": false,
          "authorization": "NONE",
          "authorization_scopes": [],
          "authorizer_id": "",
          "http_method": "POST",
          "id": "agm-iaoe8o5c0e-wwpvml-POST",
          "operation_name": "",
          "request_models": {},
          "request_parameters": {},
          "request_validator_id": "",
          "resource_id": "wwpvml",
          "rest_api_id": "iaoe8o5c0e"
        },
        "after": {
          "api_key_required": false,
          "authorization": "NONE",
          "authorization_scopes": [],
          "authorizer_id": "",
          "http_method": "POST",
          "id": "agm-iaoe8o5c0e-wwpvml-POST",
          "operation_name": "",
          "request_models": {},
          "request_parameters": {},
          "request_validator_id": "",
          "resource_id": "wwpvml",
          "rest_api_id": "iaoe8o5c0e"
        },
        "after_unknown": {},
        "before_sensitive": {
          "authorization_scopes": [],
          "request_models": {},
          "request_parameters": {}
        },
        "after_sensitive": {
          "authorization_scopes": [],
          "request_models": {},
          "request_parameters": {}
        }
      }
    },
    {
      "address": "aws_api_gateway_method_settings.pge_method_settings",
      "mode": "managed",
      "type": "aws_api_gateway_method_settings",
      "name": "pge_method_settings",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "id": "iaoe8o5c0e-pge-*/*",
          "method_path": "*/*",
          "rest_api_id": "iaoe8o5c0e",
          "settings": [
            {
              "cache_data_encrypted": false,
              "cache_ttl_in_seconds": 300,
              "caching_enabled": false,
              "data_trace_enabled": true,
              "logging_level": "INFO",
              "metrics_enabled": false,
              "require_authorization_for_cache_control": true,
              "throttling_burst_limit": -1,
              "throttling_rate_limit": -1,
              "unauthorized_cache_control_header_strategy": "SUCCEED_WITH_RESPONSE_HEADER"
            }
          ],
          "stage_name": "pge"
        },
        "after": {
          "id": "iaoe8o5c0e-pge-*/*",
          "method_path": "*/*",
          "rest_api_id": "iaoe8o5c0e",
          "settings": [
            {
              "cache_data_encrypted": false,
              "cache_ttl_in_seconds": 300,
              "caching_enabled": false,
              "data_trace_enabled": true,
              "logging_level": "INFO",
              "metrics_enabled": false,
              "require_authorization_for_cache_control": true,
              "throttling_burst_limit": -1,
              "throttling_rate_limit": -1,
              "unauthorized_cache_control_header_strategy": "SUCCEED_WITH_RESPONSE_HEADER"
            }
          ],
          "stage_name": "pge"
        },
        "after_unknown": {},
        "before_sensitive": {
          "settings": [
            {}
          ]
        },
        "after_sensitive": {
          "settings": [
            {}
          ]
        }
      }
    },
    {
      "address": "aws_api_gateway_resource.pge_resource_data",
      "mode": "managed",
      "type": "aws_api_gateway_resource",
      "name": "pge_resource_data",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "id": "gl9g61",
          "parent_id": "i6dhoza7l1",
          "path": "/data",
          "path_part": "data",
          "rest_api_id": "iaoe8o5c0e"
        },
        "after": {
          "id": "gl9g61",
          "parent_id": "i6dhoza7l1",
          "path": "/data",
          "path_part": "data",
          "rest_api_id": "iaoe8o5c0e"
        },
        "after_unknown": {},
        "before_sensitive": {},
        "after_sensitive": {}
      }
    },
    {
      "address": "aws_api_gateway_resource.pge_resource_token",
      "mode": "managed",
      "type": "aws_api_gateway_resource",
      "name": "pge_resource_token",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "id": "wwpvml",
          "parent_id": "i6dhoza7l1",
          "path": "/token",
          "path_part": "token",
          "rest_api_id": "iaoe8o5c0e"
        },
        "after": {
          "id": "wwpvml",
          "parent_id": "i6dhoza7l1",
          "path": "/token",
          "path_part": "token",
          "rest_api_id": "iaoe8o5c0e"
        },
        "after_unknown": {},
        "before_sensitive": {},
        "after_sensitive": {}
      }
    },
    {
      "address": "aws_api_gateway_rest_api.pge_rest_api",
      "mode": "managed",
      "type": "aws_api_gateway_rest_api",
      "name": "pge_rest_api",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "api_key_source": "HEADER",
          "arn": "arn:aws:apigateway:us-east-1::/restapis/iaoe8o5c0e",
          "binary_media_types": [],
          "body": null,
          "created_date": "2025-02-03T09:42:01Z",
          "description": "PGE REST API",
          "disable_execute_api_endpoint": false,
          "endpoint_configuration": [
            {
              "types": [
                "REGIONAL"
              ],
              "vpc_endpoint_ids": []
            }
          ],
          "execution_arn": "arn:aws:execute-api:us-east-1:900357929763:iaoe8o5c0e",
          "fail_on_warnings": null,
          "id": "iaoe8o5c0e",
          "minimum_compression_size": "",
          "name": "pge-rest-api",
          "parameters": null,
          "policy": "",
          "put_rest_api_mode": null,
          "root_resource_id": "i6dhoza7l1",
          "tags": {},
          "tags_all": {}
        },
        "after": {
          "api_key_source": "HEADER",
          "arn": "arn:aws:apigateway:us-east-1::/restapis/iaoe8o5c0e",
          "binary_media_types": [],
          "body": null,
          "created_date": "2025-02-03T09:42:01Z",
          "description": "PGE REST API",
          "disable_execute_api_endpoint": false,
          "endpoint_configuration": [
            {
              "types": [
                "REGIONAL"
              ],
              "vpc_endpoint_ids": []
            }
          ],
          "execution_arn": "arn:aws:execute-api:us-east-1:900357929763:iaoe8o5c0e",
          "fail_on_warnings": null,
          "id": "iaoe8o5c0e",
          "minimum_compression_size": "",
          "name": "pge-rest-api",
          "parameters": null,
          "policy": "",
          "put_rest_api_mode": null,
          "root_resource_id": "i6dhoza7l1",
          "tags": {},
          "tags_all": {}
        },
        "after_unknown": {},
        "before_sensitive": {
          "binary_media_types": [],
          "endpoint_configuration": [
            {
              "types": [
                false
              ],
              "vpc_endpoint_ids": []
            }
          ],
          "tags": {},
          "tags_all": {}
        },
        "after_sensitive": {
          "binary_media_types": [],
          "endpoint_configuration": [
            {
              "types": [
                false
              ],
              "vpc_endpoint_ids": []
            }
          ],
          "tags": {},
          "tags_all": {}
        }
      }
    },
    {
      "address": "aws_api_gateway_stage.pge_stage",
      "mode": "managed",
      "type": "aws_api_gateway_stage",
      "name": "pge_stage",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "access_log_settings": [
            {
              "destination_arn": "arn:aws:logs:us-east-1:900357929763:log-group:API-Gateway-Execution-Logs_iaoe8o5c0e/pge",
              "format": "{\"caller\":\"$context.identity.caller\",\"extendedRequestId\":\"$context.extendedRequestId\",\"httpMethod\":\"$context.httpMethod\",\"ip\":\"$context.identity.sourceIp\",\"protocol\":\"$context.protocol\",\"requestId\":\"$context.requestId\",\"requestTime\":\"$context.requestTime\",\"resourcePath\":\"$context.resourcePath\",\"responseLatency\":\"$context.responseLatency\",\"responseLength\":\"$context.responseLength\",\"status\":\"$context.status\",\"user\":\"$context.identity.user\"}"
            }
          ],
          "arn": "arn:aws:apigateway:us-east-1::/restapis/iaoe8o5c0e/stages/pge",
          "cache_cluster_enabled": false,
          "cache_cluster_size": "",
          "canary_settings": [],
          "client_certificate_id": "",
          "deployment_id": "kd8dub",
          "description": "",
          "documentation_version": "",
          "execution_arn": "arn:aws:execute-api:us-east-1:900357929763:iaoe8o5c0e/pge",
          "id": "ags-iaoe8o5c0e-pge",
          "invoke_url": "https://iaoe8o5c0e.execute-api.us-east-1.amazonaws.com/pge",
          "rest_api_id": "iaoe8o5c0e",
          "stage_name": "pge",
          "tags": {},
          "tags_all": {},
          "variables": {},
          "web_acl_arn": "",
          "xray_tracing_enabled": false
        },
        "after": {
          "access_log_settings": [
            {
              "destination_arn": "arn:aws:logs:us-east-1:900357929763:log-group:API-Gateway-Execution-Logs_iaoe8o5c0e/pge",
              "format": "{\"caller\":\"$context.identity.caller\",\"extendedRequestId\":\"$context.extendedRequestId\",\"httpMethod\":\"$context.httpMethod\",\"ip\":\"$context.identity.sourceIp\",\"protocol\":\"$context.protocol\",\"requestId\":\"$context.requestId\",\"requestTime\":\"$context.requestTime\",\"resourcePath\":\"$context.resourcePath\",\"responseLatency\":\"$context.responseLatency\",\"responseLength\":\"$context.responseLength\",\"status\":\"$context.status\",\"user\":\"$context.identity.user\"}"
            }
          ],
          "arn": "arn:aws:apigateway:us-east-1::/restapis/iaoe8o5c0e/stages/pge",
          "cache_cluster_enabled": false,
          "cache_cluster_size": "",
          "canary_settings": [],
          "client_certificate_id": "",
          "deployment_id": "kd8dub",
          "description": "",
          "documentation_version": "",
          "execution_arn": "arn:aws:execute-api:us-east-1:900357929763:iaoe8o5c0e/pge",
          "id": "ags-iaoe8o5c0e-pge",
          "invoke_url": "https://iaoe8o5c0e.execute-api.us-east-1.amazonaws.com/pge",
          "rest_api_id": "iaoe8o5c0e",
          "stage_name": "pge",
          "tags": {},
          "tags_all": {},
          "variables": {},
          "web_acl_arn": "",
          "xray_tracing_enabled": false
        },
        "after_unknown": {},
        "before_sensitive": {
          "access_log_settings": [
            {}
          ],
          "canary_settings": [],
          "tags": {},
          "tags_all": {},
          "variables": {}
        },
        "after_sensitive": {
          "access_log_settings": [
            {}
          ],
          "canary_settings": [],
          "tags": {},
          "tags_all": {},
          "variables": {}
        }
      }
    },
    {
      "address": "aws_cloudwatch_log_group.pge_api_log_group",
      "mode": "managed",
      "type": "aws_cloudwatch_log_group",
      "name": "pge_api_log_group",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "arn": "arn:aws:logs:us-east-1:900357929763:log-group:API-Gateway-Execution-Logs_iaoe8o5c0e/pge",
          "id": "API-Gateway-Execution-Logs_iaoe8o5c0e/pge",
          "kms_key_id": "",
          "log_group_class": "STANDARD",
          "name": "API-Gateway-Execution-Logs_iaoe8o5c0e/pge",
          "name_prefix": "",
          "retention_in_days": 14,
          "skip_destroy": false,
          "tags": {},
          "tags_all": {}
        },
        "after": {
          "arn": "arn:aws:logs:us-east-1:900357929763:log-group:API-Gateway-Execution-Logs_iaoe8o5c0e/pge",
          "id": "API-Gateway-Execution-Logs_iaoe8o5c0e/pge",
          "kms_key_id": "",
          "log_group_class": "STANDARD",
          "name": "API-Gateway-Execution-Logs_iaoe8o5c0e/pge",
          "name_prefix": "",
          "retention_in_days": 14,
          "skip_destroy": false,
          "tags": {},
          "tags_all": {}
        },
        "after_unknown": {},
        "before_sensitive": {
          "tags": {},
          "tags_all": {}
        },
        "after_sensitive": {
          "tags": {},
          "tags_all": {}
        }
      }
    },
    {
      "address": "aws_iam_policy.pge_data_bucket_policy",
      "mode": "managed",
      "type": "aws_iam_policy",
      "name": "pge_data_bucket_policy",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "arn": "arn:aws:iam::900357929763:policy/pge_data_bucket_policy",
          "attachment_count": 1,
          "description": "Policy for PGE data bucket",
          "id": "arn:aws:iam::900357929763:policy/pge_data_bucket_policy",
          "name": "pge_data_bucket_policy",
          "name_prefix": "",
          "path": "/",
          "policy": "{\"Statement\":[{\"Action\":[\"s3:PutObject\",\"s3:ListBucket\",\"s3:GetObject\"],\"Effect\":\"Allow\",\"Resource\":[\"arn:aws:s3:::pge-data-bucket/*\",\"arn:aws:s3:::pge-data-bucket\"]}],\"Version\":\"2012-10-17\"}",
          "policy_id": "ANPA5DIMDXMRRHP3F7HJA",
          "tags": {},
          "tags_all": {}
        },
        "after": {
          "arn": "arn:aws:iam::900357929763:policy/pge_data_bucket_policy",
          "attachment_count": 1,
          "description": "Policy for PGE data bucket",
          "id": "arn:aws:iam::900357929763:policy/pge_data_bucket_policy",
          "name": "pge_data_bucket_policy",
          "name_prefix": "",
          "path": "/",
          "policy": "{\"Statement\":[{\"Action\":[\"s3:PutObject\",\"s3:ListBucket\",\"s3:GetObject\"],\"Effect\":\"Allow\",\"Resource\":[\"arn:aws:s3:::pge-data-bucket/*\",\"arn:aws:s3:::pge-data-bucket\"]}],\"Version\":\"2012-10-17\"}",
          "policy_id": "ANPA5DIMDXMRRHP3F7HJA",
          "tags": {},
          "tags_all": {}
        },
        "after_unknown": {},
        "before_sensitive": {
          "tags": {},
          "tags_all": {}
        },
        "after_sensitive": {
          "tags": {},
          "tags_all": {}
        }
      }
    },
    {
      "address": "aws_iam_policy_attachment.pge_data_bucket_policy_attachment",
      "mode": "managed",
      "type": "aws_iam_policy_attachment",
      "name": "pge_data_bucket_policy_attachment",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "groups": [],
          "id": "pge_data_bucket_policy_attachment",
          "name": "pge_data_bucket_policy_attachment",
          "policy_arn": "arn:aws:iam::900357929763:policy/pge_data_bucket_policy",
          "roles": [
            "pge-lambda-with-docker-build-from-ecr"
          ],
          "users": []
        },
        "after": {
          "groups": [],
          "id": "pge_data_bucket_policy_attachment",
          "name": "pge_data_bucket_policy_attachment",
          "policy_arn": "arn:aws:iam::900357929763:policy/pge_data_bucket_policy",
          "roles": [
            "pge-lambda-with-docker-build-from-ecr"
          ],
          "users": []
        },
        "after_unknown": {},
        "before_sensitive": {
          "groups": [],
          "roles": [
            false
          ],
          "users": []
        },
        "after_sensitive": {
          "groups": [],
          "roles": [
            false
          ],
          "users": []
        }
      }
    },
    {
      "address": "aws_iam_role.cloudwatch",
      "mode": "managed",
      "type": "aws_iam_role",
      "name": "cloudwatch",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "arn": "arn:aws:iam::900357929763:role/api_gateway_cloudwatch_global",
          "assume_role_policy": "{\"Statement\":[{\"Action\":\"sts:AssumeRole\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"apigateway.amazonaws.com\"}}],\"Version\":\"2012-10-17\"}",
          "create_date": "2025-02-03T13:34:25Z",
          "description": "",
          "force_detach_policies": false,
          "id": "api_gateway_cloudwatch_global",
          "inline_policy": [
            {
              "name": "cloudwatch_global",
              "policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Action\":[\"logs:TestMetricFilter\",\"logs:PutRetentionPolicy\",\"logs:PutLogEvents\",\"logs:GetLogEvents\",\"logs:FilterLogEvents\",\"logs:DescribeLogStreams\",\"logs:DescribeLogGroups\",\"logs:DeleteLogStream\",\"logs:DeleteLogGroup\",\"logs:CreateLogStream\",\"logs:CreateLogGroup\"],\"Effect\":\"Allow\",\"Resource\":\"*\"}]}"
            }
          ],
          "managed_policy_arns": [],
          "max_session_duration": 3600,
          "name": "api_gateway_cloudwatch_global",
          "name_prefix": "",
          "path": "/",
          "permissions_boundary": "",
          "tags": {},
          "tags_all": {},
          "unique_id": "AROA5DIMDXMRXGIJJZJNO"
        },
        "after": {
          "arn": "arn:aws:iam::900357929763:role/api_gateway_cloudwatch_global",
          "assume_role_policy": "{\"Statement\":[{\"Action\":\"sts:AssumeRole\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"apigateway.amazonaws.com\"}}],\"Version\":\"2012-10-17\"}",
          "create_date": "2025-02-03T13:34:25Z",
          "description": "",
          "force_detach_policies": false,
          "id": "api_gateway_cloudwatch_global",
          "inline_policy": [
            {
              "name": "cloudwatch_global",
              "policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Action\":[\"logs:TestMetricFilter\",\"logs:PutRetentionPolicy\",\"logs:PutLogEvents\",\"logs:GetLogEvents\",\"logs:FilterLogEvents\",\"logs:DescribeLogStreams\",\"logs:DescribeLogGroups\",\"logs:DeleteLogStream\",\"logs:DeleteLogGroup\",\"logs:CreateLogStream\",\"logs:CreateLogGroup\"],\"Effect\":\"Allow\",\"Resource\":\"*\"}]}"
            }
          ],
          "managed_policy_arns": [],
          "max_session_duration": 3600,
          "name": "api_gateway_cloudwatch_global",
          "name_prefix": "",
          "path": "/",
          "permissions_boundary": "",
          "tags": {},
          "tags_all": {},
          "unique_id": "AROA5DIMDXMRXGIJJZJNO"
        },
        "after_unknown": {},
        "before_sensitive": {
          "inline_policy": [
            {}
          ],
          "managed_policy_arns": [],
          "tags": {},
          "tags_all": {}
        },
        "after_sensitive": {
          "inline_policy": [
            {}
          ],
          "managed_policy_arns": [],
          "tags": {},
          "tags_all": {}
        }
      }
    },
    {
      "address": "aws_iam_role_policy.cloudwatch",
      "mode": "managed",
      "type": "aws_iam_role_policy",
      "name": "cloudwatch",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "id": "api_gateway_cloudwatch_global:cloudwatch_global",
          "name": "cloudwatch_global",
          "name_prefix": "",
          "policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Action\":[\"logs:TestMetricFilter\",\"logs:PutRetentionPolicy\",\"logs:PutLogEvents\",\"logs:GetLogEvents\",\"logs:FilterLogEvents\",\"logs:DescribeLogStreams\",\"logs:DescribeLogGroups\",\"logs:DeleteLogStream\",\"logs:DeleteLogGroup\",\"logs:CreateLogStream\",\"logs:CreateLogGroup\"],\"Effect\":\"Allow\",\"Resource\":\"*\"}]}",
          "role": "api_gateway_cloudwatch_global"
        },
        "after": {
          "id": "api_gateway_cloudwatch_global:cloudwatch_global",
          "name": "cloudwatch_global",
          "name_prefix": "",
          "policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Action\":[\"logs:TestMetricFilter\",\"logs:PutRetentionPolicy\",\"logs:PutLogEvents\",\"logs:GetLogEvents\",\"logs:FilterLogEvents\",\"logs:DescribeLogStreams\",\"logs:DescribeLogGroups\",\"logs:DeleteLogStream\",\"logs:DeleteLogGroup\",\"logs:CreateLogStream\",\"logs:CreateLogGroup\"],\"Effect\":\"Allow\",\"Resource\":\"*\"}]}",
          "role": "api_gateway_cloudwatch_global"
        },
        "after_unknown": {},
        "before_sensitive": {},
        "after_sensitive": {}
      }
    },
    {
      "address": "aws_lambda_permission.pge_lambda_permission",
      "mode": "managed",
      "type": "aws_lambda_permission",
      "name": "pge_lambda_permission",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "action": "lambda:InvokeFunction",
          "event_source_token": null,
          "function_name": "pge-lambda-with-docker-build-from-ecr",
          "function_url_auth_type": null,
          "id": "AllowAPIGatewayInvoke",
          "principal": "apigateway.amazonaws.com",
          "principal_org_id": null,
          "qualifier": "",
          "source_account": null,
          "source_arn": "arn:aws:execute-api:us-east-1:900357929763:iaoe8o5c0e/*/*",
          "statement_id": "AllowAPIGatewayInvoke",
          "statement_id_prefix": ""
        },
        "after": {
          "action": "lambda:InvokeFunction",
          "event_source_token": null,
          "function_name": "pge-lambda-with-docker-build-from-ecr",
          "function_url_auth_type": null,
          "id": "AllowAPIGatewayInvoke",
          "principal": "apigateway.amazonaws.com",
          "principal_org_id": null,
          "qualifier": "",
          "source_account": null,
          "source_arn": "arn:aws:execute-api:us-east-1:900357929763:iaoe8o5c0e/*/*",
          "statement_id": "AllowAPIGatewayInvoke",
          "statement_id_prefix": ""
        },
        "after_unknown": {},
        "before_sensitive": {},
        "after_sensitive": {}
      }
    },
    {
      "address": "aws_s3_bucket.pge_data_bucket",
      "mode": "managed",
      "type": "aws_s3_bucket",
      "name": "pge_data_bucket",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "acceleration_status": "",
          "acl": null,
          "arn": "arn:aws:s3:::pge-data-bucket",
          "bucket": "pge-data-bucket",
          "bucket_domain_name": "pge-data-bucket.s3.amazonaws.com",
          "bucket_prefix": "",
          "bucket_regional_domain_name": "pge-data-bucket.s3.us-east-1.amazonaws.com",
          "cors_rule": [],
          "force_destroy": false,
          "grant": [
            {
              "id": "38a6d1dcf9481cb7b268cb327c83bc600980dda287ac43350ed03e2883f2282e",
              "permissions": [
                "FULL_CONTROL"
              ],
              "type": "CanonicalUser",
              "uri": ""
            }
          ],
          "hosted_zone_id": "Z3AQBSTGFYJSTF",
          "id": "pge-data-bucket",
          "lifecycle_rule": [],
          "logging": [],
          "object_lock_configuration": [],
          "object_lock_enabled": false,
          "policy": "",
          "region": "us-east-1",
          "replication_configuration": [],
          "request_payer": "BucketOwner",
          "server_side_encryption_configuration": [
            {
              "rule": [
                {
                  "apply_server_side_encryption_by_default": [
                    {
                      "kms_master_key_id": "",
                      "sse_algorithm": "AES256"
                    }
                  ],
                  "bucket_key_enabled": false
                }
              ]
            }
          ],
          "tags": {},
          "tags_all": {},
          "timeouts": null,
          "versioning": [
            {
              "enabled": true,
              "mfa_delete": false
            }
          ],
          "website": [],
          "website_domain": null,
          "website_endpoint": null
        },
        "after": {
          "acceleration_status": "",
          "acl": null,
          "arn": "arn:aws:s3:::pge-data-bucket",
          "bucket": "pge-data-bucket",
          "bucket_domain_name": "pge-data-bucket.s3.amazonaws.com",
          "bucket_prefix": "",
          "bucket_regional_domain_name": "pge-data-bucket.s3.us-east-1.amazonaws.com",
          "cors_rule": [],
          "force_destroy": false,
          "grant": [
            {
              "id": "38a6d1dcf9481cb7b268cb327c83bc600980dda287ac43350ed03e2883f2282e",
              "permissions": [
                "FULL_CONTROL"
              ],
              "type": "CanonicalUser",
              "uri": ""
            }
          ],
          "hosted_zone_id": "Z3AQBSTGFYJSTF",
          "id": "pge-data-bucket",
          "lifecycle_rule": [],
          "logging": [],
          "object_lock_configuration": [],
          "object_lock_enabled": false,
          "policy": "",
          "region": "us-east-1",
          "replication_configuration": [],
          "request_payer": "BucketOwner",
          "server_side_encryption_configuration": [
            {
              "rule": [
                {
                  "apply_server_side_encryption_by_default": [
                    {
                      "kms_master_key_id": "",
                      "sse_algorithm": "AES256"
                    }
                  ],
                  "bucket_key_enabled": false
                }
              ]
            }
          ],
          "tags": {},
          "tags_all": {},
          "timeouts": null,
          "versioning": [
            {
              "enabled": true,
              "mfa_delete": false
            }
          ],
          "website": [],
          "website_domain": null,
          "website_endpoint": null
        },
        "after_unknown": {},
        "before_sensitive": {
          "cors_rule": [],
          "grant": [
            {
              "permissions": [
                false
              ]
            }
          ],
          "lifecycle_rule": [],
          "logging": [],
          "object_lock_configuration": [],
          "replication_configuration": [],
          "server_side_encryption_configuration": [
            {
              "rule": [
                {
                  "apply_server_side_encryption_by_default": [
                    {}
                  ]
                }
              ]
            }
          ],
          "tags": {},
          "tags_all": {},
          "versioning": [
            {}
          ],
          "website": []
        },
        "after_sensitive": {
          "cors_rule": [],
          "grant": [
            {
              "permissions": [
                false
              ]
            }
          ],
          "lifecycle_rule": [],
          "logging": [],
          "object_lock_configuration": [],
          "replication_configuration": [],
          "server_side_encryption_configuration": [
            {
              "rule": [
                {
                  "apply_server_side_encryption_by_default": [
                    {}
                  ]
                }
              ]
            }
          ],
          "tags": {},
          "tags_all": {},
          "versioning": [
            {}
          ],
          "website": []
        }
      }
    },
    {
      "address": "aws_s3_bucket_public_access_block.pge_s3_bucket_public_access_block",
      "mode": "managed",
      "type": "aws_s3_bucket_public_access_block",
      "name": "pge_s3_bucket_public_access_block",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "block_public_acls": true,
          "block_public_policy": true,
          "bucket": "pge-data-bucket",
          "id": "pge-data-bucket",
          "ignore_public_acls": true,
          "restrict_public_buckets": true
        },
        "after": {
          "block_public_acls": true,
          "block_public_policy": true,
          "bucket": "pge-data-bucket",
          "id": "pge-data-bucket",
          "ignore_public_acls": true,
          "restrict_public_buckets": true
        },
        "after_unknown": {},
        "before_sensitive": {},
        "after_sensitive": {}
      }
    },
    {
      "address": "aws_s3_bucket_versioning.pge_s3_versioning",
      "mode": "managed",
      "type": "aws_s3_bucket_versioning",
      "name": "pge_s3_versioning",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "bucket": "pge-data-bucket",
          "expected_bucket_owner": "",
          "id": "pge-data-bucket",
          "mfa": null,
          "versioning_configuration": [
            {
              "mfa_delete": "",
              "status": "Enabled"
            }
          ]
        },
        "after": {
          "bucket": "pge-data-bucket",
          "expected_bucket_owner": "",
          "id": "pge-data-bucket",
          "mfa": null,
          "versioning_configuration": [
            {
              "mfa_delete": "",
              "status": "Enabled"
            }
          ]
        },
        "after_unknown": {},
        "before_sensitive": {
          "versioning_configuration": [
            {}
          ]
        },
        "after_sensitive": {
          "versioning_configuration": [
            {}
          ]
        }
      }
    },
    {
      "address": "module.docker_build_from_ecr.docker_image.this",
      "module_address": "module.docker_build_from_ecr",
      "mode": "managed",
      "type": "docker_image",
      "name": "this",
      "provider_name": "registry.terraform.io/kreuzwerker/docker",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "build": [
            {
              "auth_config": [],
              "build_arg": null,
              "build_args": {
                "provenance": "false"
              },
              "build_id": "",
              "cache_from": [
                "900357929763.dkr.ecr.us-east-1.amazonaws.com/pge-ecr:latest"
              ],
              "cgroup_parent": "",
              "context": "../",
              "cpu_period": null,
              "cpu_quota": null,
              "cpu_set_cpus": "",
              "cpu_set_mems": "",
              "cpu_shares": null,
              "dockerfile": "Dockerfile",
              "extra_hosts": [],
              "force_remove": null,
              "isolation": "",
              "label": null,
              "labels": null,
              "memory": null,
              "memory_swap": null,
              "network_mode": "",
              "no_cache": null,
              "platform": "linux/amd64",
              "pull_parent": null,
              "remote_context": "",
              "remove": true,
              "security_opt": [],
              "session_id": "",
              "shm_size": null,
              "squash": null,
              "suppress_output": null,
              "tag": [],
              "target": "",
              "ulimit": [],
              "version": ""
            }
          ],
          "force_remove": false,
          "id": "sha256:015596983bac83d5e53cff87a113552ad187fc8158a9fb01bd7bfe2c77309c2d900357929763.dkr.ecr.us-east-1.amazonaws.com/pge-ecr",
          "image_id": "sha256:015596983bac83d5e53cff87a113552ad187fc8158a9fb01bd7bfe2c77309c2d",
          "keep_locally": false,
          "name": "900357929763.dkr.ecr.us-east-1.amazonaws.com/pge-ecr",
          "platform": null,
          "pull_triggers": null,
          "repo_digest": "",
          "triggers": {
            "dir_sha": "eba97a0aa08bb5719fba2a7a7fe7a2215d10b57d"
          }
        },
        "after": {
          "build": [
            {
              "auth_config": [],
              "build_arg": null,
              "build_args": {
                "provenance": "false"
              },
              "build_id": "",
              "cache_from": [
                "900357929763.dkr.ecr.us-east-1.amazonaws.com/pge-ecr:latest"
              ],
              "cgroup_parent": "",
              "context": "../",
              "cpu_period": null,
              "cpu_quota": null,
              "cpu_set_cpus": "",
              "cpu_set_mems": "",
              "cpu_shares": null,
              "dockerfile": "Dockerfile",
              "extra_hosts": [],
              "force_remove": null,
              "isolation": "",
              "label": null,
              "labels": null,
              "memory": null,
              "memory_swap": null,
              "network_mode": "",
              "no_cache": null,
              "platform": "linux/amd64",
              "pull_parent": null,
              "remote_context": "",
              "remove": true,
              "security_opt": [],
              "session_id": "",
              "shm_size": null,
              "squash": null,
              "suppress_output": null,
              "tag": [],
              "target": "",
              "ulimit": [],
              "version": ""
            }
          ],
          "force_remove": false,
          "id": "sha256:015596983bac83d5e53cff87a113552ad187fc8158a9fb01bd7bfe2c77309c2d900357929763.dkr.ecr.us-east-1.amazonaws.com/pge-ecr",
          "image_id": "sha256:015596983bac83d5e53cff87a113552ad187fc8158a9fb01bd7bfe2c77309c2d",
          "keep_locally": false,
          "name": "900357929763.dkr.ecr.us-east-1.amazonaws.com/pge-ecr",
          "platform": null,
          "pull_triggers": null,
          "repo_digest": "",
          "triggers": {
            "dir_sha": "eba97a0aa08bb5719fba2a7a7fe7a2215d10b57d"
          }
        },
        "after_unknown": {},
        "before_sensitive": {
          "build": [
            {
              "auth_config": [],
              "build_args": {},
              "cache_from": [
                false
              ],
              "extra_hosts": [],
              "security_opt": [],
              "tag": [],
              "ulimit": []
            }
          ],
          "triggers": {}
        },
        "after_sensitive": {
          "build": [
            {
              "auth_config": [],
              "build_args": {},
              "cache_from": [
                false
              ],
              "extra_hosts": [],
              "security_opt": [],
              "tag": [],
              "ulimit": []
            }
          ],
          "triggers": {}
        }
      }
    },
    {
      "address": "module.docker_build_from_ecr.docker_registry_image.this",
      "module_address": "module.docker_build_from_ecr",
      "mode": "managed",
      "type": "docker_registry_image",
      "name": "this",
      "provider_name": "registry.terraform.io/kreuzwerker/docker",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "id": "sha256:42448f457502cd9f2d853a7a5332bcec0d8e9fc3da4b97483e428c7c45f6ed0e",
          "insecure_skip_verify": false,
          "keep_remotely": false,
          "name": "900357929763.dkr.ecr.us-east-1.amazonaws.com/pge-ecr",
          "sha256_digest": "sha256:42448f457502cd9f2d853a7a5332bcec0d8e9fc3da4b97483e428c7c45f6ed0e",
          "triggers": {
            "dir_sha": "eba97a0aa08bb5719fba2a7a7fe7a2215d10b57d"
          }
        },
        "after": {
          "id": "sha256:42448f457502cd9f2d853a7a5332bcec0d8e9fc3da4b97483e428c7c45f6ed0e",
          "insecure_skip_verify": false,
          "keep_remotely": false,
          "name": "900357929763.dkr.ecr.us-east-1.amazonaws.com/pge-ecr",
          "sha256_digest": "sha256:42448f457502cd9f2d853a7a5332bcec0d8e9fc3da4b97483e428c7c45f6ed0e",
          "triggers": {
            "dir_sha": "eba97a0aa08bb5719fba2a7a7fe7a2215d10b57d"
          }
        },
        "after_unknown": {},
        "before_sensitive": {
          "triggers": {}
        },
        "after_sensitive": {
          "triggers": {}
        }
      }
    },
    {
      "address": "module.ecr.aws_ecr_repository.this[0]",
      "module_address": "module.ecr",
      "mode": "managed",
      "type": "aws_ecr_repository",
      "name": "this",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "arn": "arn:aws:ecr:us-east-1:900357929763:repository/pge-ecr",
          "encryption_configuration": [
            {
              "encryption_type": "AES256",
              "kms_key": ""
            }
          ],
          "force_delete": true,
          "id": "pge-ecr",
          "image_scanning_configuration": [
            {
              "scan_on_push": true
            }
          ],
          "image_tag_mutability": "MUTABLE",
          "name": "pge-ecr",
          "registry_id": "900357929763",
          "repository_url": "900357929763.dkr.ecr.us-east-1.amazonaws.com/pge-ecr",
          "tags": {},
          "tags_all": {},
          "timeouts": null
        },
        "after": {
          "arn": "arn:aws:ecr:us-east-1:900357929763:repository/pge-ecr",
          "encryption_configuration": [
            {
              "encryption_type": "AES256",
              "kms_key": ""
            }
          ],
          "force_delete": true,
          "id": "pge-ecr",
          "image_scanning_configuration": [
            {
              "scan_on_push": true
            }
          ],
          "image_tag_mutability": "MUTABLE",
          "name": "pge-ecr",
          "registry_id": "900357929763",
          "repository_url": "900357929763.dkr.ecr.us-east-1.amazonaws.com/pge-ecr",
          "tags": {},
          "tags_all": {},
          "timeouts": null
        },
        "after_unknown": {},
        "before_sensitive": {
          "encryption_configuration": [
            {}
          ],
          "image_scanning_configuration": [
            {}
          ],
          "tags": {},
          "tags_all": {}
        },
        "after_sensitive": {
          "encryption_configuration": [
            {}
          ],
          "image_scanning_configuration": [
            {}
          ],
          "tags": {},
          "tags_all": {}
        }
      }
    },
    {
      "address": "module.ecr.aws_ecr_repository_policy.this[0]",
      "module_address": "module.ecr",
      "mode": "managed",
      "type": "aws_ecr_repository_policy",
      "name": "this",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "id": "pge-ecr",
          "policy": "{\"Statement\":[{\"Action\":[\"ecr:ListTagsForResource\",\"ecr:ListImages\",\"ecr:GetRepositoryPolicy\",\"ecr:GetLifecyclePolicyPreview\",\"ecr:GetLifecyclePolicy\",\"ecr:GetDownloadUrlForLayer\",\"ecr:GetAuthorizationToken\",\"ecr:DescribeRepositories\",\"ecr:DescribeImages\",\"ecr:DescribeImageScanFindings\",\"ecr:BatchGetImage\",\"ecr:BatchCheckLayerAvailability\"],\"Effect\":\"Allow\",\"Principal\":{\"AWS\":\"arn:aws:iam::900357929763:root\"},\"Sid\":\"PrivateReadOnly\"},{\"Action\":[\"ecr:GetDownloadUrlForLayer\",\"ecr:BatchGetImage\"],\"Condition\":{\"StringLike\":{\"aws:sourceArn\":\"arn:aws:lambda:us-east-1:900357929763:function:pge-lambda-with-docker-build-from-ecr\"}},\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"lambda.amazonaws.com\"},\"Sid\":\"PrivateLambdaReadOnly\"}],\"Version\":\"2012-10-17\"}",
          "registry_id": "900357929763",
          "repository": "pge-ecr"
        },
        "after": {
          "id": "pge-ecr",
          "policy": "{\"Statement\":[{\"Action\":[\"ecr:ListTagsForResource\",\"ecr:ListImages\",\"ecr:GetRepositoryPolicy\",\"ecr:GetLifecyclePolicyPreview\",\"ecr:GetLifecyclePolicy\",\"ecr:GetDownloadUrlForLayer\",\"ecr:GetAuthorizationToken\",\"ecr:DescribeRepositories\",\"ecr:DescribeImages\",\"ecr:DescribeImageScanFindings\",\"ecr:BatchGetImage\",\"ecr:BatchCheckLayerAvailability\"],\"Effect\":\"Allow\",\"Principal\":{\"AWS\":\"arn:aws:iam::900357929763:root\"},\"Sid\":\"PrivateReadOnly\"},{\"Action\":[\"ecr:GetDownloadUrlForLayer\",\"ecr:BatchGetImage\"],\"Condition\":{\"StringLike\":{\"aws:sourceArn\":\"arn:aws:lambda:us-east-1:900357929763:function:pge-lambda-with-docker-build-from-ecr\"}},\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"lambda.amazonaws.com\"},\"Sid\":\"PrivateLambdaReadOnly\"}],\"Version\":\"2012-10-17\"}",
          "registry_id": "900357929763",
          "repository": "pge-ecr"
        },
        "after_unknown": {},
        "before_sensitive": {},
        "after_sensitive": {}
      }
    },
    {
      "address": "module.lambda_function_with_docker_build_from_ecr.aws_cloudwatch_log_group.lambda[0]",
      "module_address": "module.lambda_function_with_docker_build_from_ecr",
      "mode": "managed",
      "type": "aws_cloudwatch_log_group",
      "name": "lambda",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "arn": "arn:aws:logs:us-east-1:900357929763:log-group:/aws/lambda/pge-lambda-with-docker-build-from-ecr",
          "id": "/aws/lambda/pge-lambda-with-docker-build-from-ecr",
          "kms_key_id": "",
          "log_group_class": "STANDARD",
          "name": "/aws/lambda/pge-lambda-with-docker-build-from-ecr",
          "name_prefix": "",
          "retention_in_days": 0,
          "skip_destroy": false,
          "tags": {},
          "tags_all": {}
        },
        "after": {
          "arn": "arn:aws:logs:us-east-1:900357929763:log-group:/aws/lambda/pge-lambda-with-docker-build-from-ecr",
          "id": "/aws/lambda/pge-lambda-with-docker-build-from-ecr",
          "kms_key_id": "",
          "log_group_class": "STANDARD",
          "name": "/aws/lambda/pge-lambda-with-docker-build-from-ecr",
          "name_prefix": "",
          "retention_in_days": 0,
          "skip_destroy": false,
          "tags": {},
          "tags_all": {}
        },
        "after_unknown": {},
        "before_sensitive": {
          "tags": {},
          "tags_all": {}
        },
        "after_sensitive": {
          "tags": {},
          "tags_all": {}
        }
      }
    },
    {
      "address": "module.lambda_function_with_docker_build_from_ecr.aws_iam_role.lambda[0]",
      "module_address": "module.lambda_function_with_docker_build_from_ecr",
      "mode": "managed",
      "type": "aws_iam_role",
      "name": "lambda",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "arn": "arn:aws:iam::900357929763:role/pge-lambda-with-docker-build-from-ecr",
          "assume_role_policy": "{\"Statement\":[{\"Action\":\"sts:AssumeRole\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"lambda.amazonaws.com\"}}],\"Version\":\"2012-10-17\"}",
          "create_date": "2025-02-03T04:29:26Z",
          "description": "",
          "force_detach_policies": true,
          "id": "pge-lambda-with-docker-build-from-ecr",
          "inline_policy": [
            {
              "name": "pge-lambda-with-docker-build-from-ecr-logs",
              "policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Action\":[\"logs:PutLogEvents\",\"logs:CreateLogStream\",\"logs:CreateLogGroup\"],\"Effect\":\"Allow\",\"Resource\":[\"arn:aws:logs:us-east-1:900357929763:log-group:/aws/lambda/pge-lambda-with-docker-build-from-ecr:*:*\",\"arn:aws:logs:us-east-1:900357929763:log-group:/aws/lambda/pge-lambda-with-docker-build-from-ecr:*\"]}]}"
            }
          ],
          "managed_policy_arns": [
            "arn:aws:iam::900357929763:policy/pge_data_bucket_policy"
          ],
          "max_session_duration": 3600,
          "name": "pge-lambda-with-docker-build-from-ecr",
          "name_prefix": "",
          "path": "/",
          "permissions_boundary": "",
          "tags": {},
          "tags_all": {},
          "unique_id": "AROA5DIMDXMRQCIZRDTMW"
        },
        "after": {
          "arn": "arn:aws:iam::900357929763:role/pge-lambda-with-docker-build-from-ecr",
          "assume_role_policy": "{\"Statement\":[{\"Action\":\"sts:AssumeRole\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"lambda.amazonaws.com\"}}],\"Version\":\"2012-10-17\"}",
          "create_date": "2025-02-03T04:29:26Z",
          "description": "",
          "force_detach_policies": true,
          "id": "pge-lambda-with-docker-build-from-ecr",
          "inline_policy": [
            {
              "name": "pge-lambda-with-docker-build-from-ecr-logs",
              "policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Action\":[\"logs:PutLogEvents\",\"logs:CreateLogStream\",\"logs:CreateLogGroup\"],\"Effect\":\"Allow\",\"Resource\":[\"arn:aws:logs:us-east-1:900357929763:log-group:/aws/lambda/pge-lambda-with-docker-build-from-ecr:*:*\",\"arn:aws:logs:us-east-1:900357929763:log-group:/aws/lambda/pge-lambda-with-docker-build-from-ecr:*\"]}]}"
            }
          ],
          "managed_policy_arns": [
            "arn:aws:iam::900357929763:policy/pge_data_bucket_policy"
          ],
          "max_session_duration": 3600,
          "name": "pge-lambda-with-docker-build-from-ecr",
          "name_prefix": "",
          "path": "/",
          "permissions_boundary": "",
          "tags": {},
          "tags_all": {},
          "unique_id": "AROA5DIMDXMRQCIZRDTMW"
        },
        "after_unknown": {},
        "before_sensitive": {
          "inline_policy": [
            {}
          ],
          "managed_policy_arns": [
            false
          ],
          "tags": {},
          "tags_all": {}
        },
        "after_sensitive": {
          "inline_policy": [
            {}
          ],
          "managed_policy_arns": [
            false
          ],
          "tags": {},
          "tags_all": {}
        }
      }
    },
    {
      "address": "module.lambda_function_with_docker_build_from_ecr.aws_iam_role_policy.logs[0]",
      "module_address": "module.lambda_function_with_docker_build_from_ecr",
      "mode": "managed",
      "type": "aws_iam_role_policy",
      "name": "logs",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "id": "pge-lambda-with-docker-build-from-ecr:pge-lambda-with-docker-build-from-ecr-logs",
          "name": "pge-lambda-with-docker-build-from-ecr-logs",
          "name_prefix": "",
          "policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Action\":[\"logs:PutLogEvents\",\"logs:CreateLogStream\",\"logs:CreateLogGroup\"],\"Effect\":\"Allow\",\"Resource\":[\"arn:aws:logs:us-east-1:900357929763:log-group:/aws/lambda/pge-lambda-with-docker-build-from-ecr:*:*\",\"arn:aws:logs:us-east-1:900357929763:log-group:/aws/lambda/pge-lambda-with-docker-build-from-ecr:*\"]}]}",
          "role": "pge-lambda-with-docker-build-from-ecr"
        },
        "after": {
          "id": "pge-lambda-with-docker-build-from-ecr:pge-lambda-with-docker-build-from-ecr-logs",
          "name": "pge-lambda-with-docker-build-from-ecr-logs",
          "name_prefix": "",
          "policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Action\":[\"logs:PutLogEvents\",\"logs:CreateLogStream\",\"logs:CreateLogGroup\"],\"Effect\":\"Allow\",\"Resource\":[\"arn:aws:logs:us-east-1:900357929763:log-group:/aws/lambda/pge-lambda-with-docker-build-from-ecr:*:*\",\"arn:aws:logs:us-east-1:900357929763:log-group:/aws/lambda/pge-lambda-with-docker-build-from-ecr:*\"]}]}",
          "role": "pge-lambda-with-docker-build-from-ecr"
        },
        "after_unknown": {},
        "before_sensitive": {},
        "after_sensitive": {}
      }
    },
    {
      "address": "module.lambda_function_with_docker_build_from_ecr.aws_lambda_function.this[0]",
      "module_address": "module.lambda_function_with_docker_build_from_ecr",
      "mode": "managed",
      "type": "aws_lambda_function",
      "name": "this",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "architectures": [
            "x86_64"
          ],
          "arn": "arn:aws:lambda:us-east-1:900357929763:function:pge-lambda-with-docker-build-from-ecr",
          "code_sha256": "42448f457502cd9f2d853a7a5332bcec0d8e9fc3da4b97483e428c7c45f6ed0e",
          "code_signing_config_arn": "",
          "dead_letter_config": [],
          "description": "PGE Test",
          "environment": [
            {
              "variables": {
                "FILE_OUTPUT": "pge-data-bucket"
              }
            }
          ],
          "ephemeral_storage": [
            {
              "size": 512
            }
          ],
          "file_system_config": [],
          "filename": null,
          "function_name": "pge-lambda-with-docker-build-from-ecr",
          "handler": "",
          "id": "pge-lambda-with-docker-build-from-ecr",
          "image_config": [],
          "image_uri": "900357929763.dkr.ecr.us-east-1.amazonaws.com/pge-ecr@sha256:42448f457502cd9f2d853a7a5332bcec0d8e9fc3da4b97483e428c7c45f6ed0e",
          "invoke_arn": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:900357929763:function:pge-lambda-with-docker-build-from-ecr/invocations",
          "kms_key_arn": "",
          "last_modified": "2025-02-04T11:49:21.000+0000",
          "layers": [],
          "logging_config": [
            {
              "application_log_level": "",
              "log_format": "Text",
              "log_group": "/aws/lambda/pge-lambda-with-docker-build-from-ecr",
              "system_log_level": ""
            }
          ],
          "memory_size": 128,
          "package_type": "Image",
          "publish": false,
          "qualified_arn": "arn:aws:lambda:us-east-1:900357929763:function:pge-lambda-with-docker-build-from-ecr:$LATEST",
          "qualified_invoke_arn": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:900357929763:function:pge-lambda-with-docker-build-from-ecr:$LATEST/invocations",
          "replace_security_groups_on_destroy": null,
          "replacement_security_group_ids": null,
          "reserved_concurrent_executions": -1,
          "role": "arn:aws:iam::900357929763:role/pge-lambda-with-docker-build-from-ecr",
          "runtime": "",
          "s3_bucket": null,
          "s3_key": null,
          "s3_object_version": null,
          "signing_job_arn": "",
          "signing_profile_version_arn": "",
          "skip_destroy": false,
          "snap_start": [],
          "source_code_hash": "",
          "source_code_size": 0,
          "tags": {
            "terraform-aws-modules": "lambda"
          },
          "tags_all": {
            "terraform-aws-modules": "lambda"
          },
          "timeout": 3,
          "timeouts": null,
          "tracing_config": [
            {
              "mode": "PassThrough"
            }
          ],
          "version": "$LATEST",
          "vpc_config": []
        },
        "after": {
          "architectures": [
            "x86_64"
          ],
          "arn": "arn:aws:lambda:us-east-1:900357929763:function:pge-lambda-with-docker-build-from-ecr",
          "code_sha256": "42448f457502cd9f2d853a7a5332bcec0d8e9fc3da4b97483e428c7c45f6ed0e",
          "code_signing_config_arn": "",
          "dead_letter_config": [],
          "description": "PGE Test",
          "environment": [
            {
              "variables": {
                "FILE_OUTPUT": "pge-data-bucket"
              }
            }
          ],
          "ephemeral_storage": [
            {
              "size": 512
            }
          ],
          "file_system_config": [],
          "filename": null,
          "function_name": "pge-lambda-with-docker-build-from-ecr",
          "handler": "",
          "id": "pge-lambda-with-docker-build-from-ecr",
          "image_config": [],
          "image_uri": "900357929763.dkr.ecr.us-east-1.amazonaws.com/pge-ecr@sha256:42448f457502cd9f2d853a7a5332bcec0d8e9fc3da4b97483e428c7c45f6ed0e",
          "invoke_arn": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:900357929763:function:pge-lambda-with-docker-build-from-ecr/invocations",
          "kms_key_arn": "",
          "last_modified": "2025-02-04T11:49:21.000+0000",
          "layers": [],
          "logging_config": [
            {
              "application_log_level": "",
              "log_format": "Text",
              "log_group": "/aws/lambda/pge-lambda-with-docker-build-from-ecr",
              "system_log_level": ""
            }
          ],
          "memory_size": 128,
          "package_type": "Image",
          "publish": false,
          "qualified_arn": "arn:aws:lambda:us-east-1:900357929763:function:pge-lambda-with-docker-build-from-ecr:$LATEST",
          "qualified_invoke_arn": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:900357929763:function:pge-lambda-with-docker-build-from-ecr:$LATEST/invocations",
          "replace_security_groups_on_destroy": null,
          "replacement_security_group_ids": null,
          "reserved_concurrent_executions": -1,
          "role": "arn:aws:iam::900357929763:role/pge-lambda-with-docker-build-from-ecr",
          "runtime": "",
          "s3_bucket": null,
          "s3_key": null,
          "s3_object_version": null,
          "signing_job_arn": "",
          "signing_profile_version_arn": "",
          "skip_destroy": false,
          "snap_start": [],
          "source_code_hash": "",
          "source_code_size": 0,
          "tags": {
            "terraform-aws-modules": "lambda"
          },
          "tags_all": {
            "terraform-aws-modules": "lambda"
          },
          "timeout": 3,
          "timeouts": null,
          "tracing_config": [
            {
              "mode": "PassThrough"
            }
          ],
          "version": "$LATEST",
          "vpc_config": []
        },
        "after_unknown": {},
        "before_sensitive": {
          "architectures": [
            false
          ],
          "dead_letter_config": [],
          "environment": [
            {
              "variables": {}
            }
          ],
          "ephemeral_storage": [
            {}
          ],
          "file_system_config": [],
          "image_config": [],
          "layers": [],
          "logging_config": [
            {}
          ],
          "snap_start": [],
          "tags": {},
          "tags_all": {},
          "tracing_config": [
            {}
          ],
          "vpc_config": []
        },
        "after_sensitive": {
          "architectures": [
            false
          ],
          "dead_letter_config": [],
          "environment": [
            {
              "variables": {}
            }
          ],
          "ephemeral_storage": [
            {}
          ],
          "file_system_config": [],
          "image_config": [],
          "layers": [],
          "logging_config": [
            {}
          ],
          "snap_start": [],
          "tags": {},
          "tags_all": {},
          "tracing_config": [
            {}
          ],
          "vpc_config": []
        }
      }
    }
  ],
  "prior_state": {
    "format_version": "1.0",
    "terraform_version": "1.8.5",
    "values": {
      "root_module": {
        "resources": [
          {
            "address": "data.aws_caller_identity.this",
            "mode": "data",
            "type": "aws_caller_identity",
            "name": "this",
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "schema_version": 0,
            "values": {
              "account_id": "900357929763",
              "arn": "arn:aws:iam::900357929763:root",
              "id": "900357929763",
              "user_id": "900357929763"
            },
            "sensitive_values": {}
          },
          {
            "address": "data.aws_ecr_authorization_token.token",
            "mode": "data",
            "type": "aws_ecr_authorization_token",
            "name": "token",
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "schema_version": 0,
            "values": {
              "authorization_token": "QVdTOmV5SndZWGxzYjJGa0lqb2lObU5EYWxwaVNXc3pZVFJGYVRKcFlURnRhVVZCWmxOQkszVTFVVzVTVlhkUlZXWkxZV2RKY0RRMFJESmxNM0k0YXpsSlkwNTRNbTltYjJaelNGRlNVRWR1U1N0WU5WRmFhRWROVkdoWWRYZHZkemRvVFVoSFQxSlZXakZUVEZoM1VURklhVE42ZVhvdlQxTjJOMDFPYjBWclRtWTJPWEF6TTI5RFpYUTBXbUZLS3pVdlFXYzNjVEJZVFRrMU0waHVTMU42ZUdnd2Jtd3lNVGxvY1VGdFRVWlFMM3BwUzBSMlVDc3JTV0oyV2xkb1NWVm9aMGR3T0ZSNlZERnpSMHBTY0hBeVRYZERTRU5LWWxwcFUzQlRSM0l2UzJkdGNHSTNiVnBTVUVwV1FWVTBTM05CUzI5Sk1qRnlWVVJDY0c5aU5rRm1ZMk5WZFZKVGRVVnZiSEZFVDFOR01ISmxTakprWkUxTVZ5OXBRV0YxVEVkVVUwRkdaVmRXWkhRd2RqQTFhbVp2Y3pGUlZrTjRhMGdyVTBSWEt6QmFTbE5tTDFkYVFrRTJZVE5QZDAxNFEyRlhUMVZRZDBFeE1tWTRWa2g2TXpCeWEySktWbGd4U1VkUkwxaE5WRzFxTXpsUU5tWnBMMUpYVVZoSVMxUndVV1pyUXpObWNWZzFOMmxQYlVWRmJGcHJlR1pFUWxGb1VWcHlUV0pqV21ZelNISkhPVzB3Y25WdVkzRmtVMmhsVFU4MGRscFpSM0JETkhWMFNVbFBZVXhDZEZaMmR6QmFUbkJVWlRoUmRUbE9ObVZqVUVGTFFVaENTM2N5VFhaamRpdDFWVTVFVWtsNFEzUTNkekFyY2pOWVpVNXhZMmhLUWxoblNEWXpSRWxhZVdsdFZFVnpORk5oVTNaUFF6RTNXVFE1VW1OVFRreHlNelk0ZG1wbFdpODBiMEZKVG5wYVdVNVNVVk5VY2toME1tRldiVmRSTUZCTVRVNHhaVTVpY1N0b1VWcGFURWN3YzJ0WlFWRm1iMDlKT1ZsSU5HMU5Ra1pRTUZGaFVGbEVhRkpMZDJrMmNYbG1aRFZrUm1oNGVWTmpjelE1ZFM5RFVYSmhOV05aYWxWeFR6RnJRV0o1YmpsU1NrSTNkbkpxWjBabGNXUk5XVEJvV0haMlpUbERORmgxTkhWdWVXVk9TMUYyUVdaelkyRkZZMkpTWVZKVUsxTTVTaXRYU0RCaFFVWlFMMGhyU2tWQlkwMVVhWGN4TVVGR1NFdE5ZMEU1VDNCcVlrbFZUekZQY0VoaVdHa3lNVlZKYkRodlEwOW1XRk5LWjNscmNGWktUVFpzVTBJeFQwMHZWVEZQZWxsRFEycEZZM2cyUkhZM09FMXhSRlZaV0Rnd2QzTlZVekZYVkZSNFJuSkRlbTlJYlhFeVVYSklNMUZMZGpGRFpIZHNUMUpzTWt4aWVISlVhR1pDTVcxNlUyeENObXRxUVN0R01rRm9SV0paU1dGaFVVeGtWa0pCYjNKQlRsaHVaVVJrVWt0Nll6Wmpja3B6VWpseEwybHRNMHgyU0RsV2FuTXpiRzV4T0RJMVZVOXVWVUpvV1ZFeU9HZEJTRzAwWms5R1pYVmxja0UzVUM5cmVYTXdVMWc0UmxSNFlWbExVWEZLUmtaWVpFcDFiVVJ4TVU1S1FXUTVTMDB4VFdGTE5WSlZhVTVQU0ZvdmNFNDRMMkpIYURkWldUY3ZMMVZNWXpSQlBUMGlMQ0prWVhSaGEyVjVJam9pUVZGRlFrRklhSGR0TUZsaFNWTktaVkowU20wMWJqRkhOblZ4WldWcldIVnZXRmhRWlRWVlJtTmxPVkp4T0M4eE5IZEJRVUZJTkhkbVFWbEtTMjlhU1doMlkwNUJVV05IYjBjNGQySlJTVUpCUkVKdlFtZHJjV2hyYVVjNWR6QkNRbmRGZDBobldVcFpTVnBKUVZkVlJFSkJSWFZOUWtWRlJFSnVObWhQZVZCbGRHMHJRVlZUU0RoUlNVSkZTVUUzZGtwd1lpdDVNRVphUm14dVUwVkplRkZPUzJ0dWQxWnRSMWQyY0ZGeWVrcEdUalJXWjBGQldESnRiUzl2VUZaMlREQlBhRUpGZVhkTk9ETTBURGhRYWxGdFZXSlhWRlpXZEVWdlZXeFRTVDBpTENKMlpYSnphVzl1SWpvaU1pSXNJblI1Y0dVaU9pSkVRVlJCWDB0RldTSXNJbVY0Y0dseVlYUnBiMjRpT2pFM016ZzNNVE13TURoOQ==",
              "expires_at": "2025-02-04T23:50:08Z",
              "id": "us-east-1",
              "password": "eyJwYXlsb2FkIjoiNmNDalpiSWszYTRFaTJpYTFtaUVBZlNBK3U1UW5SVXdRVWZLYWdJcDQ0RDJlM3I4azlJY054Mm9mb2ZzSFFSUEduSStYNVFaaEdNVGhYdXdvdzdoTUhHT1JVWjFTTFh3UTFIaTN6eXovT1N2N01Ob0VrTmY2OXAzM29DZXQ0WmFKKzUvQWc3cTBYTTk1M0huS1N6eGgwbmwyMTlocUFtTUZQL3ppS0R2UCsrSWJ2WldoSVVoZ0dwOFR6VDFzR0pScHAyTXdDSENKYlppU3BTR3IvS2dtcGI3bVpSUEpWQVU0S3NBS29JMjFyVURCcG9iNkFmY2NVdVJTdUVvbHFET1NGMHJlSjJkZE1MVy9pQWF1TEdUU0FGZVdWZHQwdjA1amZvczFRVkN4a0grU0RXKzBaSlNmL1daQkE2YTNPd014Q2FXT1VQd0ExMmY4Vkh6MzBya2JKVlgxSUdRL1hNVG1qMzlQNmZpL1JXUVhIS1RwUWZrQzNmcVg1N2lPbUVFbFpreGZEQlFoUVpyTWJjWmYzSHJHOW0wcnVuY3FkU2hlTU80dlpZR3BDNHV0SUlPYUxCdFZ2dzBaTnBUZThRdTlONmVjUEFLQUhCS3cyTXZjdit1VU5EUkl4Q3Q3dzArcjNYZU5xY2hKQlhnSDYzRElaeWltVEVzNFNhU3ZPQzE3WTQ5UmNTTkxyMzY4dmplWi80b0FJTnpaWU5SUVNUckh0MmFWbVdRMFBMTU4xZU5icStoUVpaTEcwc2tZQVFmb09JOVlING1NQkZQMFFhUFlEaFJLd2k2cXlmZDVkRmh4eVNjczQ5dS9DUXJhNWNZalVxTzFrQWJ5bjlSSkI3dnJqZ0ZlcWRNWTBoWHZ2ZTlDNFh1NHVueWVOS1F2QWZzY2FFY2JSYVJUK1M5SitXSDBhQUZQL0hrSkVBY01UaXcxMUFGSEtNY0E5T3BqYklVTzFPcEhiWGkyMVVJbDhvQ09mWFNKZ3lrcFZKTTZsU0IxT00vVTFPellDQ2pFY3g2RHY3OE1xRFVZWDgwd3NVUzFXVFR4RnJDem9IbXEyUXJIM1FLdjFDZHdsT1JsMkxieHJUaGZCMW16U2xCNmtqQStGMkFoRWJZSWFhUUxkVkJBb3JBTlhuZURkUkt6YzZjckpzUjlxL2ltM0x2SDlWanMzbG5xODI1VU9uVUJoWVEyOGdBSG00Zk9GZXVlckE3UC9reXMwU1g4RlR4YVlLUXFKRkZYZEp1bURxMU5KQWQ5S00xTWFLNVJVaU5PSFovcE44L2JHaDdZWTcvL1VMYzRBPT0iLCJkYXRha2V5IjoiQVFFQkFIaHdtMFlhSVNKZVJ0Sm01bjFHNnVxZWVrWHVvWFhQZTVVRmNlOVJxOC8xNHdBQUFINHdmQVlKS29aSWh2Y05BUWNHb0c4d2JRSUJBREJvQmdrcWhraUc5dzBCQndFd0hnWUpZSVpJQVdVREJBRXVNQkVFREJuNmhPeVBldG0rQVVTSDhRSUJFSUE3dkpwYit5MEZaRmxuU0VJeFFOS2tud1ZtR1d2cFFyekpGTjRWZ0FBWDJtbS9vUFZ2TDBPaEJFeXdNODM0TDhQalFtVWJXVFZWdEVvVWxTST0iLCJ2ZXJzaW9uIjoiMiIsInR5cGUiOiJEQVRBX0tFWSIsImV4cGlyYXRpb24iOjE3Mzg3MTMwMDh9",
              "proxy_endpoint": "https://900357929763.dkr.ecr.us-east-1.amazonaws.com",
              "registry_id": null,
              "user_name": "AWS"
            },
            "sensitive_values": {
              "authorization_token": true,
              "password": true
            }
          },
          {
            "address": "data.aws_iam_policy_document.api_gateway_cloudwatch_logs",
            "mode": "data",
            "type": "aws_iam_policy_document",
            "name": "api_gateway_cloudwatch_logs",
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "schema_version": 0,
            "values": {
              "id": "482379587",
              "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"logs:TestMetricFilter\",\n        \"logs:PutRetentionPolicy\",\n        \"logs:PutLogEvents\",\n        \"logs:GetLogEvents\",\n        \"logs:FilterLogEvents\",\n        \"logs:DescribeLogStreams\",\n        \"logs:DescribeLogGroups\",\n        \"logs:DeleteLogStream\",\n        \"logs:DeleteLogGroup\",\n        \"logs:CreateLogStream\",\n        \"logs:CreateLogGroup\"\n      ],\n      \"Resource\": \"*\"\n    }\n  ]\n}",
              "minified_json": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Effect\":\"Allow\",\"Action\":[\"logs:TestMetricFilter\",\"logs:PutRetentionPolicy\",\"logs:PutLogEvents\",\"logs:GetLogEvents\",\"logs:FilterLogEvents\",\"logs:DescribeLogStreams\",\"logs:DescribeLogGroups\",\"logs:DeleteLogStream\",\"logs:DeleteLogGroup\",\"logs:CreateLogStream\",\"logs:CreateLogGroup\"],\"Resource\":\"*\"}]}",
              "override_json": null,
              "override_policy_documents": null,
              "policy_id": null,
              "source_json": null,
              "source_policy_documents": null,
              "statement": [
                {
                  "actions": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:DeleteLogGroup",
                    "logs:DeleteLogStream",
                    "logs:DescribeLogGroups",
                    "logs:DescribeLogStreams",
                    "logs:FilterLogEvents",
                    "logs:GetLogEvents",
                    "logs:PutLogEvents",
                    "logs:PutRetentionPolicy",
                    "logs:TestMetricFilter"
                  ],
                  "condition": [],
                  "effect": "Allow",
                  "not_actions": [],
                  "not_principals": [],
                  "not_resources": [],
                  "principals": [],
                  "resources": [
                    "*"
                  ],
                  "sid": ""
                }
              ],
              "version": "2012-10-17"
            },
            "sensitive_values": {
              "statement": [
                {
                  "actions": [
                    false,
                    false,
                    false,
                    false,
                    false,
                    false,
                    false,
                    false,
                    false,
                    false,
                    false
                  ],
                  "condition": [],
                  "not_actions": [],
                  "not_principals": [],
                  "not_resources": [],
                  "principals": [],
                  "resources": [
                    false
                  ]
                }
              ]
            }
          },
          {
            "address": "data.aws_iam_policy_document.api_gateway_global_assume_role",
            "mode": "data",
            "type": "aws_iam_policy_document",
            "name": "api_gateway_global_assume_role",
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "schema_version": 0,
            "values": {
              "id": "2699642182",
              "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": \"sts:AssumeRole\",\n      \"Principal\": {\n        \"Service\": \"apigateway.amazonaws.com\"\n      }\n    }\n  ]\n}",
              "minified_json": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Effect\":\"Allow\",\"Action\":\"sts:AssumeRole\",\"Principal\":{\"Service\":\"apigateway.amazonaws.com\"}}]}",
              "override_json": null,
              "override_policy_documents": null,
              "policy_id": null,
              "source_json": null,
              "source_policy_documents": null,
              "statement": [
                {
                  "actions": [
                    "sts:AssumeRole"
                  ],
                  "condition": [],
                  "effect": "Allow",
                  "not_actions": [],
                  "not_principals": [],
                  "not_resources": [],
                  "principals": [
                    {
                      "identifiers": [
                        "apigateway.amazonaws.com"
                      ],
                      "type": "Service"
                    }
                  ],
                  "resources": [],
                  "sid": ""
                }
              ],
              "version": "2012-10-17"
            },
            "sensitive_values": {
              "statement": [
                {
                  "actions": [
                    false
                  ],
                  "condition": [],
                  "not_actions": [],
                  "not_principals": [],
                  "not_resources": [],
                  "principals": [
                    {
                      "identifiers": [
                        false
                      ]
                    }
                  ],
                  "resources": []
                }
              ]
            }
          },
          {
            "address": "data.aws_iam_policy_document.pge_data_bucket_policy",
            "mode": "data",
            "type": "aws_iam_policy_document",
            "name": "pge_data_bucket_policy",
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "schema_version": 0,
            "values": {
              "id": "210987199",
              "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"s3:PutObject\",\n        \"s3:ListBucket\",\n        \"s3:GetObject\"\n      ],\n      \"Resource\": [\n        \"arn:aws:s3:::pge-data-bucket/*\",\n        \"arn:aws:s3:::pge-data-bucket\"\n      ]\n    }\n  ]\n}",
              "minified_json": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Effect\":\"Allow\",\"Action\":[\"s3:PutObject\",\"s3:ListBucket\",\"s3:GetObject\"],\"Resource\":[\"arn:aws:s3:::pge-data-bucket/*\",\"arn:aws:s3:::pge-data-bucket\"]}]}",
              "override_json": null,
              "override_policy_documents": null,
              "policy_id": null,
              "source_json": null,
              "source_policy_documents": null,
              "statement": [
                {
                  "actions": [
                    "s3:GetObject",
                    "s3:ListBucket",
                    "s3:PutObject"
                  ],
                  "condition": [],
                  "effect": "Allow",
                  "not_actions": [],
                  "not_principals": [],
                  "not_resources": [],
                  "principals": [],
                  "resources": [
                    "arn:aws:s3:::pge-data-bucket",
                    "arn:aws:s3:::pge-data-bucket/*"
                  ],
                  "sid": ""
                }
              ],
              "version": "2012-10-17"
            },
            "sensitive_values": {
              "statement": [
                {
                  "actions": [
                    false,
                    false,
                    false
                  ],
                  "condition": [],
                  "not_actions": [],
                  "not_principals": [],
                  "not_resources": [],
                  "principals": [],
                  "resources": [
                    false,
                    false
                  ]
                }
              ]
            }
          },
          {
            "address": "data.aws_iam_role.pge_lambda_role",
            "mode": "data",
            "type": "aws_iam_role",
            "name": "pge_lambda_role",
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "schema_version": 0,
            "values": {
              "arn": "arn:aws:iam::900357929763:role/pge-lambda-with-docker-build-from-ecr",
              "assume_role_policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"lambda.amazonaws.com\"},\"Action\":\"sts:AssumeRole\"}]}",
              "create_date": "2025-02-03T04:29:26Z",
              "description": "",
              "id": "pge-lambda-with-docker-build-from-ecr",
              "max_session_duration": 3600,
              "name": "pge-lambda-with-docker-build-from-ecr",
              "path": "/",
              "permissions_boundary": "",
              "role_last_used": [
                {
                  "last_used_date": "2025-02-04T08:23:18Z",
                  "region": "us-east-1"
                }
              ],
              "tags": {},
              "unique_id": "AROA5DIMDXMRQCIZRDTMW"
            },
            "sensitive_values": {
              "role_last_used": [
                {}
              ],
              "tags": {}
            }
          },
          {
            "address": "data.aws_region.current",
            "mode": "data",
            "type": "aws_region",
            "name": "current",
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "schema_version": 0,
            "values": {
              "description": "US East (N. Virginia)",
              "endpoint": "ec2.us-east-1.amazonaws.com",
              "id": "us-east-1",
              "name": "us-east-1"
            },
            "sensitive_values": {}
          },
          {
            "address": "aws_api_gateway_account.api_gateway_account",
            "mode": "managed",
            "type": "aws_api_gateway_account",
            "name": "api_gateway_account",
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "schema_version": 0,
            "values": {
              "api_key_version": "4",
              "cloudwatch_role_arn": "arn:aws:iam::900357929763:role/api_gateway_cloudwatch_global",
              "features": [
                "UsagePlans"
              ],
              "id": "api-gateway-account",
              "reset_on_delete": null,
              "throttle_settings": [
                {
                  "burst_limit": 5000,
                  "rate_limit": 10000
                }
              ]
            },
            "sensitive_values": {
              "features": [
                false
              ],
              "throttle_settings": [
                {}
              ]
            },
            "depends_on": [
              "aws_iam_role.cloudwatch",
              "data.aws_iam_policy_document.api_gateway_global_assume_role"
            ]
          },
          {
            "address": "aws_api_gateway_deployment.pge_deployment",
            "mode": "managed",
            "type": "aws_api_gateway_deployment",
            "name": "pge_deployment",
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "schema_version": 0,
            "values": {
              "canary_settings": [],
              "created_date": "2025-02-03T14:35:24Z",
              "description": "PGE Deployment",
              "execution_arn": "arn:aws:execute-api:us-east-1:900357929763:iaoe8o5c0e/",
              "id": "kd8dub",
              "invoke_url": "https://iaoe8o5c0e.execute-api.us-east-1.amazonaws.com/",
              "rest_api_id": "iaoe8o5c0e",
              "stage_description": null,
              "stage_name": null,
              "triggers": {
                "redeployment": "44ef8d8a8234f34b10a0a2f9708979366dc866df"
              },
              "variables": null
            },
            "sensitive_values": {
              "canary_settings": [],
              "triggers": {}
            },
            "depends_on": [
              "aws_api_gateway_integration.pge_integration_get",
              "aws_api_gateway_integration.pge_integration_post",
              "aws_api_gateway_method.pge_method_get",
              "aws_api_gateway_method.pge_method_post",
              "aws_api_gateway_resource.pge_resource_data",
              "aws_api_gateway_resource.pge_resource_token",
              "aws_api_gateway_rest_api.pge_rest_api",
              "aws_s3_bucket.pge_data_bucket",
              "data.aws_caller_identity.this",
              "data.aws_ecr_authorization_token.token",
              "data.aws_region.current",
              "module.docker_build_from_ecr.aws_ecr_repository.this",
              "module.docker_build_from_ecr.data.aws_caller_identity.this",
              "module.docker_build_from_ecr.data.aws_region.current",
              "module.docker_build_from_ecr.docker_image.this",
              "module.docker_build_from_ecr.docker_registry_image.this",
              "module.ecr.aws_ecr_repository.this",
              "module.ecr.aws_ecrpublic_repository.this",
              "module.lambda_function_with_docker_build_from_ecr.aws_cloudwatch_log_group.lambda",
              "module.lambda_function_with_docker_build_from_ecr.aws_iam_role.lambda",
              "module.lambda_function_with_docker_build_from_ecr.aws_iam_role_policy.additional_inline",
              "module.lambda_function_with_docker_build_from_ecr.aws_iam_role_policy.additional_json",
              "module.lambda_function_with_docker_build_from_ecr.aws_iam_role_policy.additional_jsons",
              "module.lambda_function_with_docker_build_from_ecr.aws_iam_role_policy.async",
              "module.lambda_function_with_docker_build_from_ecr.aws_iam_role_policy.dead_letter",
              "module.lambda_function_with_docker_build_from_ecr.aws_iam_role_policy.logs",
              "module.lambda_function_with_docker_build_from_ecr.aws_iam_role_policy.tracing",
              "module.lambda_function_with_docker_build_from_ecr.aws_iam_role_policy.vpc",
              "module.lambda_function_with_docker_build_from_ecr.aws_iam_role_policy_attachment.additional_many",
              "module.lambda_function_with_docker_build_from_ecr.aws_iam_role_policy_attachment.additional_one",
              "module.lambda_function_with_docker_build_from_ecr.aws_lambda_function.this",
              "module.lambda_function_with_docker_build_from_ecr.aws_s3_object.lambda_package",
              "module.lambda_function_with_docker_build_from_ecr.data.aws_arn.log_group_arn",
              "module.lambda_function_with_docker_build_from_ecr.data.aws_cloudwatch_log_group.lambda",
              "module.lambda_function_with_docker_build_from_ecr.data.aws_iam_policy.tracing",
              "module.lambda_function_with_docker_build_from_ecr.data.aws_iam_policy.vpc",
              "module.lambda_function_with_docker_build_from_ecr.data.aws_iam_policy_document.additional_inline",
              "module.lambda_function_with_docker_build_from_ecr.data.aws_iam_policy_document.assume_role",
              "module.lambda_function_with_docker_build_from_ecr.data.aws_iam_policy_document.async",
              "module.lambda_function_with_docker_build_from_ecr.data.aws_iam_policy_document.dead_letter",
              "module.lambda_function_with_docker_build_from_ecr.data.aws_iam_policy_document.logs",
              "module.lambda_function_with_docker_build_from_ecr.data.aws_partition.current",
              "module.lambda_function_with_docker_build_from_ecr.data.external.archive_prepare",
              "module.lambda_function_with_docker_build_from_ecr.local_file.archive_plan",
              "module.lambda_function_with_docker_build_from_ecr.null_resource.archive"
            ]
          },
          {
            "address": "aws_api_gateway_integration.pge_integration_get",
            "mode": "managed",
            "type": "aws_api_gateway_integration",
            "name": "pge_integration_get",
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "schema_version": 0,
            "values": {
              "cache_key_parameters": [],
              "cache_namespace": "gl9g61",
              "connection_id": "",
              "connection_type": "INTERNET",
              "content_handling": "",
              "credentials": "",
              "http_method": "GET",
              "id": "agi-iaoe8o5c0e-gl9g61-GET",
              "integration_http_method": "POST",
              "passthrough_behavior": "WHEN_NO_MATCH",
              "request_parameters": {},
              "request_templates": {},
              "resource_id": "gl9g61",
              "rest_api_id": "iaoe8o5c0e",
              "timeout_milliseconds": 29000,
              "tls_config": [],
              "type": "AWS_PROXY",
              "uri": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:900357929763:function:pge-lambda-with-docker-build-from-ecr/invocations"
            },
            "sensitive_values": {
              "cache_key_parameters": [],
              "request_parameters": {},
              "request_templates": {},
              "tls_config": []
            },
            "depends_on": [
              "aws_api_gateway_method.pge_method_get",
              "aws_api_gateway_resource.pge_resource_data",
              "aws_api_gateway_rest_api.pge_rest_api",
              "aws_s3_bucket.pge_data_bucket",
              "data.aws_caller_identity.this",
              "data.aws_ecr_authorization_token.token",
              "data.aws_region.current",
              "module.docker_build_from_ecr.aws_ecr_repository.this",
              "module.docker_build_from_ecr.data.aws_caller_identity.this",
              "module.docker_build_from_ecr.data.aws_region.current",
              "module.docker_build_from_ecr.docker_image.this",
              "module.docker_build_from_ecr.docker_registry_image.this",
              "module.ecr.aws_ecr_repository.this",
              "module.ecr.aws_ecrpublic_repository.this",
              "module.lambda_function_with_docker_build_from_ecr.aws_cloudwatch_log_group.lambda",
              "module.lambda_function_with_docker_build_from_ecr.aws_iam_role.lambda",
              "module.lambda_function_with_docker_build_from_ecr.aws_iam_role_policy.additional_inline",
              "module.lambda_function_with_docker_build_from_ecr.aws_iam_role_policy.additional_json",
              "module.lambda_function_with_docker_build_from_ecr.aws_iam_role_policy.additional_jsons",
              "module.lambda_function_with_docker_build_from_ecr.aws_iam_role_policy.async",
              "module.lambda_function_with_docker_build_from_ecr.aws_iam_role_policy.dead_letter",
              "module.lambda_function_with_docker_build_from_ecr.aws_iam_role_policy.logs",
              "module.lambda_function_with_docker_build_from_ecr.aws_iam_role_policy.tracing",
              "module.lambda_function_with_docker_build_from_ecr.aws_iam_role_policy.vpc",
              "module.lambda_function_with_docker_build_from_ecr.aws_iam_role_policy_attachment.additional_many",
              "module.lambda_function_with_docker_build_from_ecr.aws_iam_role_policy_attachment.additional_one",
              "module.lambda_function_with_docker_build_from_ecr.aws_lambda_function.this",
              "module.lambda_function_with_docker_build_from_ecr.aws_s3_object.lambda_package",
              "module.lambda_function_with_docker_build_from_ecr.data.aws_arn.log_group_arn",
              "module.lambda_function_with_docker_build_from_ecr.data.aws_cloudwatch_log_group.lambda",
              "module.lambda_function_with_docker_build_from_ecr.data.aws_iam_policy.tracing",
              "module.lambda_function_with_docker_build_from_ecr.data.aws_iam_policy.vpc",
              "module.lambda_function_with_docker_build_from_ecr.data.aws_iam_policy_document.additional_inline",
              "module.lambda_function_with_docker_build_from_ecr.data.aws_iam_policy_document.assume_role",
              "module.lambda_function_with_docker_build_from_ecr.data.aws_iam_policy_document.async",
              "module.lambda_function_with_docker_build_from_ecr.data.aws_iam_policy_document.dead_letter",
              "module.lambda_function_with_docker_build_from_ecr.data.aws_iam_policy_document.logs",
              "module.lambda_function_with_docker_build_from_ecr.data.aws_partition.current",
              "module.lambda_function_with_docker_build_from_ecr.data.external.archive_prepare",
              "module.lambda_function_with_docker_build_from_ecr.local_file.archive_plan",
              "module.lambda_function_with_docker_build_from_ecr.null_resource.archive"
            ]
          },
          {
            "address": "aws_api_gateway_integration.pge_integration_post",
            "mode": "managed",
            "type": "aws_api_gateway_integration",
            "name": "pge_integration_post",
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "schema_version": 0,
            "values": {
              "cache_key_parameters": [],
              "cache_namespace": "wwpvml",
              "connection_id": "",
              "connection_type": "INTERNET",
              "content_handling": "",
              "credentials": "",
              "http_method": "POST",
              "id": "agi-iaoe8o5c0e-wwpvml-POST",
              "integration_http_method": "POST",
              "passthrough_behavior": "WHEN_NO_MATCH",
              "request_parameters": {},
              "request_templates": {},
              "resource_id": "wwpvml",
              "rest_api_id": "iaoe8o5c0e",
              "timeout_milliseconds": 29000,
              "tls_config": [],
              "type": "AWS_PROXY",
              "uri": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:900357929763:function:pge-lambda-with-docker-build-from-ecr/invocations"
            },
            "sensitive_values": {
              "cache_key_parameters": [],
              "request_parameters": {},
              "request_templates": {},
              "tls_config": []
            },
            "depends_on": [
              "aws_api_gateway_method.pge_method_post",
              "aws_api_gateway_resource.pge_resource_token",
              "aws_api_gateway_rest_api.pge_rest_api",
              "aws_s3_bucket.pge_data_bucket",
              "data.aws_caller_identity.this",
              "data.aws_ecr_authorization_token.token",
              "data.aws_region.current",
              "module.docker_build_from_ecr.aws_ecr_repository.this",
              "module.docker_build_from_ecr.data.aws_caller_identity.this",
              "module.docker_build_from_ecr.data.aws_region.current",
              "module.docker_build_from_ecr.docker_image.this",
              "module.docker_build_from_ecr.docker_registry_image.this",
              "module.ecr.aws_ecr_repository.this",
              "module.ecr.aws_ecrpublic_repository.this",
              "module.lambda_function_with_docker_build_from_ecr.aws_cloudwatch_log_group.lambda",
              "module.lambda_function_with_docker_build_from_ecr.aws_iam_role.lambda",
              "module.lambda_function_with_docker_build_from_ecr.aws_iam_role_policy.additional_inline",
              "module.lambda_function_with_docker_build_from_ecr.aws_iam_role_policy.additional_json",
              "module.lambda_function_with_docker_build_from_ecr.aws_iam_role_policy.additional_jsons",
              "module.lambda_function_with_docker_build_from_ecr.aws_iam_role_policy.async",
              "module.lambda_function_with_docker_build_from_ecr.aws_iam_role_policy.dead_letter",
              "module.lambda_function_with_docker_build_from_ecr.aws_iam_role_policy.logs",
              "module.lambda_function_with_docker_build_from_ecr.aws_iam_role_policy.tracing",
              "module.lambda_function_with_docker_build_from_ecr.aws_iam_role_policy.vpc",
              "module.lambda_function_with_docker_build_from_ecr.aws_iam_role_policy_attachment.additional_many",
              "module.lambda_function_with_docker_build_from_ecr.aws_iam_role_policy_attachment.additional_one",
              "module.lambda_function_with_docker_build_from_ecr.aws_lambda_function.this",
              "module.lambda_function_with_docker_build_from_ecr.aws_s3_object.lambda_package",
              "module.lambda_function_with_docker_build_from_ecr.data.aws_arn.log_group_arn",
              "module.lambda_function_with_docker_build_from_ecr.data.aws_cloudwatch_log_group.lambda",
              "module.lambda_function_with_docker_build_from_ecr.data.aws_iam_policy.tracing",
              "module.lambda_function_with_docker_build_from_ecr.data.aws_iam_policy.vpc",
              "module.lambda_function_with_docker_build_from_ecr.data.aws_iam_policy_document.additional_inline",
              "module.lambda_function_with_docker_build_from_ecr.data.aws_iam_policy_document.assume_role",
              "module.lambda_function_with_docker_build_from_ecr.data.aws_iam_policy_document.async",
              "module.lambda_function_with_docker_build_from_ecr.data.aws_iam_policy_document.dead_letter",
              "module.lambda_function_with_docker_build_from_ecr.data.aws_iam_policy_document.logs",
              "module.lambda_function_with_docker_build_from_ecr.data.aws_partition.current",
              "module.lambda_function_with_docker_build_from_ecr.data.external.archive_prepare",
              "module.lambda_function_with_docker_build_from_ecr.local_file.archive_plan",
              "module.lambda_function_with_docker_build_from_ecr.null_resource.archive"
            ]
          },
          {
            "address": "aws_api_gateway_method.pge_method_get",
            "mode": "managed",
            "type": "aws_api_gateway_method",
            "name": "pge_method_get",
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "schema_version": 0,
            "values": {
              "api_key_required": false,
              "authorization": "NONE",
              "authorization_scopes": [],
              "authorizer_id": "",
              "http_method": "GET",
              "id": "agm-iaoe8o5c0e-gl9g61-GET",
              "operation_name": "",
              "request_models": {},
              "request_parameters": {},
              "request_validator_id": "",
              "resource_id": "gl9g61",
              "rest_api_id": "iaoe8o5c0e"
            },
            "sensitive_values": {
              "authorization_scopes": [],
              "request_models": {},
              "request_parameters": {}
            },
            "depends_on": [
              "aws_api_gateway_resource.pge_resource_data",
              "aws_api_gateway_rest_api.pge_rest_api"
            ]
          },
          {
            "address": "aws_api_gateway_method.pge_method_post",
            "mode": "managed",
            "type": "aws_api_gateway_method",
            "name": "pge_method_post",
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "schema_version": 0,
            "values": {
              "api_key_required": false,
              "authorization": "NONE",
              "authorization_scopes": [],
              "authorizer_id": "",
              "http_method": "POST",
              "id": "agm-iaoe8o5c0e-wwpvml-POST",
              "operation_name": "",
              "request_models": {},
              "request_parameters": {},
              "request_validator_id": "",
              "resource_id": "wwpvml",
              "rest_api_id": "iaoe8o5c0e"
            },
            "sensitive_values": {
              "authorization_scopes": [],
              "request_models": {},
              "request_parameters": {}
            },
            "depends_on": [
              "aws_api_gateway_resource.pge_resource_token",
              "aws_api_gateway_rest_api.pge_rest_api"
            ]
          },
          {
            "address": "aws_api_gateway_method_settings.pge_method_settings",
            "mode": "managed",
            "type": "aws_api_gateway_method_settings",
            "name": "pge_method_settings",
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "schema_version": 0,
            "values": {
              "id": "iaoe8o5c0e-pge-*/*",
              "method_path": "*/*",
              "rest_api_id": "iaoe8o5c0e",
              "settings": [
                {
                  "cache_data_encrypted": false,
                  "cache_ttl_in_seconds": 300,
                  "caching_enabled": false,
                  "data_trace_enabled": true,
                  "logging_level": "INFO",
                  "metrics_enabled": false,
                  "require_authorization_for_cache_control": true,
                  "throttling_burst_limit": -1,
                  "throttling_rate_limit": -1,
                  "unauthorized_cache_control_header_strategy": "SUCCEED_WITH_RESPONSE_HEADER"
                }
              ],
              "stage_name": "pge"
            },
            "sensitive_values": {
              "settings": [
                {}
              ]
            },
            "depends_on": [
              "aws_api_gateway_deployment.pge_deployment",
              "aws_api_gateway_integration.pge_integration_get",
              "aws_api_gateway_integration.pge_integration_post",
              "aws_api_gateway_method.pge_method_get",
              "aws_api_gateway_method.pge_method_post",
              "aws_api_gateway_resource.pge_resource_data",
              "aws_api_gateway_resource.pge_resource_token",
              "aws_api_gateway_rest_api.pge_rest_api",
              "aws_api_gateway_stage.pge_stage",
              "aws_cloudwatch_log_group.pge_api_log_group",
              "aws_s3_bucket.pge_data_bucket",
              "data.aws_caller_identity.this",
              "data.aws_ecr_authorization_token.token",
              "data.aws_region.current",
              "module.docker_build_from_ecr.aws_ecr_repository.this",
              "module.docker_build_from_ecr.data.aws_caller_identity.this",
              "module.docker_build_from_ecr.data.aws_region.current",
              "module.docker_build_from_ecr.docker_image.this",
              "module.docker_build_from_ecr.docker_registry_image.this",
              "module.ecr.aws_ecr_repository.this",
              "module.ecr.aws_ecrpublic_repository.this",
              "module.lambda_function_with_docker_build_from_ecr.aws_cloudwatch_log_group.lambda",
              "module.lambda_function_with_docker_build_from_ecr.aws_iam_role.lambda",
              "module.lambda_function_with_docker_build_from_ecr.aws_iam_role_policy.additional_inline",
              "module.lambda_function_with_docker_build_from_ecr.aws_iam_role_policy.additional_json",
              "module.lambda_function_with_docker_build_from_ecr.aws_iam_role_policy.additional_jsons",
              "module.lambda_function_with_docker_build_from_ecr.aws_iam_role_policy.async",
              "module.lambda_function_with_docker_build_from_ecr.aws_iam_role_policy.dead_letter",
              "module.lambda_function_with_docker_build_from_ecr.aws_iam_role_policy.logs",
              "module.lambda_function_with_docker_build_from_ecr.aws_iam_role_policy.tracing",
              "module.lambda_function_with_docker_build_from_ecr.aws_iam_role_policy.vpc",
              "module.lambda_function_with_docker_build_from_ecr.aws_iam_role_policy_attachment.additional_many",
              "module.lambda_function_with_docker_build_from_ecr.aws_iam_role_policy_attachment.additional_one",
              "module.lambda_function_with_docker_build_from_ecr.aws_lambda_function.this",
              "module.lambda_function_with_docker_build_from_ecr.aws_s3_object.lambda_package",
              "module.lambda_function_with_docker_build_from_ecr.data.aws_arn.log_group_arn",
              "module.lambda_function_with_docker_build_from_ecr.data.aws_cloudwatch_log_group.lambda",
              "module.lambda_function_with_docker_build_from_ecr.data.aws_iam_policy.tracing",
              "module.lambda_function_with_docker_build_from_ecr.data.aws_iam_policy.vpc",
              "module.lambda_function_with_docker_build_from_ecr.data.aws_iam_policy_document.additional_inline",
              "module.lambda_function_with_docker_build_from_ecr.data.aws_iam_policy_document.assume_role",
              "module.lambda_function_with_docker_build_from_ecr.data.aws_iam_policy_document.async",
              "module.lambda_function_with_docker_build_from_ecr.data.aws_iam_policy_document.dead_letter",
              "module.lambda_function_with_docker_build_from_ecr.data.aws_iam_policy_document.logs",
              "module.lambda_function_with_docker_build_from_ecr.data.aws_partition.current",
              "module.lambda_function_with_docker_build_from_ecr.data.external.archive_prepare",
              "module.lambda_function_with_docker_build_from_ecr.local_file.archive_plan",
              "module.lambda_function_with_docker_build_from_ecr.null_resource.archive"
            ]
          },
          {
            "address": "aws_api_gateway_resource.pge_resource_data",
            "mode": "managed",
            "type": "aws_api_gateway_resource",
            "name": "pge_resource_data",
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "schema_version": 0,
            "values": {
              "id": "gl9g61",
              "parent_id": "i6dhoza7l1",
              "path": "/data",
              "path_part": "data",
              "rest_api_id": "iaoe8o5c0e"
            },
            "sensitive_values": {},
            "depends_on": [
              "aws_api_gateway_rest_api.pge_rest_api"
            ]
          },
          {
            "address": "aws_api_gateway_resource.pge_resource_token",
            "mode": "managed",
            "type": "aws_api_gateway_resource",
            "name": "pge_resource_token",
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "schema_version": 0,
            "values": {
              "id": "wwpvml",
              "parent_id": "i6dhoza7l1",
              "path": "/token",
              "path_part": "token",
              "rest_api_id": "iaoe8o5c0e"
            },
            "sensitive_values": {},
            "depends_on": [
              "aws_api_gateway_rest_api.pge_rest_api"
            ]
          },
          {
            "address": "aws_api_gateway_rest_api.pge_rest_api",
            "mode": "managed",
            "type": "aws_api_gateway_rest_api",
            "name": "pge_rest_api",
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "schema_version": 0,
            "values": {
              "api_key_source": "HEADER",
              "arn": "arn:aws:apigateway:us-east-1::/restapis/iaoe8o5c0e",
              "binary_media_types": [],
              "body": null,
              "created_date": "2025-02-03T09:42:01Z",
              "description": "PGE REST API",
              "disable_execute_api_endpoint": false,
              "endpoint_configuration": [
                {
                  "types": [
                    "REGIONAL"
                  ],
                  "vpc_endpoint_ids": []
                }
              ],
              "execution_arn": "arn:aws:execute-api:us-east-1:900357929763:iaoe8o5c0e",
              "fail_on_warnings": null,
              "id": "iaoe8o5c0e",
              "minimum_compression_size": "",
              "name": "pge-rest-api",
              "parameters": null,
              "policy": "",
              "put_rest_api_mode": null,
              "root_resource_id": "i6dhoza7l1",
              "tags": {},
              "tags_all": {}
            },
            "sensitive_values": {
              "binary_media_types": [],
              "endpoint_configuration": [
                {
                  "types": [
                    false
                  ],
                  "vpc_endpoint_ids": []
                }
              ],
              "tags": {},
              "tags_all": {}
            }
          },
          {
            "address": "aws_api_gateway_stage.pge_stage",
            "mode": "managed",
            "type": "aws_api_gateway_stage",
            "name": "pge_stage",
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "schema_version": 0,
            "values": {
              "access_log_settings": [
                {
                  "destination_arn": "arn:aws:logs:us-east-1:900357929763:log-group:API-Gateway-Execution-Logs_iaoe8o5c0e/pge",
                  "format": "{\"caller\":\"$context.identity.caller\",\"extendedRequestId\":\"$context.extendedRequestId\",\"httpMethod\":\"$context.httpMethod\",\"ip\":\"$context.identity.sourceIp\",\"protocol\":\"$context.protocol\",\"requestId\":\"$context.requestId\",\"requestTime\":\"$context.requestTime\",\"resourcePath\":\"$context.resourcePath\",\"responseLatency\":\"$context.responseLatency\",\"responseLength\":\"$context.responseLength\",\"status\":\"$context.status\",\"user\":\"$context.identity.user\"}"
                }
              ],
              "arn": "arn:aws:apigateway:us-east-1::/restapis/iaoe8o5c0e/stages/pge",
              "cache_cluster_enabled": false,
              "cache_cluster_size": "",
              "canary_settings": [],
              "client_certificate_id": "",
              "deployment_id": "kd8dub",
              "description": "",
              "documentation_version": "",
              "execution_arn": "arn:aws:execute-api:us-east-1:900357929763:iaoe8o5c0e/pge",
              "id": "ags-iaoe8o5c0e-pge",
              "invoke_url": "https://iaoe8o5c0e.execute-api.us-east-1.amazonaws.com/pge",
              "rest_api_id": "iaoe8o5c0e",
              "stage_name": "pge",
              "tags": {},
              "tags_all": {},
              "variables": {},
              "web_acl_arn": "",
              "xray_tracing_enabled": false
            },
            "sensitive_values": {
              "access_log_settings": [
                {}
              ],
              "canary_settings": [],
              "tags": {},
              "tags_all": {},
              "variables": {}
            },
            "depends_on": [
              "aws_api_gateway_deployment.pge_deployment",
              "aws_api_gateway_integration.pge_integration_get",
              "aws_api_gateway_integration.pge_integration_post",
              "aws_api_gateway_method.pge_method_get",
              "aws_api_gateway_method.pge_method_post",
              "aws_api_gateway_resource.pge_resource_data",
              "aws_api_gateway_resource.pge_resource_token",
              "aws_api_gateway_rest_api.pge_rest_api",
              "aws_cloudwatch_log_group.pge_api_log_group",
              "aws_s3_bucket.pge_data_bucket",
              "data.aws_caller_identity.this",
              "data.aws_ecr_authorization_token.token",
              "data.aws_region.current",
              "module.docker_build_from_ecr.aws_ecr_repository.this",
              "module.docker_build_from_ecr.data.aws_caller_identity.this",
              "module.docker_build_from_ecr.data.aws_region.current",
              "module.docker_build_from_ecr.docker_image.this",
              "module.docker_build_from_ecr.docker_registry_image.this",
              "module.ecr.aws_ecr_repository.this",
              "module.ecr.aws_ecrpublic_repository.this",
              "module.lambda_function_with_docker_build_from_ecr.aws_cloudwatch_log_group.lambda",
              "module.lambda_function_with_docker_build_from_ecr.aws_iam_role.lambda",
              "module.lambda_function_with_docker_build_from_ecr.aws_iam_role_policy.additional_inline",
              "module.lambda_function_with_docker_build_from_ecr.aws_iam_role_policy.additional_json",
              "module.lambda_function_with_docker_build_from_ecr.aws_iam_role_policy.additional_jsons",
              "module.lambda_function_with_docker_build_from_ecr.aws_iam_role_policy.async",
              "module.lambda_function_with_docker_build_from_ecr.aws_iam_role_policy.dead_letter",
              "module.lambda_function_with_docker_build_from_ecr.aws_iam_role_policy.logs",
              "module.lambda_function_with_docker_build_from_ecr.aws_iam_role_policy.tracing",
              "module.lambda_function_with_docker_build_from_ecr.aws_iam_role_policy.vpc",
              "module.lambda_function_with_docker_build_from_ecr.aws_iam_role_policy_attachment.additional_many",
              "module.lambda_function_with_docker_build_from_ecr.aws_iam_role_policy_attachment.additional_one",
              "module.lambda_function_with_docker_build_from_ecr.aws_lambda_function.this",
              "module.lambda_function_with_docker_build_from_ecr.aws_s3_object.lambda_package",
              "module.lambda_function_with_docker_build_from_ecr.data.aws_arn.log_group_arn",
              "module.lambda_function_with_docker_build_from_ecr.data.aws_cloudwatch_log_group.lambda",
              "module.lambda_function_with_docker_build_from_ecr.data.aws_iam_policy.tracing",
              "module.lambda_function_with_docker_build_from_ecr.data.aws_iam_policy.vpc",
              "module.lambda_function_with_docker_build_from_ecr.data.aws_iam_policy_document.additional_inline",
              "module.lambda_function_with_docker_build_from_ecr.data.aws_iam_policy_document.assume_role",
              "module.lambda_function_with_docker_build_from_ecr.data.aws_iam_policy_document.async",
              "module.lambda_function_with_docker_build_from_ecr.data.aws_iam_policy_document.dead_letter",
              "module.lambda_function_with_docker_build_from_ecr.data.aws_iam_policy_document.logs",
              "module.lambda_function_with_docker_build_from_ecr.data.aws_partition.current",
              "module.lambda_function_with_docker_build_from_ecr.data.external.archive_prepare",
              "module.lambda_function_with_docker_build_from_ecr.local_file.archive_plan",
              "module.lambda_function_with_docker_build_from_ecr.null_resource.archive"
            ]
          },
          {
            "address": "aws_cloudwatch_log_group.pge_api_log_group",
            "mode": "managed",
            "type": "aws_cloudwatch_log_group",
            "name": "pge_api_log_group",
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "schema_version": 0,
            "values": {
              "arn": "arn:aws:logs:us-east-1:900357929763:log-group:API-Gateway-Execution-Logs_iaoe8o5c0e/pge",
              "id": "API-Gateway-Execution-Logs_iaoe8o5c0e/pge",
              "kms_key_id": "",
              "log_group_class": "STANDARD",
              "name": "API-Gateway-Execution-Logs_iaoe8o5c0e/pge",
              "name_prefix": "",
              "retention_in_days": 14,
              "skip_destroy": false,
              "tags": {},
              "tags_all": {}
            },
            "sensitive_values": {
              "tags": {},
              "tags_all": {}
            },
            "depends_on": [
              "aws_api_gateway_rest_api.pge_rest_api"
            ]
          },
          {
            "address": "aws_iam_policy.pge_data_bucket_policy",
            "mode": "managed",
            "type": "aws_iam_policy",
            "name": "pge_data_bucket_policy",
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "schema_version": 0,
            "values": {
              "arn": "arn:aws:iam::900357929763:policy/pge_data_bucket_policy",
              "attachment_count": 1,
              "description": "Policy for PGE data bucket",
              "id": "arn:aws:iam::900357929763:policy/pge_data_bucket_policy",
              "name": "pge_data_bucket_policy",
              "name_prefix": "",
              "path": "/",
              "policy": "{\"Statement\":[{\"Action\":[\"s3:PutObject\",\"s3:ListBucket\",\"s3:GetObject\"],\"Effect\":\"Allow\",\"Resource\":[\"arn:aws:s3:::pge-data-bucket/*\",\"arn:aws:s3:::pge-data-bucket\"]}],\"Version\":\"2012-10-17\"}",
              "policy_id": "ANPA5DIMDXMRRHP3F7HJA",
              "tags": {},
              "tags_all": {}
            },
            "sensitive_values": {
              "tags": {},
              "tags_all": {}
            },
            "depends_on": [
              "aws_s3_bucket.pge_data_bucket",
              "data.aws_iam_policy_document.pge_data_bucket_policy"
            ]
          },
          {
            "address": "aws_iam_policy_attachment.pge_data_bucket_policy_attachment",
            "mode": "managed",
            "type": "aws_iam_policy_attachment",
            "name": "pge_data_bucket_policy_attachment",
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "schema_version": 0,
            "values": {
              "groups": [],
              "id": "pge_data_bucket_policy_attachment",
              "name": "pge_data_bucket_policy_attachment",
              "policy_arn": "arn:aws:iam::900357929763:policy/pge_data_bucket_policy",
              "roles": [
                "pge-lambda-with-docker-build-from-ecr"
              ],
              "users": []
            },
            "sensitive_values": {
              "groups": [],
              "roles": [
                false
              ],
              "users": []
            },
            "depends_on": [
              "aws_iam_policy.pge_data_bucket_policy",
              "aws_s3_bucket.pge_data_bucket",
              "data.aws_iam_policy_document.pge_data_bucket_policy",
              "data.aws_iam_role.pge_lambda_role",
              "module.lambda_function_with_docker_build_from_ecr.aws_iam_role.lambda",
              "module.lambda_function_with_docker_build_from_ecr.data.aws_iam_policy_document.assume_role"
            ]
          },
          {
            "address": "aws_iam_role.cloudwatch",
            "mode": "managed",
            "type": "aws_iam_role",
            "name": "cloudwatch",
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "schema_version": 0,
            "values": {
              "arn": "arn:aws:iam::900357929763:role/api_gateway_cloudwatch_global",
              "assume_role_policy": "{\"Statement\":[{\"Action\":\"sts:AssumeRole\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"apigateway.amazonaws.com\"}}],\"Version\":\"2012-10-17\"}",
              "create_date": "2025-02-03T13:34:25Z",
              "description": "",
              "force_detach_policies": false,
              "id": "api_gateway_cloudwatch_global",
              "inline_policy": [
                {
                  "name": "cloudwatch_global",
                  "policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Action\":[\"logs:TestMetricFilter\",\"logs:PutRetentionPolicy\",\"logs:PutLogEvents\",\"logs:GetLogEvents\",\"logs:FilterLogEvents\",\"logs:DescribeLogStreams\",\"logs:DescribeLogGroups\",\"logs:DeleteLogStream\",\"logs:DeleteLogGroup\",\"logs:CreateLogStream\",\"logs:CreateLogGroup\"],\"Effect\":\"Allow\",\"Resource\":\"*\"}]}"
                }
              ],
              "managed_policy_arns": [],
              "max_session_duration": 3600,
              "name": "api_gateway_cloudwatch_global",
              "name_prefix": "",
              "path": "/",
              "permissions_boundary": "",
              "tags": {},
              "tags_all": {},
              "unique_id": "AROA5DIMDXMRXGIJJZJNO"
            },
            "sensitive_values": {
              "inline_policy": [
                {}
              ],
              "managed_policy_arns": [],
              "tags": {},
              "tags_all": {}
            },
            "depends_on": [
              "data.aws_iam_policy_document.api_gateway_global_assume_role"
            ]
          },
          {
            "address": "aws_iam_role_policy.cloudwatch",
            "mode": "managed",
            "type": "aws_iam_role_policy",
            "name": "cloudwatch",
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "schema_version": 0,
            "values": {
              "id": "api_gateway_cloudwatch_global:cloudwatch_global",
              "name": "cloudwatch_global",
              "name_prefix": "",
              "policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Action\":[\"logs:TestMetricFilter\",\"logs:PutRetentionPolicy\",\"logs:PutLogEvents\",\"logs:GetLogEvents\",\"logs:FilterLogEvents\",\"logs:DescribeLogStreams\",\"logs:DescribeLogGroups\",\"logs:DeleteLogStream\",\"logs:DeleteLogGroup\",\"logs:CreateLogStream\",\"logs:CreateLogGroup\"],\"Effect\":\"Allow\",\"Resource\":\"*\"}]}",
              "role": "api_gateway_cloudwatch_global"
            },
            "sensitive_values": {},
            "depends_on": [
              "aws_iam_role.cloudwatch",
              "data.aws_iam_policy_document.api_gateway_cloudwatch_logs",
              "data.aws_iam_policy_document.api_gateway_global_assume_role"
            ]
          },
          {
            "address": "aws_lambda_permission.pge_lambda_permission",
            "mode": "managed",
            "type": "aws_lambda_permission",
            "name": "pge_lambda_permission",
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "schema_version": 0,
            "values": {
              "action": "lambda:InvokeFunction",
              "event_source_token": null,
              "function_name": "pge-lambda-with-docker-build-from-ecr",
              "function_url_auth_type": null,
              "id": "AllowAPIGatewayInvoke",
              "principal": "apigateway.amazonaws.com",
              "principal_org_id": null,
              "qualifier": "",
              "source_account": null,
              "source_arn": "arn:aws:execute-api:us-east-1:900357929763:iaoe8o5c0e/*/*",
              "statement_id": "AllowAPIGatewayInvoke",
              "statement_id_prefix": ""
            },
            "sensitive_values": {},
            "depends_on": [
              "aws_api_gateway_rest_api.pge_rest_api",
              "aws_s3_bucket.pge_data_bucket",
              "data.aws_caller_identity.this",
              "data.aws_ecr_authorization_token.token",
              "data.aws_region.current",
              "module.docker_build_from_ecr.aws_ecr_repository.this",
              "module.docker_build_from_ecr.data.aws_caller_identity.this",
              "module.docker_build_from_ecr.data.aws_region.current",
              "module.docker_build_from_ecr.docker_image.this",
              "module.docker_build_from_ecr.docker_registry_image.this",
              "module.ecr.aws_ecr_repository.this",
              "module.ecr.aws_ecrpublic_repository.this",
              "module.lambda_function_with_docker_build_from_ecr.aws_cloudwatch_log_group.lambda",
              "module.lambda_function_with_docker_build_from_ecr.aws_iam_role.lambda",
              "module.lambda_function_with_docker_build_from_ecr.aws_iam_role_policy.additional_inline",
              "module.lambda_function_with_docker_build_from_ecr.aws_iam_role_policy.additional_json",
              "module.lambda_function_with_docker_build_from_ecr.aws_iam_role_policy.additional_jsons",
              "module.lambda_function_with_docker_build_from_ecr.aws_iam_role_policy.async",
              "module.lambda_function_with_docker_build_from_ecr.aws_iam_role_policy.dead_letter",
              "module.lambda_function_with_docker_build_from_ecr.aws_iam_role_policy.logs",
              "module.lambda_function_with_docker_build_from_ecr.aws_iam_role_policy.tracing",
              "module.lambda_function_with_docker_build_from_ecr.aws_iam_role_policy.vpc",
              "module.lambda_function_with_docker_build_from_ecr.aws_iam_role_policy_attachment.additional_many",
              "module.lambda_function_with_docker_build_from_ecr.aws_iam_role_policy_attachment.additional_one",
              "module.lambda_function_with_docker_build_from_ecr.aws_lambda_function.this",
              "module.lambda_function_with_docker_build_from_ecr.aws_s3_object.lambda_package",
              "module.lambda_function_with_docker_build_from_ecr.data.aws_arn.log_group_arn",
              "module.lambda_function_with_docker_build_from_ecr.data.aws_cloudwatch_log_group.lambda",
              "module.lambda_function_with_docker_build_from_ecr.data.aws_iam_policy.tracing",
              "module.lambda_function_with_docker_build_from_ecr.data.aws_iam_policy.vpc",
              "module.lambda_function_with_docker_build_from_ecr.data.aws_iam_policy_document.additional_inline",
              "module.lambda_function_with_docker_build_from_ecr.data.aws_iam_policy_document.assume_role",
              "module.lambda_function_with_docker_build_from_ecr.data.aws_iam_policy_document.async",
              "module.lambda_function_with_docker_build_from_ecr.data.aws_iam_policy_document.dead_letter",
              "module.lambda_function_with_docker_build_from_ecr.data.aws_iam_policy_document.logs",
              "module.lambda_function_with_docker_build_from_ecr.data.aws_partition.current",
              "module.lambda_function_with_docker_build_from_ecr.data.external.archive_prepare",
              "module.lambda_function_with_docker_build_from_ecr.local_file.archive_plan",
              "module.lambda_function_with_docker_build_from_ecr.null_resource.archive"
            ]
          },
          {
            "address": "aws_s3_bucket.pge_data_bucket",
            "mode": "managed",
            "type": "aws_s3_bucket",
            "name": "pge_data_bucket",
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "schema_version": 0,
            "values": {
              "acceleration_status": "",
              "acl": null,
              "arn": "arn:aws:s3:::pge-data-bucket",
              "bucket": "pge-data-bucket",
              "bucket_domain_name": "pge-data-bucket.s3.amazonaws.com",
              "bucket_prefix": "",
              "bucket_regional_domain_name": "pge-data-bucket.s3.us-east-1.amazonaws.com",
              "cors_rule": [],
              "force_destroy": false,
              "grant": [
                {
                  "id": "38a6d1dcf9481cb7b268cb327c83bc600980dda287ac43350ed03e2883f2282e",
                  "permissions": [
                    "FULL_CONTROL"
                  ],
                  "type": "CanonicalUser",
                  "uri": ""
                }
              ],
              "hosted_zone_id": "Z3AQBSTGFYJSTF",
              "id": "pge-data-bucket",
              "lifecycle_rule": [],
              "logging": [],
              "object_lock_configuration": [],
              "object_lock_enabled": false,
              "policy": "",
              "region": "us-east-1",
              "replication_configuration": [],
              "request_payer": "BucketOwner",
              "server_side_encryption_configuration": [
                {
                  "rule": [
                    {
                      "apply_server_side_encryption_by_default": [
                        {
                          "kms_master_key_id": "",
                          "sse_algorithm": "AES256"
                        }
                      ],
                      "bucket_key_enabled": false
                    }
                  ]
                }
              ],
              "tags": {},
              "tags_all": {},
              "timeouts": null,
              "versioning": [
                {
                  "enabled": true,
                  "mfa_delete": false
                }
              ],
              "website": [],
              "website_domain": null,
              "website_endpoint": null
            },
            "sensitive_values": {
              "cors_rule": [],
              "grant": [
                {
                  "permissions": [
                    false
                  ]
                }
              ],
              "lifecycle_rule": [],
              "logging": [],
              "object_lock_configuration": [],
              "replication_configuration": [],
              "server_side_encryption_configuration": [
                {
                  "rule": [
                    {
                      "apply_server_side_encryption_by_default": [
                        {}
                      ]
                    }
                  ]
                }
              ],
              "tags": {},
              "tags_all": {},
              "versioning": [
                {}
              ],
              "website": []
            }
          },
          {
            "address": "aws_s3_bucket_public_access_block.pge_s3_bucket_public_access_block",
            "mode": "managed",
            "type": "aws_s3_bucket_public_access_block",
            "name": "pge_s3_bucket_public_access_block",
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "schema_version": 0,
            "values": {
              "block_public_acls": true,
              "block_public_policy": true,
              "bucket": "pge-data-bucket",
              "id": "pge-data-bucket",
              "ignore_public_acls": true,
              "restrict_public_buckets": true
            },
            "sensitive_values": {},
            "depends_on": [
              "aws_s3_bucket.pge_data_bucket"
            ]
          },
          {
            "address": "aws_s3_bucket_versioning.pge_s3_versioning",
            "mode": "managed",
            "type": "aws_s3_bucket_versioning",
            "name": "pge_s3_versioning",
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "schema_version": 0,
            "values": {
              "bucket": "pge-data-bucket",
              "expected_bucket_owner": "",
              "id": "pge-data-bucket",
              "mfa": null,
              "versioning_configuration": [
                {
                  "mfa_delete": "",
                  "status": "Enabled"
                }
              ]
            },
            "sensitive_values": {
              "versioning_configuration": [
                {}
              ]
            },
            "depends_on": [
              "aws_s3_bucket.pge_data_bucket"
            ]
          }
        ],
        "child_modules": [
          {
            "resources": [
              {
                "address": "module.docker_build_from_ecr.data.aws_caller_identity.this",
                "mode": "data",
                "type": "aws_caller_identity",
                "name": "this",
                "provider_name": "registry.terraform.io/hashicorp/aws",
                "schema_version": 0,
                "values": {
                  "account_id": "900357929763",
                  "arn": "arn:aws:iam::900357929763:root",
                  "id": "900357929763",
                  "user_id": "900357929763"
                },
                "sensitive_values": {}
              },
              {
                "address": "module.docker_build_from_ecr.data.aws_region.current",
                "mode": "data",
                "type": "aws_region",
                "name": "current",
                "provider_name": "registry.terraform.io/hashicorp/aws",
                "schema_version": 0,
                "values": {
                  "description": "US East (N. Virginia)",
                  "endpoint": "ec2.us-east-1.amazonaws.com",
                  "id": "us-east-1",
                  "name": "us-east-1"
                },
                "sensitive_values": {}
              },
              {
                "address": "module.docker_build_from_ecr.docker_image.this",
                "mode": "managed",
                "type": "docker_image",
                "name": "this",
                "provider_name": "registry.terraform.io/kreuzwerker/docker",
                "schema_version": 0,
                "values": {
                  "build": [
                    {
                      "auth_config": [],
                      "build_arg": null,
                      "build_args": {
                        "provenance": "false"
                      },
                      "build_id": "",
                      "cache_from": [
                        "900357929763.dkr.ecr.us-east-1.amazonaws.com/pge-ecr:latest"
                      ],
                      "cgroup_parent": "",
                      "context": "../",
                      "cpu_period": null,
                      "cpu_quota": null,
                      "cpu_set_cpus": "",
                      "cpu_set_mems": "",
                      "cpu_shares": null,
                      "dockerfile": "Dockerfile",
                      "extra_hosts": [],
                      "force_remove": null,
                      "isolation": "",
                      "label": null,
                      "labels": null,
                      "memory": null,
                      "memory_swap": null,
                      "network_mode": "",
                      "no_cache": null,
                      "platform": "linux/amd64",
                      "pull_parent": null,
                      "remote_context": "",
                      "remove": true,
                      "security_opt": [],
                      "session_id": "",
                      "shm_size": null,
                      "squash": null,
                      "suppress_output": null,
                      "tag": [],
                      "target": "",
                      "ulimit": [],
                      "version": ""
                    }
                  ],
                  "force_remove": false,
                  "id": "sha256:015596983bac83d5e53cff87a113552ad187fc8158a9fb01bd7bfe2c77309c2d900357929763.dkr.ecr.us-east-1.amazonaws.com/pge-ecr",
                  "image_id": "sha256:015596983bac83d5e53cff87a113552ad187fc8158a9fb01bd7bfe2c77309c2d",
                  "keep_locally": false,
                  "name": "900357929763.dkr.ecr.us-east-1.amazonaws.com/pge-ecr",
                  "platform": null,
                  "pull_triggers": null,
                  "repo_digest": "",
                  "triggers": {
                    "dir_sha": "eba97a0aa08bb5719fba2a7a7fe7a2215d10b57d"
                  }
                },
                "sensitive_values": {
                  "build": [
                    {
                      "auth_config": [],
                      "build_args": {},
                      "cache_from": [
                        false
                      ],
                      "extra_hosts": [],
                      "security_opt": [],
                      "tag": [],
                      "ulimit": []
                    }
                  ],
                  "triggers": {}
                },
                "depends_on": [
                  "data.aws_caller_identity.this",
                  "data.aws_ecr_authorization_token.token",
                  "data.aws_region.current",
                  "module.docker_build_from_ecr.aws_ecr_repository.this",
                  "module.docker_build_from_ecr.data.aws_caller_identity.this",
                  "module.docker_build_from_ecr.data.aws_region.current",
                  "module.ecr.aws_ecr_repository.this",
                  "module.ecr.aws_ecrpublic_repository.this"
                ]
              },
              {
                "address": "module.docker_build_from_ecr.docker_registry_image.this",
                "mode": "managed",
                "type": "docker_registry_image",
                "name": "this",
                "provider_name": "registry.terraform.io/kreuzwerker/docker",
                "schema_version": 0,
                "values": {
                  "id": "sha256:42448f457502cd9f2d853a7a5332bcec0d8e9fc3da4b97483e428c7c45f6ed0e",
                  "insecure_skip_verify": false,
                  "keep_remotely": false,
                  "name": "900357929763.dkr.ecr.us-east-1.amazonaws.com/pge-ecr",
                  "sha256_digest": "sha256:42448f457502cd9f2d853a7a5332bcec0d8e9fc3da4b97483e428c7c45f6ed0e",
                  "triggers": {
                    "dir_sha": "eba97a0aa08bb5719fba2a7a7fe7a2215d10b57d"
                  }
                },
                "sensitive_values": {
                  "triggers": {}
                },
                "depends_on": [
                  "data.aws_caller_identity.this",
                  "data.aws_ecr_authorization_token.token",
                  "data.aws_region.current",
                  "module.docker_build_from_ecr.aws_ecr_repository.this",
                  "module.docker_build_from_ecr.data.aws_caller_identity.this",
                  "module.docker_build_from_ecr.data.aws_region.current",
                  "module.docker_build_from_ecr.docker_image.this",
                  "module.ecr.aws_ecr_repository.this",
                  "module.ecr.aws_ecrpublic_repository.this"
                ]
              }
            ],
            "address": "module.docker_build_from_ecr"
          },
          {
            "resources": [
              {
                "address": "module.ecr.data.aws_caller_identity.current",
                "mode": "data",
                "type": "aws_caller_identity",
                "name": "current",
                "provider_name": "registry.terraform.io/hashicorp/aws",
                "schema_version": 0,
                "values": {
                  "account_id": "900357929763",
                  "arn": "arn:aws:iam::900357929763:root",
                  "id": "900357929763",
                  "user_id": "900357929763"
                },
                "sensitive_values": {}
              },
              {
                "address": "module.ecr.data.aws_iam_policy_document.repository[0]",
                "mode": "data",
                "type": "aws_iam_policy_document",
                "name": "repository",
                "index": 0,
                "provider_name": "registry.terraform.io/hashicorp/aws",
                "schema_version": 0,
                "values": {
                  "id": "1291779744",
                  "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"PrivateReadOnly\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"ecr:ListTagsForResource\",\n        \"ecr:ListImages\",\n        \"ecr:GetRepositoryPolicy\",\n        \"ecr:GetLifecyclePolicyPreview\",\n        \"ecr:GetLifecyclePolicy\",\n        \"ecr:GetDownloadUrlForLayer\",\n        \"ecr:GetAuthorizationToken\",\n        \"ecr:DescribeRepositories\",\n        \"ecr:DescribeImages\",\n        \"ecr:DescribeImageScanFindings\",\n        \"ecr:BatchGetImage\",\n        \"ecr:BatchCheckLayerAvailability\"\n      ],\n      \"Principal\": {\n        \"AWS\": \"arn:aws:iam::900357929763:root\"\n      }\n    },\n    {\n      \"Sid\": \"PrivateLambdaReadOnly\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"ecr:GetDownloadUrlForLayer\",\n        \"ecr:BatchGetImage\"\n      ],\n      \"Principal\": {\n        \"Service\": \"lambda.amazonaws.com\"\n      },\n      \"Condition\": {\n        \"StringLike\": {\n          \"aws:sourceArn\": \"arn:aws:lambda:us-east-1:900357929763:function:pge-lambda-with-docker-build-from-ecr\"\n        }\n      }\n    }\n  ]\n}",
                  "minified_json": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"PrivateReadOnly\",\"Effect\":\"Allow\",\"Action\":[\"ecr:ListTagsForResource\",\"ecr:ListImages\",\"ecr:GetRepositoryPolicy\",\"ecr:GetLifecyclePolicyPreview\",\"ecr:GetLifecyclePolicy\",\"ecr:GetDownloadUrlForLayer\",\"ecr:GetAuthorizationToken\",\"ecr:DescribeRepositories\",\"ecr:DescribeImages\",\"ecr:DescribeImageScanFindings\",\"ecr:BatchGetImage\",\"ecr:BatchCheckLayerAvailability\"],\"Principal\":{\"AWS\":\"arn:aws:iam::900357929763:root\"}},{\"Sid\":\"PrivateLambdaReadOnly\",\"Effect\":\"Allow\",\"Action\":[\"ecr:GetDownloadUrlForLayer\",\"ecr:BatchGetImage\"],\"Principal\":{\"Service\":\"lambda.amazonaws.com\"},\"Condition\":{\"StringLike\":{\"aws:sourceArn\":\"arn:aws:lambda:us-east-1:900357929763:function:pge-lambda-with-docker-build-from-ecr\"}}}]}",
                  "override_json": null,
                  "override_policy_documents": null,
                  "policy_id": null,
                  "source_json": null,
                  "source_policy_documents": null,
                  "statement": [
                    {
                      "actions": [
                        "ecr:BatchCheckLayerAvailability",
                        "ecr:BatchGetImage",
                        "ecr:DescribeImageScanFindings",
                        "ecr:DescribeImages",
                        "ecr:DescribeRepositories",
                        "ecr:GetAuthorizationToken",
                        "ecr:GetDownloadUrlForLayer",
                        "ecr:GetLifecyclePolicy",
                        "ecr:GetLifecyclePolicyPreview",
                        "ecr:GetRepositoryPolicy",
                        "ecr:ListImages",
                        "ecr:ListTagsForResource"
                      ],
                      "condition": [],
                      "effect": "Allow",
                      "not_actions": [],
                      "not_principals": [],
                      "not_resources": [],
                      "principals": [
                        {
                          "identifiers": [
                            "arn:aws:iam::900357929763:root"
                          ],
                          "type": "AWS"
                        }
                      ],
                      "resources": [],
                      "sid": "PrivateReadOnly"
                    },
                    {
                      "actions": [
                        "ecr:BatchGetImage",
                        "ecr:GetDownloadUrlForLayer"
                      ],
                      "condition": [
                        {
                          "test": "StringLike",
                          "values": [
                            "arn:aws:lambda:us-east-1:900357929763:function:pge-lambda-with-docker-build-from-ecr"
                          ],
                          "variable": "aws:sourceArn"
                        }
                      ],
                      "effect": "Allow",
                      "not_actions": [],
                      "not_principals": [],
                      "not_resources": [],
                      "principals": [
                        {
                          "identifiers": [
                            "lambda.amazonaws.com"
                          ],
                          "type": "Service"
                        }
                      ],
                      "resources": [],
                      "sid": "PrivateLambdaReadOnly"
                    }
                  ],
                  "version": "2012-10-17"
                },
                "sensitive_values": {
                  "statement": [
                    {
                      "actions": [
                        false,
                        false,
                        false,
                        false,
                        false,
                        false,
                        false,
                        false,
                        false,
                        false,
                        false,
                        false
                      ],
                      "condition": [],
                      "not_actions": [],
                      "not_principals": [],
                      "not_resources": [],
                      "principals": [
                        {
                          "identifiers": [
                            false
                          ]
                        }
                      ],
                      "resources": []
                    },
                    {
                      "actions": [
                        false,
                        false
                      ],
                      "condition": [
                        {
                          "values": [
                            false
                          ]
                        }
                      ],
                      "not_actions": [],
                      "not_principals": [],
                      "not_resources": [],
                      "principals": [
                        {
                          "identifiers": [
                            false
                          ]
                        }
                      ],
                      "resources": []
                    }
                  ]
                }
              },
              {
                "address": "module.ecr.data.aws_partition.current",
                "mode": "data",
                "type": "aws_partition",
                "name": "current",
                "provider_name": "registry.terraform.io/hashicorp/aws",
                "schema_version": 0,
                "values": {
                  "dns_suffix": "amazonaws.com",
                  "id": "aws",
                  "partition": "aws",
                  "reverse_dns_prefix": "com.amazonaws"
                },
                "sensitive_values": {}
              },
              {
                "address": "module.ecr.aws_ecr_repository.this[0]",
                "mode": "managed",
                "type": "aws_ecr_repository",
                "name": "this",
                "index": 0,
                "provider_name": "registry.terraform.io/hashicorp/aws",
                "schema_version": 0,
                "values": {
                  "arn": "arn:aws:ecr:us-east-1:900357929763:repository/pge-ecr",
                  "encryption_configuration": [
                    {
                      "encryption_type": "AES256",
                      "kms_key": ""
                    }
                  ],
                  "force_delete": true,
                  "id": "pge-ecr",
                  "image_scanning_configuration": [
                    {
                      "scan_on_push": true
                    }
                  ],
                  "image_tag_mutability": "MUTABLE",
                  "name": "pge-ecr",
                  "registry_id": "900357929763",
                  "repository_url": "900357929763.dkr.ecr.us-east-1.amazonaws.com/pge-ecr",
                  "tags": {},
                  "tags_all": {},
                  "timeouts": null
                },
                "sensitive_values": {
                  "encryption_configuration": [
                    {}
                  ],
                  "image_scanning_configuration": [
                    {}
                  ],
                  "tags": {},
                  "tags_all": {}
                }
              },
              {
                "address": "module.ecr.aws_ecr_repository_policy.this[0]",
                "mode": "managed",
                "type": "aws_ecr_repository_policy",
                "name": "this",
                "index": 0,
                "provider_name": "registry.terraform.io/hashicorp/aws",
                "schema_version": 0,
                "values": {
                  "id": "pge-ecr",
                  "policy": "{\"Statement\":[{\"Action\":[\"ecr:ListTagsForResource\",\"ecr:ListImages\",\"ecr:GetRepositoryPolicy\",\"ecr:GetLifecyclePolicyPreview\",\"ecr:GetLifecyclePolicy\",\"ecr:GetDownloadUrlForLayer\",\"ecr:GetAuthorizationToken\",\"ecr:DescribeRepositories\",\"ecr:DescribeImages\",\"ecr:DescribeImageScanFindings\",\"ecr:BatchGetImage\",\"ecr:BatchCheckLayerAvailability\"],\"Effect\":\"Allow\",\"Principal\":{\"AWS\":\"arn:aws:iam::900357929763:root\"},\"Sid\":\"PrivateReadOnly\"},{\"Action\":[\"ecr:GetDownloadUrlForLayer\",\"ecr:BatchGetImage\"],\"Condition\":{\"StringLike\":{\"aws:sourceArn\":\"arn:aws:lambda:us-east-1:900357929763:function:pge-lambda-with-docker-build-from-ecr\"}},\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"lambda.amazonaws.com\"},\"Sid\":\"PrivateLambdaReadOnly\"}],\"Version\":\"2012-10-17\"}",
                  "registry_id": "900357929763",
                  "repository": "pge-ecr"
                },
                "sensitive_values": {},
                "depends_on": [
                  "aws_s3_bucket.pge_data_bucket",
                  "data.aws_caller_identity.this",
                  "data.aws_ecr_authorization_token.token",
                  "data.aws_region.current",
                  "module.docker_build_from_ecr.aws_ecr_repository.this",
                  "module.docker_build_from_ecr.data.aws_caller_identity.this",
                  "module.docker_build_from_ecr.data.aws_region.current",
                  "module.docker_build_from_ecr.docker_image.this",
                  "module.docker_build_from_ecr.docker_registry_image.this",
                  "module.ecr.aws_ecr_repository.this",
                  "module.ecr.aws_ecrpublic_repository.this",
                  "module.ecr.data.aws_caller_identity.current",
                  "module.ecr.data.aws_iam_policy_document.repository",
                  "module.ecr.data.aws_partition.current",
                  "module.lambda_function_with_docker_build_from_ecr.aws_cloudwatch_log_group.lambda",
                  "module.lambda_function_with_docker_build_from_ecr.aws_iam_role.lambda",
                  "module.lambda_function_with_docker_build_from_ecr.aws_iam_role_policy.additional_inline",
                  "module.lambda_function_with_docker_build_from_ecr.aws_iam_role_policy.additional_json",
                  "module.lambda_function_with_docker_build_from_ecr.aws_iam_role_policy.additional_jsons",
                  "module.lambda_function_with_docker_build_from_ecr.aws_iam_role_policy.async",
                  "module.lambda_function_with_docker_build_from_ecr.aws_iam_role_policy.dead_letter",
                  "module.lambda_function_with_docker_build_from_ecr.aws_iam_role_policy.logs",
                  "module.lambda_function_with_docker_build_from_ecr.aws_iam_role_policy.tracing",
                  "module.lambda_function_with_docker_build_from_ecr.aws_iam_role_policy.vpc",
                  "module.lambda_function_with_docker_build_from_ecr.aws_iam_role_policy_attachment.additional_many",
                  "module.lambda_function_with_docker_build_from_ecr.aws_iam_role_policy_attachment.additional_one",
                  "module.lambda_function_with_docker_build_from_ecr.aws_lambda_function.this",
                  "module.lambda_function_with_docker_build_from_ecr.aws_s3_object.lambda_package",
                  "module.lambda_function_with_docker_build_from_ecr.data.aws_arn.log_group_arn",
                  "module.lambda_function_with_docker_build_from_ecr.data.aws_cloudwatch_log_group.lambda",
                  "module.lambda_function_with_docker_build_from_ecr.data.aws_iam_policy.tracing",
                  "module.lambda_function_with_docker_build_from_ecr.data.aws_iam_policy.vpc",
                  "module.lambda_function_with_docker_build_from_ecr.data.aws_iam_policy_document.additional_inline",
                  "module.lambda_function_with_docker_build_from_ecr.data.aws_iam_policy_document.assume_role",
                  "module.lambda_function_with_docker_build_from_ecr.data.aws_iam_policy_document.async",
                  "module.lambda_function_with_docker_build_from_ecr.data.aws_iam_policy_document.dead_letter",
                  "module.lambda_function_with_docker_build_from_ecr.data.aws_iam_policy_document.logs",
                  "module.lambda_function_with_docker_build_from_ecr.data.aws_partition.current",
                  "module.lambda_function_with_docker_build_from_ecr.data.external.archive_prepare",
                  "module.lambda_function_with_docker_build_from_ecr.local_file.archive_plan",
                  "module.lambda_function_with_docker_build_from_ecr.null_resource.archive"
                ]
              }
            ],
            "address": "module.ecr"
          },
          {
            "resources": [
              {
                "address": "module.lambda_function_with_docker_build_from_ecr.data.aws_caller_identity.current",
                "mode": "data",
                "type": "aws_caller_identity",
                "name": "current",
                "provider_name": "registry.terraform.io/hashicorp/aws",
                "schema_version": 0,
                "values": {
                  "account_id": "900357929763",
                  "arn": "arn:aws:iam::900357929763:root",
                  "id": "900357929763",
                  "user_id": "900357929763"
                },
                "sensitive_values": {}
              },
              {
                "address": "module.lambda_function_with_docker_build_from_ecr.data.aws_iam_policy_document.assume_role[0]",
                "mode": "data",
                "type": "aws_iam_policy_document",
                "name": "assume_role",
                "index": 0,
                "provider_name": "registry.terraform.io/hashicorp/aws",
                "schema_version": 0,
                "values": {
                  "id": "2690255455",
                  "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": \"sts:AssumeRole\",\n      \"Principal\": {\n        \"Service\": \"lambda.amazonaws.com\"\n      }\n    }\n  ]\n}",
                  "minified_json": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Effect\":\"Allow\",\"Action\":\"sts:AssumeRole\",\"Principal\":{\"Service\":\"lambda.amazonaws.com\"}}]}",
                  "override_json": null,
                  "override_policy_documents": null,
                  "policy_id": null,
                  "source_json": null,
                  "source_policy_documents": null,
                  "statement": [
                    {
                      "actions": [
                        "sts:AssumeRole"
                      ],
                      "condition": [],
                      "effect": "Allow",
                      "not_actions": [],
                      "not_principals": [],
                      "not_resources": [],
                      "principals": [
                        {
                          "identifiers": [
                            "lambda.amazonaws.com"
                          ],
                          "type": "Service"
                        }
                      ],
                      "resources": [],
                      "sid": ""
                    }
                  ],
                  "version": "2012-10-17"
                },
                "sensitive_values": {
                  "statement": [
                    {
                      "actions": [
                        false
                      ],
                      "condition": [],
                      "not_actions": [],
                      "not_principals": [],
                      "not_resources": [],
                      "principals": [
                        {
                          "identifiers": [
                            false
                          ]
                        }
                      ],
                      "resources": []
                    }
                  ]
                }
              },
              {
                "address": "module.lambda_function_with_docker_build_from_ecr.data.aws_iam_policy_document.logs[0]",
                "mode": "data",
                "type": "aws_iam_policy_document",
                "name": "logs",
                "index": 0,
                "provider_name": "registry.terraform.io/hashicorp/aws",
                "schema_version": 0,
                "values": {
                  "id": "2496674286",
                  "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"logs:PutLogEvents\",\n        \"logs:CreateLogStream\",\n        \"logs:CreateLogGroup\"\n      ],\n      \"Resource\": [\n        \"arn:aws:logs:us-east-1:900357929763:log-group:/aws/lambda/pge-lambda-with-docker-build-from-ecr:*:*\",\n        \"arn:aws:logs:us-east-1:900357929763:log-group:/aws/lambda/pge-lambda-with-docker-build-from-ecr:*\"\n      ]\n    }\n  ]\n}",
                  "minified_json": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Effect\":\"Allow\",\"Action\":[\"logs:PutLogEvents\",\"logs:CreateLogStream\",\"logs:CreateLogGroup\"],\"Resource\":[\"arn:aws:logs:us-east-1:900357929763:log-group:/aws/lambda/pge-lambda-with-docker-build-from-ecr:*:*\",\"arn:aws:logs:us-east-1:900357929763:log-group:/aws/lambda/pge-lambda-with-docker-build-from-ecr:*\"]}]}",
                  "override_json": null,
                  "override_policy_documents": null,
                  "policy_id": null,
                  "source_json": null,
                  "source_policy_documents": null,
                  "statement": [
                    {
                      "actions": [
                        "logs:CreateLogGroup",
                        "logs:CreateLogStream",
                        "logs:PutLogEvents"
                      ],
                      "condition": [],
                      "effect": "Allow",
                      "not_actions": [],
                      "not_principals": [],
                      "not_resources": [],
                      "principals": [],
                      "resources": [
                        "arn:aws:logs:us-east-1:900357929763:log-group:/aws/lambda/pge-lambda-with-docker-build-from-ecr:*",
                        "arn:aws:logs:us-east-1:900357929763:log-group:/aws/lambda/pge-lambda-with-docker-build-from-ecr:*:*"
                      ],
                      "sid": ""
                    }
                  ],
                  "version": "2012-10-17"
                },
                "sensitive_values": {
                  "statement": [
                    {
                      "actions": [
                        false,
                        false,
                        false
                      ],
                      "condition": [],
                      "not_actions": [],
                      "not_principals": [],
                      "not_resources": [],
                      "principals": [],
                      "resources": [
                        false,
                        false
                      ]
                    }
                  ]
                }
              },
              {
                "address": "module.lambda_function_with_docker_build_from_ecr.data.aws_partition.current",
                "mode": "data",
                "type": "aws_partition",
                "name": "current",
                "provider_name": "registry.terraform.io/hashicorp/aws",
                "schema_version": 0,
                "values": {
                  "dns_suffix": "amazonaws.com",
                  "id": "aws",
                  "partition": "aws",
                  "reverse_dns_prefix": "com.amazonaws"
                },
                "sensitive_values": {}
              },
              {
                "address": "module.lambda_function_with_docker_build_from_ecr.data.aws_region.current",
                "mode": "data",
                "type": "aws_region",
                "name": "current",
                "provider_name": "registry.terraform.io/hashicorp/aws",
                "schema_version": 0,
                "values": {
                  "description": "US East (N. Virginia)",
                  "endpoint": "ec2.us-east-1.amazonaws.com",
                  "id": "us-east-1",
                  "name": "us-east-1"
                },
                "sensitive_values": {}
              },
              {
                "address": "module.lambda_function_with_docker_build_from_ecr.aws_cloudwatch_log_group.lambda[0]",
                "mode": "managed",
                "type": "aws_cloudwatch_log_group",
                "name": "lambda",
                "index": 0,
                "provider_name": "registry.terraform.io/hashicorp/aws",
                "schema_version": 0,
                "values": {
                  "arn": "arn:aws:logs:us-east-1:900357929763:log-group:/aws/lambda/pge-lambda-with-docker-build-from-ecr",
                  "id": "/aws/lambda/pge-lambda-with-docker-build-from-ecr",
                  "kms_key_id": "",
                  "log_group_class": "STANDARD",
                  "name": "/aws/lambda/pge-lambda-with-docker-build-from-ecr",
                  "name_prefix": "",
                  "retention_in_days": 0,
                  "skip_destroy": false,
                  "tags": {},
                  "tags_all": {}
                },
                "sensitive_values": {
                  "tags": {},
                  "tags_all": {}
                }
              },
              {
                "address": "module.lambda_function_with_docker_build_from_ecr.aws_iam_role.lambda[0]",
                "mode": "managed",
                "type": "aws_iam_role",
                "name": "lambda",
                "index": 0,
                "provider_name": "registry.terraform.io/hashicorp/aws",
                "schema_version": 0,
                "values": {
                  "arn": "arn:aws:iam::900357929763:role/pge-lambda-with-docker-build-from-ecr",
                  "assume_role_policy": "{\"Statement\":[{\"Action\":\"sts:AssumeRole\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"lambda.amazonaws.com\"}}],\"Version\":\"2012-10-17\"}",
                  "create_date": "2025-02-03T04:29:26Z",
                  "description": "",
                  "force_detach_policies": true,
                  "id": "pge-lambda-with-docker-build-from-ecr",
                  "inline_policy": [
                    {
                      "name": "pge-lambda-with-docker-build-from-ecr-logs",
                      "policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Action\":[\"logs:PutLogEvents\",\"logs:CreateLogStream\",\"logs:CreateLogGroup\"],\"Effect\":\"Allow\",\"Resource\":[\"arn:aws:logs:us-east-1:900357929763:log-group:/aws/lambda/pge-lambda-with-docker-build-from-ecr:*:*\",\"arn:aws:logs:us-east-1:900357929763:log-group:/aws/lambda/pge-lambda-with-docker-build-from-ecr:*\"]}]}"
                    }
                  ],
                  "managed_policy_arns": [
                    "arn:aws:iam::900357929763:policy/pge_data_bucket_policy"
                  ],
                  "max_session_duration": 3600,
                  "name": "pge-lambda-with-docker-build-from-ecr",
                  "name_prefix": "",
                  "path": "/",
                  "permissions_boundary": "",
                  "tags": {},
                  "tags_all": {},
                  "unique_id": "AROA5DIMDXMRQCIZRDTMW"
                },
                "sensitive_values": {
                  "inline_policy": [
                    {}
                  ],
                  "managed_policy_arns": [
                    false
                  ],
                  "tags": {},
                  "tags_all": {}
                },
                "depends_on": [
                  "module.lambda_function_with_docker_build_from_ecr.data.aws_iam_policy_document.assume_role"
                ]
              },
              {
                "address": "module.lambda_function_with_docker_build_from_ecr.aws_iam_role_policy.logs[0]",
                "mode": "managed",
                "type": "aws_iam_role_policy",
                "name": "logs",
                "index": 0,
                "provider_name": "registry.terraform.io/hashicorp/aws",
                "schema_version": 0,
                "values": {
                  "id": "pge-lambda-with-docker-build-from-ecr:pge-lambda-with-docker-build-from-ecr-logs",
                  "name": "pge-lambda-with-docker-build-from-ecr-logs",
                  "name_prefix": "",
                  "policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Action\":[\"logs:PutLogEvents\",\"logs:CreateLogStream\",\"logs:CreateLogGroup\"],\"Effect\":\"Allow\",\"Resource\":[\"arn:aws:logs:us-east-1:900357929763:log-group:/aws/lambda/pge-lambda-with-docker-build-from-ecr:*:*\",\"arn:aws:logs:us-east-1:900357929763:log-group:/aws/lambda/pge-lambda-with-docker-build-from-ecr:*\"]}]}",
                  "role": "pge-lambda-with-docker-build-from-ecr"
                },
                "sensitive_values": {},
                "depends_on": [
                  "module.lambda_function_with_docker_build_from_ecr.aws_cloudwatch_log_group.lambda",
                  "module.lambda_function_with_docker_build_from_ecr.aws_iam_role.lambda",
                  "module.lambda_function_with_docker_build_from_ecr.data.aws_arn.log_group_arn",
                  "module.lambda_function_with_docker_build_from_ecr.data.aws_cloudwatch_log_group.lambda",
                  "module.lambda_function_with_docker_build_from_ecr.data.aws_iam_policy_document.assume_role",
                  "module.lambda_function_with_docker_build_from_ecr.data.aws_iam_policy_document.logs"
                ]
              },
              {
                "address": "module.lambda_function_with_docker_build_from_ecr.aws_lambda_function.this[0]",
                "mode": "managed",
                "type": "aws_lambda_function",
                "name": "this",
                "index": 0,
                "provider_name": "registry.terraform.io/hashicorp/aws",
                "schema_version": 0,
                "values": {
                  "architectures": [
                    "x86_64"
                  ],
                  "arn": "arn:aws:lambda:us-east-1:900357929763:function:pge-lambda-with-docker-build-from-ecr",
                  "code_sha256": "42448f457502cd9f2d853a7a5332bcec0d8e9fc3da4b97483e428c7c45f6ed0e",
                  "code_signing_config_arn": "",
                  "dead_letter_config": [],
                  "description": "PGE Test",
                  "environment": [
                    {
                      "variables": {
                        "FILE_OUTPUT": "pge-data-bucket"
                      }
                    }
                  ],
                  "ephemeral_storage": [
                    {
                      "size": 512
                    }
                  ],
                  "file_system_config": [],
                  "filename": null,
                  "function_name": "pge-lambda-with-docker-build-from-ecr",
                  "handler": "",
                  "id": "pge-lambda-with-docker-build-from-ecr",
                  "image_config": [],
                  "image_uri": "900357929763.dkr.ecr.us-east-1.amazonaws.com/pge-ecr@sha256:42448f457502cd9f2d853a7a5332bcec0d8e9fc3da4b97483e428c7c45f6ed0e",
                  "invoke_arn": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:900357929763:function:pge-lambda-with-docker-build-from-ecr/invocations",
                  "kms_key_arn": "",
                  "last_modified": "2025-02-04T11:49:21.000+0000",
                  "layers": [],
                  "logging_config": [
                    {
                      "application_log_level": "",
                      "log_format": "Text",
                      "log_group": "/aws/lambda/pge-lambda-with-docker-build-from-ecr",
                      "system_log_level": ""
                    }
                  ],
                  "memory_size": 128,
                  "package_type": "Image",
                  "publish": false,
                  "qualified_arn": "arn:aws:lambda:us-east-1:900357929763:function:pge-lambda-with-docker-build-from-ecr:$LATEST",
                  "qualified_invoke_arn": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:900357929763:function:pge-lambda-with-docker-build-from-ecr:$LATEST/invocations",
                  "replace_security_groups_on_destroy": null,
                  "replacement_security_group_ids": null,
                  "reserved_concurrent_executions": -1,
                  "role": "arn:aws:iam::900357929763:role/pge-lambda-with-docker-build-from-ecr",
                  "runtime": "",
                  "s3_bucket": null,
                  "s3_key": null,
                  "s3_object_version": null,
                  "signing_job_arn": "",
                  "signing_profile_version_arn": "",
                  "skip_destroy": false,
                  "snap_start": [],
                  "source_code_hash": "",
                  "source_code_size": 0,
                  "tags": {
                    "terraform-aws-modules": "lambda"
                  },
                  "tags_all": {
                    "terraform-aws-modules": "lambda"
                  },
                  "timeout": 3,
                  "timeouts": null,
                  "tracing_config": [
                    {
                      "mode": "PassThrough"
                    }
                  ],
                  "version": "$LATEST",
                  "vpc_config": []
                },
                "sensitive_values": {
                  "architectures": [
                    false
                  ],
                  "dead_letter_config": [],
                  "environment": [
                    {
                      "variables": {}
                    }
                  ],
                  "ephemeral_storage": [
                    {}
                  ],
                  "file_system_config": [],
                  "image_config": [],
                  "layers": [],
                  "logging_config": [
                    {}
                  ],
                  "snap_start": [],
                  "tags": {},
                  "tags_all": {},
                  "tracing_config": [
                    {}
                  ],
                  "vpc_config": []
                },
                "depends_on": [
                  "aws_s3_bucket.pge_data_bucket",
                  "data.aws_caller_identity.this",
                  "data.aws_ecr_authorization_token.token",
                  "data.aws_region.current",
                  "module.docker_build_from_ecr.aws_ecr_repository.this",
                  "module.docker_build_from_ecr.data.aws_caller_identity.this",
                  "module.docker_build_from_ecr.data.aws_region.current",
                  "module.docker_build_from_ecr.docker_image.this",
                  "module.docker_build_from_ecr.docker_registry_image.this",
                  "module.ecr.aws_ecr_repository.this",
                  "module.ecr.aws_ecrpublic_repository.this",
                  "module.lambda_function_with_docker_build_from_ecr.aws_cloudwatch_log_group.lambda",
                  "module.lambda_function_with_docker_build_from_ecr.aws_iam_role.lambda",
                  "module.lambda_function_with_docker_build_from_ecr.aws_iam_role_policy.additional_inline",
                  "module.lambda_function_with_docker_build_from_ecr.aws_iam_role_policy.additional_json",
                  "module.lambda_function_with_docker_build_from_ecr.aws_iam_role_policy.additional_jsons",
                  "module.lambda_function_with_docker_build_from_ecr.aws_iam_role_policy.async",
                  "module.lambda_function_with_docker_build_from_ecr.aws_iam_role_policy.dead_letter",
                  "module.lambda_function_with_docker_build_from_ecr.aws_iam_role_policy.logs",
                  "module.lambda_function_with_docker_build_from_ecr.aws_iam_role_policy.tracing",
                  "module.lambda_function_with_docker_build_from_ecr.aws_iam_role_policy.vpc",
                  "module.lambda_function_with_docker_build_from_ecr.aws_iam_role_policy_attachment.additional_many",
                  "module.lambda_function_with_docker_build_from_ecr.aws_iam_role_policy_attachment.additional_one",
                  "module.lambda_function_with_docker_build_from_ecr.aws_s3_object.lambda_package",
                  "module.lambda_function_with_docker_build_from_ecr.data.aws_arn.log_group_arn",
                  "module.lambda_function_with_docker_build_from_ecr.data.aws_cloudwatch_log_group.lambda",
                  "module.lambda_function_with_docker_build_from_ecr.data.aws_iam_policy.tracing",
                  "module.lambda_function_with_docker_build_from_ecr.data.aws_iam_policy.vpc",
                  "module.lambda_function_with_docker_build_from_ecr.data.aws_iam_policy_document.additional_inline",
                  "module.lambda_function_with_docker_build_from_ecr.data.aws_iam_policy_document.assume_role",
                  "module.lambda_function_with_docker_build_from_ecr.data.aws_iam_policy_document.async",
                  "module.lambda_function_with_docker_build_from_ecr.data.aws_iam_policy_document.dead_letter",
                  "module.lambda_function_with_docker_build_from_ecr.data.aws_iam_policy_document.logs",
                  "module.lambda_function_with_docker_build_from_ecr.data.aws_partition.current",
                  "module.lambda_function_with_docker_build_from_ecr.data.external.archive_prepare",
                  "module.lambda_function_with_docker_build_from_ecr.local_file.archive_plan",
                  "module.lambda_function_with_docker_build_from_ecr.null_resource.archive"
                ]
              }
            ],
            "address": "module.lambda_function_with_docker_build_from_ecr"
          }
        ]
      }
    }
  },
  "configuration": {
    "provider_config": {
      "aws": {
        "name": "aws",
        "full_name": "registry.terraform.io/hashicorp/aws",
        "version_constraint": ">= 5.79.0",
        "expressions": {
          "region": {
            "constant_value": "us-east-1"
          },
          "skip_credentials_validation": {
            "constant_value": true
          },
          "skip_metadata_api_check": {
            "constant_value": true
          },
          "skip_region_validation": {
            "constant_value": true
          }
        }
      },
      "docker": {
        "name": "docker",
        "full_name": "registry.terraform.io/kreuzwerker/docker",
        "version_constraint": ">= 3.0.0",
        "expressions": {
          "registry_auth": [
            {
              "address": {
                "references": [
                  "data.aws_caller_identity.this.account_id",
                  "data.aws_caller_identity.this",
                  "data.aws_region.current.name",
                  "data.aws_region.current"
                ]
              },
              "password": {
                "references": [
                  "data.aws_ecr_authorization_token.token.password",
                  "data.aws_ecr_authorization_token.token"
                ]
              },
              "username": {
                "references": [
                  "data.aws_ecr_authorization_token.token.user_name",
                  "data.aws_ecr_authorization_token.token"
                ]
              }
            }
          ]
        }
      },
      "module.docker_build_from_ecr:null": {
        "name": "null",
        "full_name": "registry.terraform.io/hashicorp/null",
        "version_constraint": ">= 2.0.0",
        "module_address": "module.docker_build_from_ecr"
      },
      "module.lambda_function_with_docker_build_from_ecr:external": {
        "name": "external",
        "full_name": "registry.terraform.io/hashicorp/external",
        "version_constraint": ">= 1.0.0",
        "module_address": "module.lambda_function_with_docker_build_from_ecr"
      },
      "module.lambda_function_with_docker_build_from_ecr:local": {
        "name": "local",
        "full_name": "registry.terraform.io/hashicorp/local",
        "version_constraint": ">= 1.0.0",
        "module_address": "module.lambda_function_with_docker_build_from_ecr"
      },
      "module.lambda_function_with_docker_build_from_ecr:null": {
        "name": "null",
        "full_name": "registry.terraform.io/hashicorp/null",
        "version_constraint": ">= 2.0.0",
        "module_address": "module.lambda_function_with_docker_build_from_ecr"
      },
      "random": {
        "name": "random",
        "full_name": "registry.terraform.io/hashicorp/random",
        "version_constraint": ">= 2.0.0"
      }
    },
    "root_module": {
      "resources": [
        {
          "address": "aws_api_gateway_account.api_gateway_account",
          "mode": "managed",
          "type": "aws_api_gateway_account",
          "name": "api_gateway_account",
          "provider_config_key": "aws",
          "expressions": {
            "cloudwatch_role_arn": {
              "references": [
                "aws_iam_role.cloudwatch.arn",
                "aws_iam_role.cloudwatch"
              ]
            }
          },
          "schema_version": 0
        },
        {
          "address": "aws_api_gateway_deployment.pge_deployment",
          "mode": "managed",
          "type": "aws_api_gateway_deployment",
          "name": "pge_deployment",
          "provider_config_key": "aws",
          "expressions": {
            "description": {
              "constant_value": "PGE Deployment"
            },
            "rest_api_id": {
              "references": [
                "aws_api_gateway_rest_api.pge_rest_api.id",
                "aws_api_gateway_rest_api.pge_rest_api"
              ]
            },
            "triggers": {
              "references": [
                "aws_api_gateway_method.pge_method_post.id",
                "aws_api_gateway_method.pge_method_post",
                "aws_api_gateway_method.pge_method_get.id",
                "aws_api_gateway_method.pge_method_get",
                "aws_api_gateway_resource.pge_resource_token.id",
                "aws_api_gateway_resource.pge_resource_token",
                "aws_api_gateway_resource.pge_resource_data.id",
                "aws_api_gateway_resource.pge_resource_data",
                "aws_api_gateway_integration.pge_integration_post.id",
                "aws_api_gateway_integration.pge_integration_post",
                "aws_api_gateway_integration.pge_integration_get.id",
                "aws_api_gateway_integration.pge_integration_get"
              ]
            }
          },
          "schema_version": 0
        },
        {
          "address": "aws_api_gateway_integration.pge_integration_get",
          "mode": "managed",
          "type": "aws_api_gateway_integration",
          "name": "pge_integration_get",
          "provider_config_key": "aws",
          "expressions": {
            "http_method": {
              "references": [
                "aws_api_gateway_method.pge_method_get.http_method",
                "aws_api_gateway_method.pge_method_get"
              ]
            },
            "integration_http_method": {
              "constant_value": "POST"
            },
            "resource_id": {
              "references": [
                "aws_api_gateway_resource.pge_resource_data.id",
                "aws_api_gateway_resource.pge_resource_data"
              ]
            },
            "rest_api_id": {
              "references": [
                "aws_api_gateway_rest_api.pge_rest_api.id",
                "aws_api_gateway_rest_api.pge_rest_api"
              ]
            },
            "type": {
              "constant_value": "AWS_PROXY"
            },
            "uri": {
              "references": [
                "module.lambda_function_with_docker_build_from_ecr.lambda_function_invoke_arn",
                "module.lambda_function_with_docker_build_from_ecr"
              ]
            }
          },
          "schema_version": 0
        },
        {
          "address": "aws_api_gateway_integration.pge_integration_post",
          "mode": "managed",
          "type": "aws_api_gateway_integration",
          "name": "pge_integration_post",
          "provider_config_key": "aws",
          "expressions": {
            "http_method": {
              "references": [
                "aws_api_gateway_method.pge_method_post.http_method",
                "aws_api_gateway_method.pge_method_post"
              ]
            },
            "integration_http_method": {
              "constant_value": "POST"
            },
            "resource_id": {
              "references": [
                "aws_api_gateway_resource.pge_resource_token.id",
                "aws_api_gateway_resource.pge_resource_token"
              ]
            },
            "rest_api_id": {
              "references": [
                "aws_api_gateway_rest_api.pge_rest_api.id",
                "aws_api_gateway_rest_api.pge_rest_api"
              ]
            },
            "type": {
              "constant_value": "AWS_PROXY"
            },
            "uri": {
              "references": [
                "module.lambda_function_with_docker_build_from_ecr.lambda_function_invoke_arn",
                "module.lambda_function_with_docker_build_from_ecr"
              ]
            }
          },
          "schema_version": 0
        },
        {
          "address": "aws_api_gateway_method.pge_method_get",
          "mode": "managed",
          "type": "aws_api_gateway_method",
          "name": "pge_method_get",
          "provider_config_key": "aws",
          "expressions": {
            "authorization": {
              "constant_value": "NONE"
            },
            "http_method": {
              "constant_value": "GET"
            },
            "resource_id": {
              "references": [
                "aws_api_gateway_resource.pge_resource_data.id",
                "aws_api_gateway_resource.pge_resource_data"
              ]
            },
            "rest_api_id": {
              "references": [
                "aws_api_gateway_rest_api.pge_rest_api.id",
                "aws_api_gateway_rest_api.pge_rest_api"
              ]
            }
          },
          "schema_version": 0
        },
        {
          "address": "aws_api_gateway_method.pge_method_post",
          "mode": "managed",
          "type": "aws_api_gateway_method",
          "name": "pge_method_post",
          "provider_config_key": "aws",
          "expressions": {
            "authorization": {
              "constant_value": "NONE"
            },
            "http_method": {
              "constant_value": "POST"
            },
            "resource_id": {
              "references": [
                "aws_api_gateway_resource.pge_resource_token.id",
                "aws_api_gateway_resource.pge_resource_token"
              ]
            },
            "rest_api_id": {
              "references": [
                "aws_api_gateway_rest_api.pge_rest_api.id",
                "aws_api_gateway_rest_api.pge_rest_api"
              ]
            }
          },
          "schema_version": 0
        },
        {
          "address": "aws_api_gateway_method_settings.pge_method_settings",
          "mode": "managed",
          "type": "aws_api_gateway_method_settings",
          "name": "pge_method_settings",
          "provider_config_key": "aws",
          "expressions": {
            "method_path": {
              "constant_value": "*/*"
            },
            "rest_api_id": {
              "references": [
                "aws_api_gateway_rest_api.pge_rest_api.id",
                "aws_api_gateway_rest_api.pge_rest_api"
              ]
            },
            "settings": [
              {
                "data_trace_enabled": {
                  "constant_value": true
                },
                "logging_level": {
                  "constant_value": "INFO"
                }
              }
            ],
            "stage_name": {
              "references": [
                "aws_api_gateway_stage.pge_stage.stage_name",
                "aws_api_gateway_stage.pge_stage"
              ]
            }
          },
          "schema_version": 0
        },
        {
          "address": "aws_api_gateway_resource.pge_resource_data",
          "mode": "managed",
          "type": "aws_api_gateway_resource",
          "name": "pge_resource_data",
          "provider_config_key": "aws",
          "expressions": {
            "parent_id": {
              "references": [
                "aws_api_gateway_rest_api.pge_rest_api.root_resource_id",
                "aws_api_gateway_rest_api.pge_rest_api"
              ]
            },
            "path_part": {
              "constant_value": "data"
            },
            "rest_api_id": {
              "references": [
                "aws_api_gateway_rest_api.pge_rest_api.id",
                "aws_api_gateway_rest_api.pge_rest_api"
              ]
            }
          },
          "schema_version": 0
        },
        {
          "address": "aws_api_gateway_resource.pge_resource_token",
          "mode": "managed",
          "type": "aws_api_gateway_resource",
          "name": "pge_resource_token",
          "provider_config_key": "aws",
          "expressions": {
            "parent_id": {
              "references": [
                "aws_api_gateway_rest_api.pge_rest_api.root_resource_id",
                "aws_api_gateway_rest_api.pge_rest_api"
              ]
            },
            "path_part": {
              "constant_value": "token"
            },
            "rest_api_id": {
              "references": [
                "aws_api_gateway_rest_api.pge_rest_api.id",
                "aws_api_gateway_rest_api.pge_rest_api"
              ]
            }
          },
          "schema_version": 0
        },
        {
          "address": "aws_api_gateway_rest_api.pge_rest_api",
          "mode": "managed",
          "type": "aws_api_gateway_rest_api",
          "name": "pge_rest_api",
          "provider_config_key": "aws",
          "expressions": {
            "description": {
              "constant_value": "PGE REST API"
            },
            "endpoint_configuration": [
              {
                "types": {
                  "constant_value": [
                    "REGIONAL"
                  ]
                }
              }
            ],
            "name": {
              "constant_value": "pge-rest-api"
            }
          },
          "schema_version": 0
        },
        {
          "address": "aws_api_gateway_stage.pge_stage",
          "mode": "managed",
          "type": "aws_api_gateway_stage",
          "name": "pge_stage",
          "provider_config_key": "aws",
          "expressions": {
            "access_log_settings": [
              {
                "destination_arn": {
                  "references": [
                    "aws_cloudwatch_log_group.pge_api_log_group.arn",
                    "aws_cloudwatch_log_group.pge_api_log_group"
                  ]
                },
                "format": {}
              }
            ],
            "deployment_id": {
              "references": [
                "aws_api_gateway_deployment.pge_deployment.id",
                "aws_api_gateway_deployment.pge_deployment"
              ]
            },
            "rest_api_id": {
              "references": [
                "aws_api_gateway_rest_api.pge_rest_api.id",
                "aws_api_gateway_rest_api.pge_rest_api"
              ]
            },
            "stage_name": {
              "constant_value": "pge"
            }
          },
          "schema_version": 0,
          "depends_on": [
            "aws_cloudwatch_log_group.pge_api_log_group"
          ]
        },
        {
          "address": "aws_cloudwatch_log_group.pge_api_log_group",
          "mode": "managed",
          "type": "aws_cloudwatch_log_group",
          "name": "pge_api_log_group",
          "provider_config_key": "aws",
          "expressions": {
            "name": {
              "references": [
                "aws_api_gateway_rest_api.pge_rest_api.id",
                "aws_api_gateway_rest_api.pge_rest_api"
              ]
            },
            "retention_in_days": {
              "constant_value": 14
            }
          },
          "schema_version": 0
        },
        {
          "address": "aws_iam_policy.pge_data_bucket_policy",
          "mode": "managed",
          "type": "aws_iam_policy",
          "name": "pge_data_bucket_policy",
          "provider_config_key": "aws",
          "expressions": {
            "description": {
              "constant_value": "Policy for PGE data bucket"
            },
            "name": {
              "constant_value": "pge_data_bucket_policy"
            },
            "policy": {
              "references": [
                "data.aws_iam_policy_document.pge_data_bucket_policy.json",
                "data.aws_iam_policy_document.pge_data_bucket_policy"
              ]
            }
          },
          "schema_version": 0
        },
        {
          "address": "aws_iam_policy_attachment.pge_data_bucket_policy_attachment",
          "mode": "managed",
          "type": "aws_iam_policy_attachment",
          "name": "pge_data_bucket_policy_attachment",
          "provider_config_key": "aws",
          "expressions": {
            "name": {
              "constant_value": "pge_data_bucket_policy_attachment"
            },
            "policy_arn": {
              "references": [
                "aws_iam_policy.pge_data_bucket_policy.arn",
                "aws_iam_policy.pge_data_bucket_policy"
              ]
            },
            "roles": {
              "references": [
                "data.aws_iam_role.pge_lambda_role.name",
                "data.aws_iam_role.pge_lambda_role"
              ]
            }
          },
          "schema_version": 0
        },
        {
          "address": "aws_iam_role.cloudwatch",
          "mode": "managed",
          "type": "aws_iam_role",
          "name": "cloudwatch",
          "provider_config_key": "aws",
          "expressions": {
            "assume_role_policy": {
              "references": [
                "data.aws_iam_policy_document.api_gateway_global_assume_role.json",
                "data.aws_iam_policy_document.api_gateway_global_assume_role"
              ]
            },
            "name": {
              "constant_value": "api_gateway_cloudwatch_global"
            }
          },
          "schema_version": 0
        },
        {
          "address": "aws_iam_role_policy.cloudwatch",
          "mode": "managed",
          "type": "aws_iam_role_policy",
          "name": "cloudwatch",
          "provider_config_key": "aws",
          "expressions": {
            "name": {
              "constant_value": "cloudwatch_global"
            },
            "policy": {
              "references": [
                "data.aws_iam_policy_document.api_gateway_cloudwatch_logs.json",
                "data.aws_iam_policy_document.api_gateway_cloudwatch_logs"
              ]
            },
            "role": {
              "references": [
                "aws_iam_role.cloudwatch.id",
                "aws_iam_role.cloudwatch"
              ]
            }
          },
          "schema_version": 0
        },
        {
          "address": "aws_lambda_permission.pge_lambda_permission",
          "mode": "managed",
          "type": "aws_lambda_permission",
          "name": "pge_lambda_permission",
          "provider_config_key": "aws",
          "expressions": {
            "action": {
              "constant_value": "lambda:InvokeFunction"
            },
            "function_name": {
              "references": [
                "module.lambda_function_with_docker_build_from_ecr.lambda_function_name",
                "module.lambda_function_with_docker_build_from_ecr"
              ]
            },
            "principal": {
              "constant_value": "apigateway.amazonaws.com"
            },
            "source_arn": {
              "references": [
                "aws_api_gateway_rest_api.pge_rest_api.execution_arn",
                "aws_api_gateway_rest_api.pge_rest_api"
              ]
            },
            "statement_id": {
              "constant_value": "AllowAPIGatewayInvoke"
            }
          },
          "schema_version": 0
        },
        {
          "address": "aws_s3_bucket.pge_data_bucket",
          "mode": "managed",
          "type": "aws_s3_bucket",
          "name": "pge_data_bucket",
          "provider_config_key": "aws",
          "expressions": {
            "bucket": {
              "constant_value": "pge-data-bucket"
            }
          },
          "schema_version": 0
        },
        {
          "address": "aws_s3_bucket_public_access_block.pge_s3_bucket_public_access_block",
          "mode": "managed",
          "type": "aws_s3_bucket_public_access_block",
          "name": "pge_s3_bucket_public_access_block",
          "provider_config_key": "aws",
          "expressions": {
            "block_public_acls": {
              "constant_value": true
            },
            "block_public_policy": {
              "constant_value": true
            },
            "bucket": {
              "references": [
                "aws_s3_bucket.pge_data_bucket.id",
                "aws_s3_bucket.pge_data_bucket"
              ]
            },
            "ignore_public_acls": {
              "constant_value": true
            },
            "restrict_public_buckets": {
              "constant_value": true
            }
          },
          "schema_version": 0
        },
        {
          "address": "aws_s3_bucket_versioning.pge_s3_versioning",
          "mode": "managed",
          "type": "aws_s3_bucket_versioning",
          "name": "pge_s3_versioning",
          "provider_config_key": "aws",
          "expressions": {
            "bucket": {
              "references": [
                "aws_s3_bucket.pge_data_bucket.id",
                "aws_s3_bucket.pge_data_bucket"
              ]
            },
            "versioning_configuration": [
              {
                "status": {
                  "constant_value": "Enabled"
                }
              }
            ]
          },
          "schema_version": 0
        },
        {
          "address": "data.aws_caller_identity.this",
          "mode": "data",
          "type": "aws_caller_identity",
          "name": "this",
          "provider_config_key": "aws",
          "schema_version": 0
        },
        {
          "address": "data.aws_ecr_authorization_token.token",
          "mode": "data",
          "type": "aws_ecr_authorization_token",
          "name": "token",
          "provider_config_key": "aws",
          "schema_version": 0
        },
        {
          "address": "data.aws_iam_policy_document.api_gateway_cloudwatch_logs",
          "mode": "data",
          "type": "aws_iam_policy_document",
          "name": "api_gateway_cloudwatch_logs",
          "provider_config_key": "aws",
          "expressions": {
            "statement": [
              {
                "actions": {
                  "constant_value": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:DescribeLogGroups",
                    "logs:DescribeLogStreams",
                    "logs:PutLogEvents",
                    "logs:GetLogEvents",
                    "logs:FilterLogEvents",
                    "logs:TestMetricFilter",
                    "logs:DeleteLogGroup",
                    "logs:DeleteLogStream",
                    "logs:PutRetentionPolicy"
                  ]
                },
                "effect": {
                  "constant_value": "Allow"
                },
                "resources": {
                  "constant_value": [
                    "*"
                  ]
                }
              }
            ]
          },
          "schema_version": 0
        },
        {
          "address": "data.aws_iam_policy_document.api_gateway_global_assume_role",
          "mode": "data",
          "type": "aws_iam_policy_document",
          "name": "api_gateway_global_assume_role",
          "provider_config_key": "aws",
          "expressions": {
            "statement": [
              {
                "actions": {
                  "constant_value": [
                    "sts:AssumeRole"
                  ]
                },
                "effect": {
                  "constant_value": "Allow"
                },
                "principals": [
                  {
                    "identifiers": {
                      "constant_value": [
                        "apigateway.amazonaws.com"
                      ]
                    },
                    "type": {
                      "constant_value": "Service"
                    }
                  }
                ]
              }
            ]
          },
          "schema_version": 0
        },
        {
          "address": "data.aws_iam_policy_document.pge_data_bucket_policy",
          "mode": "data",
          "type": "aws_iam_policy_document",
          "name": "pge_data_bucket_policy",
          "provider_config_key": "aws",
          "expressions": {
            "statement": [
              {
                "actions": {
                  "constant_value": [
                    "s3:PutObject",
                    "s3:GetObject",
                    "s3:ListBucket"
                  ]
                },
                "resources": {
                  "references": [
                    "aws_s3_bucket.pge_data_bucket.arn",
                    "aws_s3_bucket.pge_data_bucket",
                    "aws_s3_bucket.pge_data_bucket.arn",
                    "aws_s3_bucket.pge_data_bucket"
                  ]
                }
              }
            ]
          },
          "schema_version": 0
        },
        {
          "address": "data.aws_iam_role.pge_lambda_role",
          "mode": "data",
          "type": "aws_iam_role",
          "name": "pge_lambda_role",
          "provider_config_key": "aws",
          "expressions": {
            "name": {
              "references": [
                "module.lambda_function_with_docker_build_from_ecr.lambda_role_name",
                "module.lambda_function_with_docker_build_from_ecr"
              ]
            }
          },
          "schema_version": 0
        },
        {
          "address": "data.aws_region.current",
          "mode": "data",
          "type": "aws_region",
          "name": "current",
          "provider_config_key": "aws",
          "schema_version": 0
        }
      ],
      "module_calls": {
        "docker_build_from_ecr": {
          "source": "./modules/docker-build",
          "expressions": {
            "build_args": {
              "constant_value": {
                "provenance": false
              }
            },
            "cache_from": {
              "references": [
                "module.ecr.repository_url",
                "module.ecr"
              ]
            },
            "ecr_repo": {
              "references": [
                "module.ecr.repository_name",
                "module.ecr"
              ]
            },
            "image_tag": {
              "constant_value": "pge"
            },
            "platform": {
              "constant_value": "linux/amd64"
            },
            "source_path": {
              "references": [
                "local.source_path"
              ]
            },
            "triggers": {
              "references": [
                "local.dir_sha"
              ]
            },
            "use_image_tag": {
              "constant_value": false
            }
          },
          "module": {
            "outputs": {
              "image_id": {
                "expression": {
                  "references": [
                    "docker_registry_image.this.id",
                    "docker_registry_image.this"
                  ]
                },
                "description": "The ID of the Docker image"
              },
              "image_uri": {
                "expression": {
                  "references": [
                    "var.use_image_tag",
                    "docker_registry_image.this.name",
                    "docker_registry_image.this",
                    "docker_registry_image.this.name",
                    "docker_registry_image.this",
                    "docker_registry_image.this.id",
                    "docker_registry_image.this"
                  ]
                },
                "description": "The ECR image URI for deploying lambda"
              }
            },
            "resources": [
              {
                "address": "aws_ecr_lifecycle_policy.this",
                "mode": "managed",
                "type": "aws_ecr_lifecycle_policy",
                "name": "this",
                "provider_config_key": "aws",
                "expressions": {
                  "policy": {
                    "references": [
                      "var.ecr_repo_lifecycle_policy"
                    ]
                  },
                  "repository": {
                    "references": [
                      "local.ecr_repo"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.ecr_repo_lifecycle_policy"
                  ]
                }
              },
              {
                "address": "aws_ecr_repository.this",
                "mode": "managed",
                "type": "aws_ecr_repository",
                "name": "this",
                "provider_config_key": "aws",
                "expressions": {
                  "force_delete": {
                    "references": [
                      "var.ecr_force_delete"
                    ]
                  },
                  "image_scanning_configuration": [
                    {
                      "scan_on_push": {
                        "references": [
                          "var.scan_on_push"
                        ]
                      }
                    }
                  ],
                  "image_tag_mutability": {
                    "references": [
                      "var.image_tag_mutability"
                    ]
                  },
                  "name": {
                    "references": [
                      "var.ecr_repo"
                    ]
                  },
                  "tags": {
                    "references": [
                      "var.ecr_repo_tags"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.create_ecr_repo"
                  ]
                }
              },
              {
                "address": "docker_image.this",
                "mode": "managed",
                "type": "docker_image",
                "name": "this",
                "provider_config_key": "docker",
                "expressions": {
                  "build": [
                    {
                      "build_args": {
                        "references": [
                          "var.build_args"
                        ]
                      },
                      "cache_from": {
                        "references": [
                          "var.cache_from"
                        ]
                      },
                      "context": {
                        "references": [
                          "var.source_path"
                        ]
                      },
                      "dockerfile": {
                        "references": [
                          "var.docker_file_path"
                        ]
                      },
                      "platform": {
                        "references": [
                          "var.platform"
                        ]
                      }
                    }
                  ],
                  "force_remove": {
                    "references": [
                      "var.force_remove"
                    ]
                  },
                  "keep_locally": {
                    "references": [
                      "var.keep_locally"
                    ]
                  },
                  "name": {
                    "references": [
                      "local.ecr_image_name"
                    ]
                  },
                  "triggers": {
                    "references": [
                      "var.triggers"
                    ]
                  }
                },
                "schema_version": 0
              },
              {
                "address": "docker_registry_image.this",
                "mode": "managed",
                "type": "docker_registry_image",
                "name": "this",
                "provider_config_key": "docker",
                "expressions": {
                  "keep_remotely": {
                    "references": [
                      "var.keep_remotely"
                    ]
                  },
                  "name": {
                    "references": [
                      "docker_image.this.name",
                      "docker_image.this"
                    ]
                  },
                  "triggers": {
                    "references": [
                      "var.triggers",
                      "docker_image.this.image_id",
                      "docker_image.this",
                      "var.triggers"
                    ]
                  }
                },
                "schema_version": 0
              },
              {
                "address": "null_resource.sam_metadata_docker_registry_image",
                "mode": "managed",
                "type": "null_resource",
                "name": "sam_metadata_docker_registry_image",
                "provider_config_key": "module.docker_build_from_ecr:null",
                "expressions": {
                  "triggers": {
                    "references": [
                      "var.source_path",
                      "var.docker_file_path",
                      "var.build_args",
                      "var.image_tag",
                      "docker_registry_image.this.name",
                      "docker_registry_image.this"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.create_sam_metadata"
                  ]
                },
                "depends_on": [
                  "docker_registry_image.this"
                ]
              },
              {
                "address": "data.aws_caller_identity.this",
                "mode": "data",
                "type": "aws_caller_identity",
                "name": "this",
                "provider_config_key": "aws",
                "schema_version": 0
              },
              {
                "address": "data.aws_region.current",
                "mode": "data",
                "type": "aws_region",
                "name": "current",
                "provider_config_key": "aws",
                "schema_version": 0
              }
            ],
            "variables": {
              "build_args": {
                "default": {},
                "description": "A map of Docker build arguments."
              },
              "cache_from": {
                "default": [],
                "description": "List of images to consider as cache sources when building the image."
              },
              "create_ecr_repo": {
                "default": false,
                "description": "Controls whether ECR repository for Lambda image should be created"
              },
              "create_sam_metadata": {
                "default": false,
                "description": "Controls whether the SAM metadata null resource should be created"
              },
              "docker_file_path": {
                "default": "Dockerfile",
                "description": "Path to Dockerfile in source package"
              },
              "ecr_address": {
                "default": null,
                "description": "Address of ECR repository for cross-account container image pulling (optional). Option `create_ecr_repo` must be `false`"
              },
              "ecr_force_delete": {
                "default": true,
                "description": "If true, will delete the repository even if it contains images."
              },
              "ecr_repo": {
                "default": null,
                "description": "Name of ECR repository to use or to create"
              },
              "ecr_repo_lifecycle_policy": {
                "default": null,
                "description": "A JSON formatted ECR lifecycle policy to automate the cleaning up of unused images."
              },
              "ecr_repo_tags": {
                "default": {},
                "description": "A map of tags to assign to ECR repository"
              },
              "force_remove": {
                "default": false,
                "description": "Whether to remove image forcibly when the resource is destroyed."
              },
              "image_tag": {
                "default": null,
                "description": "Image tag to use. If not specified current timestamp in format 'YYYYMMDDhhmmss' will be used. This can lead to unnecessary rebuilds."
              },
              "image_tag_mutability": {
                "default": "MUTABLE",
                "description": "The tag mutability setting for the repository. Must be one of: `MUTABLE` or `IMMUTABLE`"
              },
              "keep_locally": {
                "default": false,
                "description": "Whether to delete the Docker image locally on destroy operation."
              },
              "keep_remotely": {
                "default": false,
                "description": "Whether to keep Docker image in the remote registry on destroy operation."
              },
              "platform": {
                "default": null,
                "description": "The target architecture platform to build the image for."
              },
              "scan_on_push": {
                "default": false,
                "description": "Indicates whether images are scanned after being pushed to the repository"
              },
              "source_path": {
                "default": null,
                "description": "Path to folder containing application code"
              },
              "triggers": {
                "default": {},
                "description": "A map of arbitrary strings that, when changed, will force the docker_image resource to be replaced. This can be used to rebuild an image when contents of source code folders change"
              },
              "use_image_tag": {
                "default": true,
                "description": "Controls whether to use image tag in ECR repository URI or not. Disable this to deploy latest image using ID (sha256:...)"
              }
            }
          }
        },
        "ecr": {
          "source": "terraform-aws-modules/ecr/aws",
          "expressions": {
            "create_lifecycle_policy": {
              "constant_value": false
            },
            "repository_force_delete": {
              "constant_value": true
            },
            "repository_image_tag_mutability": {
              "constant_value": "MUTABLE"
            },
            "repository_lambda_read_access_arns": {
              "references": [
                "module.lambda_function_with_docker_build_from_ecr.lambda_function_arn",
                "module.lambda_function_with_docker_build_from_ecr"
              ]
            },
            "repository_name": {
              "constant_value": "pge-ecr"
            }
          },
          "module": {
            "outputs": {
              "repository_arn": {
                "expression": {
                  "references": [
                    "aws_ecr_repository.this[0].arn",
                    "aws_ecr_repository.this[0]",
                    "aws_ecr_repository.this",
                    "aws_ecrpublic_repository.this[0].arn",
                    "aws_ecrpublic_repository.this[0]",
                    "aws_ecrpublic_repository.this"
                  ]
                },
                "description": "Full ARN of the repository"
              },
              "repository_name": {
                "expression": {
                  "references": [
                    "aws_ecr_repository.this[0].name",
                    "aws_ecr_repository.this[0]",
                    "aws_ecr_repository.this",
                    "aws_ecrpublic_repository.this[0].id",
                    "aws_ecrpublic_repository.this[0]",
                    "aws_ecrpublic_repository.this"
                  ]
                },
                "description": "Name of the repository"
              },
              "repository_registry_id": {
                "expression": {
                  "references": [
                    "aws_ecr_repository.this[0].registry_id",
                    "aws_ecr_repository.this[0]",
                    "aws_ecr_repository.this",
                    "aws_ecrpublic_repository.this[0].registry_id",
                    "aws_ecrpublic_repository.this[0]",
                    "aws_ecrpublic_repository.this"
                  ]
                },
                "description": "The registry ID where the repository was created"
              },
              "repository_url": {
                "expression": {
                  "references": [
                    "aws_ecr_repository.this[0].repository_url",
                    "aws_ecr_repository.this[0]",
                    "aws_ecr_repository.this",
                    "aws_ecrpublic_repository.this[0].repository_uri",
                    "aws_ecrpublic_repository.this[0]",
                    "aws_ecrpublic_repository.this"
                  ]
                },
                "description": "The URL of the repository"
              }
            },
            "resources": [
              {
                "address": "aws_ecr_lifecycle_policy.this",
                "mode": "managed",
                "type": "aws_ecr_lifecycle_policy",
                "name": "this",
                "provider_config_key": "aws",
                "expressions": {
                  "policy": {
                    "references": [
                      "var.repository_lifecycle_policy"
                    ]
                  },
                  "repository": {
                    "references": [
                      "aws_ecr_repository.this[0].name",
                      "aws_ecr_repository.this[0]",
                      "aws_ecr_repository.this"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.create_private_repository",
                    "var.create_lifecycle_policy"
                  ]
                }
              },
              {
                "address": "aws_ecr_pull_through_cache_rule.this",
                "mode": "managed",
                "type": "aws_ecr_pull_through_cache_rule",
                "name": "this",
                "provider_config_key": "aws",
                "expressions": {
                  "credential_arn": {
                    "references": [
                      "each.value.credential_arn",
                      "each.value"
                    ]
                  },
                  "ecr_repository_prefix": {
                    "references": [
                      "each.value.ecr_repository_prefix",
                      "each.value"
                    ]
                  },
                  "upstream_registry_url": {
                    "references": [
                      "each.value.upstream_registry_url",
                      "each.value"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "var.registry_pull_through_cache_rules",
                    "var.create"
                  ]
                }
              },
              {
                "address": "aws_ecr_registry_policy.this",
                "mode": "managed",
                "type": "aws_ecr_registry_policy",
                "name": "this",
                "provider_config_key": "aws",
                "expressions": {
                  "policy": {
                    "references": [
                      "var.registry_policy"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.create",
                    "var.create_registry_policy"
                  ]
                }
              },
              {
                "address": "aws_ecr_registry_scanning_configuration.this",
                "mode": "managed",
                "type": "aws_ecr_registry_scanning_configuration",
                "name": "this",
                "provider_config_key": "aws",
                "expressions": {
                  "scan_type": {
                    "references": [
                      "var.registry_scan_type"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.create",
                    "var.manage_registry_scanning_configuration"
                  ]
                }
              },
              {
                "address": "aws_ecr_replication_configuration.this",
                "mode": "managed",
                "type": "aws_ecr_replication_configuration",
                "name": "this",
                "provider_config_key": "aws",
                "expressions": {
                  "replication_configuration": [
                    {}
                  ]
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.create",
                    "var.create_registry_replication_configuration"
                  ]
                }
              },
              {
                "address": "aws_ecr_repository.this",
                "mode": "managed",
                "type": "aws_ecr_repository",
                "name": "this",
                "provider_config_key": "aws",
                "expressions": {
                  "encryption_configuration": [
                    {
                      "encryption_type": {
                        "references": [
                          "var.repository_encryption_type"
                        ]
                      },
                      "kms_key": {
                        "references": [
                          "var.repository_kms_key"
                        ]
                      }
                    }
                  ],
                  "force_delete": {
                    "references": [
                      "var.repository_force_delete"
                    ]
                  },
                  "image_scanning_configuration": [
                    {
                      "scan_on_push": {
                        "references": [
                          "var.repository_image_scan_on_push"
                        ]
                      }
                    }
                  ],
                  "image_tag_mutability": {
                    "references": [
                      "var.repository_image_tag_mutability"
                    ]
                  },
                  "name": {
                    "references": [
                      "var.repository_name"
                    ]
                  },
                  "tags": {
                    "references": [
                      "var.tags"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.create_private_repository"
                  ]
                }
              },
              {
                "address": "aws_ecr_repository_policy.this",
                "mode": "managed",
                "type": "aws_ecr_repository_policy",
                "name": "this",
                "provider_config_key": "aws",
                "expressions": {
                  "policy": {
                    "references": [
                      "var.create_repository_policy",
                      "data.aws_iam_policy_document.repository[0].json",
                      "data.aws_iam_policy_document.repository[0]",
                      "data.aws_iam_policy_document.repository",
                      "var.repository_policy"
                    ]
                  },
                  "repository": {
                    "references": [
                      "aws_ecr_repository.this[0].name",
                      "aws_ecr_repository.this[0]",
                      "aws_ecr_repository.this"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.create_private_repository",
                    "var.attach_repository_policy"
                  ]
                }
              },
              {
                "address": "aws_ecrpublic_repository.this",
                "mode": "managed",
                "type": "aws_ecrpublic_repository",
                "name": "this",
                "provider_config_key": "aws",
                "expressions": {
                  "repository_name": {
                    "references": [
                      "var.repository_name"
                    ]
                  },
                  "tags": {
                    "references": [
                      "var.tags"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.create_public_repository"
                  ]
                }
              },
              {
                "address": "aws_ecrpublic_repository_policy.example",
                "mode": "managed",
                "type": "aws_ecrpublic_repository_policy",
                "name": "example",
                "provider_config_key": "aws",
                "expressions": {
                  "policy": {
                    "references": [
                      "var.create_repository_policy",
                      "data.aws_iam_policy_document.repository[0].json",
                      "data.aws_iam_policy_document.repository[0]",
                      "data.aws_iam_policy_document.repository",
                      "var.repository_policy"
                    ]
                  },
                  "repository_name": {
                    "references": [
                      "aws_ecrpublic_repository.this[0].repository_name",
                      "aws_ecrpublic_repository.this[0]",
                      "aws_ecrpublic_repository.this"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.create_public_repository"
                  ]
                }
              },
              {
                "address": "data.aws_caller_identity.current",
                "mode": "data",
                "type": "aws_caller_identity",
                "name": "current",
                "provider_config_key": "aws",
                "schema_version": 0
              },
              {
                "address": "data.aws_iam_policy_document.repository",
                "mode": "data",
                "type": "aws_iam_policy_document",
                "name": "repository",
                "provider_config_key": "aws",
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.create",
                    "var.create_repository",
                    "var.create_repository_policy"
                  ]
                }
              },
              {
                "address": "data.aws_partition.current",
                "mode": "data",
                "type": "aws_partition",
                "name": "current",
                "provider_config_key": "aws",
                "schema_version": 0
              }
            ],
            "variables": {
              "attach_repository_policy": {
                "default": true,
                "description": "Determines whether a repository policy will be attached to the repository"
              },
              "create": {
                "default": true,
                "description": "Determines whether resources will be created (affects all resources)"
              },
              "create_lifecycle_policy": {
                "default": true,
                "description": "Determines whether a lifecycle policy will be created"
              },
              "create_registry_policy": {
                "default": false,
                "description": "Determines whether a registry policy will be created"
              },
              "create_registry_replication_configuration": {
                "default": false,
                "description": "Determines whether a registry replication configuration will be created"
              },
              "create_repository": {
                "default": true,
                "description": "Determines whether a repository will be created"
              },
              "create_repository_policy": {
                "default": true,
                "description": "Determines whether a repository policy will be created"
              },
              "manage_registry_scanning_configuration": {
                "default": false,
                "description": "Determines whether the registry scanning configuration will be managed"
              },
              "public_repository_catalog_data": {
                "default": {},
                "description": "Catalog data configuration for the repository"
              },
              "registry_policy": {
                "default": null,
                "description": "The policy document. This is a JSON formatted string"
              },
              "registry_pull_through_cache_rules": {
                "default": {},
                "description": "List of pull through cache rules to create"
              },
              "registry_replication_rules": {
                "default": [],
                "description": "The replication rules for a replication configuration. A maximum of 10 are allowed"
              },
              "registry_scan_rules": {
                "default": [],
                "description": "One or multiple blocks specifying scanning rules to determine which repository filters are used and at what frequency scanning will occur"
              },
              "registry_scan_type": {
                "default": "ENHANCED",
                "description": "the scanning type to set for the registry. Can be either `ENHANCED` or `BASIC`"
              },
              "repository_encryption_type": {
                "default": null,
                "description": "The encryption type for the repository. Must be one of: `KMS` or `AES256`. Defaults to `AES256`"
              },
              "repository_force_delete": {
                "default": null,
                "description": "If `true`, will delete the repository even if it contains images. Defaults to `false`"
              },
              "repository_image_scan_on_push": {
                "default": true,
                "description": "Indicates whether images are scanned after being pushed to the repository (`true`) or not scanned (`false`)"
              },
              "repository_image_tag_mutability": {
                "default": "IMMUTABLE",
                "description": "The tag mutability setting for the repository. Must be one of: `MUTABLE` or `IMMUTABLE`. Defaults to `IMMUTABLE`"
              },
              "repository_kms_key": {
                "default": null,
                "description": "The ARN of the KMS key to use when encryption_type is `KMS`. If not specified, uses the default AWS managed key for ECR"
              },
              "repository_lambda_read_access_arns": {
                "default": [],
                "description": "The ARNs of the Lambda service roles that have read access to the repository"
              },
              "repository_lifecycle_policy": {
                "default": "",
                "description": "The policy document. This is a JSON formatted string. See more details about [Policy Parameters](http://docs.aws.amazon.com/AmazonECR/latest/userguide/LifecyclePolicies.html#lifecycle_policy_parameters) in the official AWS docs"
              },
              "repository_name": {
                "default": "",
                "description": "The name of the repository"
              },
              "repository_policy": {
                "default": null,
                "description": "The JSON policy to apply to the repository. If not specified, uses the default policy"
              },
              "repository_policy_statements": {
                "default": {},
                "description": "A map of IAM policy [statements](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document#statement) for custom permission usage"
              },
              "repository_read_access_arns": {
                "default": [],
                "description": "The ARNs of the IAM users/roles that have read access to the repository"
              },
              "repository_read_write_access_arns": {
                "default": [],
                "description": "The ARNs of the IAM users/roles that have read/write access to the repository"
              },
              "repository_type": {
                "default": "private",
                "description": "The type of repository to create. Either `public` or `private`"
              },
              "tags": {
                "default": {},
                "description": "A map of tags to add to all resources"
              }
            }
          }
        },
        "lambda_function_with_docker_build_from_ecr": {
          "source": "terraform-aws-modules/lambda/aws",
          "expressions": {
            "architectures": {
              "constant_value": [
                "x86_64"
              ]
            },
            "create_package": {
              "constant_value": false
            },
            "description": {
              "constant_value": "PGE Test"
            },
            "environment_variables": {
              "references": [
                "aws_s3_bucket.pge_data_bucket.bucket",
                "aws_s3_bucket.pge_data_bucket"
              ]
            },
            "function_name": {
              "constant_value": "pge-lambda-with-docker-build-from-ecr"
            },
            "image_uri": {
              "references": [
                "module.docker_build_from_ecr.image_uri",
                "module.docker_build_from_ecr"
              ]
            },
            "package_type": {
              "constant_value": "Image"
            }
          },
          "module": {
            "outputs": {
              "lambda_cloudwatch_log_group_arn": {
                "expression": {
                  "references": [
                    "local.log_group_arn"
                  ]
                },
                "description": "The ARN of the Cloudwatch Log Group"
              },
              "lambda_cloudwatch_log_group_name": {
                "expression": {
                  "references": [
                    "local.log_group_name"
                  ]
                },
                "description": "The name of the Cloudwatch Log Group"
              },
              "lambda_event_source_mapping_arn": {
                "expression": {
                  "references": [
                    "aws_lambda_event_source_mapping.this"
                  ]
                },
                "description": "The event source mapping ARN"
              },
              "lambda_event_source_mapping_function_arn": {
                "expression": {
                  "references": [
                    "aws_lambda_event_source_mapping.this"
                  ]
                },
                "description": "The the ARN of the Lambda function the event source mapping is sending events to"
              },
              "lambda_event_source_mapping_state": {
                "expression": {
                  "references": [
                    "aws_lambda_event_source_mapping.this"
                  ]
                },
                "description": "The state of the event source mapping"
              },
              "lambda_event_source_mapping_state_transition_reason": {
                "expression": {
                  "references": [
                    "aws_lambda_event_source_mapping.this"
                  ]
                },
                "description": "The reason the event source mapping is in its current state"
              },
              "lambda_event_source_mapping_uuid": {
                "expression": {
                  "references": [
                    "aws_lambda_event_source_mapping.this"
                  ]
                },
                "description": "The UUID of the created event source mapping"
              },
              "lambda_function_arn": {
                "expression": {
                  "references": [
                    "aws_lambda_function.this[0].arn",
                    "aws_lambda_function.this[0]",
                    "aws_lambda_function.this"
                  ]
                },
                "description": "The ARN of the Lambda Function"
              },
              "lambda_function_arn_static": {
                "expression": {
                  "references": [
                    "local.create",
                    "var.create_function",
                    "var.create_layer",
                    "data.aws_region.current.name",
                    "data.aws_region.current",
                    "data.aws_caller_identity.current.account_id",
                    "data.aws_caller_identity.current",
                    "var.function_name"
                  ]
                },
                "description": "The static ARN of the Lambda Function. Use this to avoid cycle errors between resources (e.g., Step Functions)"
              },
              "lambda_function_invoke_arn": {
                "expression": {
                  "references": [
                    "aws_lambda_function.this[0].invoke_arn",
                    "aws_lambda_function.this[0]",
                    "aws_lambda_function.this"
                  ]
                },
                "description": "The Invoke ARN of the Lambda Function"
              },
              "lambda_function_kms_key_arn": {
                "expression": {
                  "references": [
                    "aws_lambda_function.this[0].kms_key_arn",
                    "aws_lambda_function.this[0]",
                    "aws_lambda_function.this"
                  ]
                },
                "description": "The ARN for the KMS encryption key of Lambda Function"
              },
              "lambda_function_last_modified": {
                "expression": {
                  "references": [
                    "aws_lambda_function.this[0].last_modified",
                    "aws_lambda_function.this[0]",
                    "aws_lambda_function.this"
                  ]
                },
                "description": "The date Lambda Function resource was last modified"
              },
              "lambda_function_name": {
                "expression": {
                  "references": [
                    "aws_lambda_function.this[0].function_name",
                    "aws_lambda_function.this[0]",
                    "aws_lambda_function.this"
                  ]
                },
                "description": "The name of the Lambda Function"
              },
              "lambda_function_qualified_arn": {
                "expression": {
                  "references": [
                    "aws_lambda_function.this[0].qualified_arn",
                    "aws_lambda_function.this[0]",
                    "aws_lambda_function.this"
                  ]
                },
                "description": "The ARN identifying your Lambda Function Version"
              },
              "lambda_function_qualified_invoke_arn": {
                "expression": {
                  "references": [
                    "aws_lambda_function.this[0].qualified_invoke_arn",
                    "aws_lambda_function.this[0]",
                    "aws_lambda_function.this"
                  ]
                },
                "description": "The Invoke ARN identifying your Lambda Function Version"
              },
              "lambda_function_signing_job_arn": {
                "expression": {
                  "references": [
                    "aws_lambda_function.this[0].signing_job_arn",
                    "aws_lambda_function.this[0]",
                    "aws_lambda_function.this"
                  ]
                },
                "description": "ARN of the signing job"
              },
              "lambda_function_signing_profile_version_arn": {
                "expression": {
                  "references": [
                    "aws_lambda_function.this[0].signing_profile_version_arn",
                    "aws_lambda_function.this[0]",
                    "aws_lambda_function.this"
                  ]
                },
                "description": "ARN of the signing profile version"
              },
              "lambda_function_source_code_hash": {
                "expression": {
                  "references": [
                    "aws_lambda_function.this[0].source_code_hash",
                    "aws_lambda_function.this[0]",
                    "aws_lambda_function.this"
                  ]
                },
                "description": "Base64-encoded representation of raw SHA-256 sum of the zip file"
              },
              "lambda_function_source_code_size": {
                "expression": {
                  "references": [
                    "aws_lambda_function.this[0].source_code_size",
                    "aws_lambda_function.this[0]",
                    "aws_lambda_function.this"
                  ]
                },
                "description": "The size in bytes of the function .zip file"
              },
              "lambda_function_url": {
                "expression": {
                  "references": [
                    "aws_lambda_function_url.this[0].function_url",
                    "aws_lambda_function_url.this[0]",
                    "aws_lambda_function_url.this"
                  ]
                },
                "description": "The URL of the Lambda Function URL"
              },
              "lambda_function_url_id": {
                "expression": {
                  "references": [
                    "aws_lambda_function_url.this[0].url_id",
                    "aws_lambda_function_url.this[0]",
                    "aws_lambda_function_url.this"
                  ]
                },
                "description": "The Lambda Function URL generated id"
              },
              "lambda_function_version": {
                "expression": {
                  "references": [
                    "aws_lambda_function.this[0].version",
                    "aws_lambda_function.this[0]",
                    "aws_lambda_function.this"
                  ]
                },
                "description": "Latest published version of Lambda Function"
              },
              "lambda_layer_arn": {
                "expression": {
                  "references": [
                    "aws_lambda_layer_version.this[0].arn",
                    "aws_lambda_layer_version.this[0]",
                    "aws_lambda_layer_version.this"
                  ]
                },
                "description": "The ARN of the Lambda Layer with version"
              },
              "lambda_layer_created_date": {
                "expression": {
                  "references": [
                    "aws_lambda_layer_version.this[0].created_date",
                    "aws_lambda_layer_version.this[0]",
                    "aws_lambda_layer_version.this"
                  ]
                },
                "description": "The date Lambda Layer resource was created"
              },
              "lambda_layer_layer_arn": {
                "expression": {
                  "references": [
                    "aws_lambda_layer_version.this[0].layer_arn",
                    "aws_lambda_layer_version.this[0]",
                    "aws_lambda_layer_version.this"
                  ]
                },
                "description": "The ARN of the Lambda Layer without version"
              },
              "lambda_layer_source_code_size": {
                "expression": {
                  "references": [
                    "aws_lambda_layer_version.this[0].source_code_size",
                    "aws_lambda_layer_version.this[0]",
                    "aws_lambda_layer_version.this"
                  ]
                },
                "description": "The size in bytes of the Lambda Layer .zip file"
              },
              "lambda_layer_version": {
                "expression": {
                  "references": [
                    "aws_lambda_layer_version.this[0].version",
                    "aws_lambda_layer_version.this[0]",
                    "aws_lambda_layer_version.this"
                  ]
                },
                "description": "The Lambda Layer version"
              },
              "lambda_role_arn": {
                "expression": {
                  "references": [
                    "aws_iam_role.lambda[0].arn",
                    "aws_iam_role.lambda[0]",
                    "aws_iam_role.lambda"
                  ]
                },
                "description": "The ARN of the IAM role created for the Lambda Function"
              },
              "lambda_role_name": {
                "expression": {
                  "references": [
                    "aws_iam_role.lambda[0].name",
                    "aws_iam_role.lambda[0]",
                    "aws_iam_role.lambda"
                  ]
                },
                "description": "The name of the IAM role created for the Lambda Function"
              },
              "lambda_role_unique_id": {
                "expression": {
                  "references": [
                    "aws_iam_role.lambda[0].unique_id",
                    "aws_iam_role.lambda[0]",
                    "aws_iam_role.lambda"
                  ]
                },
                "description": "The unique id of the IAM role created for the Lambda Function"
              },
              "local_filename": {
                "expression": {
                  "references": [
                    "local.filename"
                  ]
                },
                "depends_on": [
                  "null_resource.archive"
                ],
                "description": "The filename of zip archive deployed (if deployment was from local)"
              },
              "s3_object": {
                "expression": {
                  "references": [
                    "local.s3_bucket",
                    "local.s3_key",
                    "local.s3_object_version"
                  ]
                },
                "description": "The map with S3 object data of zip archive deployed (if deployment was from S3)"
              }
            },
            "resources": [
              {
                "address": "aws_cloudwatch_log_group.lambda",
                "mode": "managed",
                "type": "aws_cloudwatch_log_group",
                "name": "lambda",
                "provider_config_key": "aws",
                "expressions": {
                  "kms_key_id": {
                    "references": [
                      "var.cloudwatch_logs_kms_key_id"
                    ]
                  },
                  "log_group_class": {
                    "references": [
                      "var.cloudwatch_logs_log_group_class"
                    ]
                  },
                  "name": {
                    "references": [
                      "var.logging_log_group",
                      "var.lambda_at_edge",
                      "var.function_name"
                    ]
                  },
                  "retention_in_days": {
                    "references": [
                      "var.cloudwatch_logs_retention_in_days"
                    ]
                  },
                  "skip_destroy": {
                    "references": [
                      "var.cloudwatch_logs_skip_destroy"
                    ]
                  },
                  "tags": {
                    "references": [
                      "var.tags",
                      "var.cloudwatch_logs_tags"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.create",
                    "var.create_function",
                    "var.create_layer",
                    "var.use_existing_cloudwatch_log_group"
                  ]
                }
              },
              {
                "address": "aws_iam_role.lambda",
                "mode": "managed",
                "type": "aws_iam_role",
                "name": "lambda",
                "provider_config_key": "aws",
                "expressions": {
                  "assume_role_policy": {
                    "references": [
                      "data.aws_iam_policy_document.assume_role[0].json",
                      "data.aws_iam_policy_document.assume_role[0]",
                      "data.aws_iam_policy_document.assume_role"
                    ]
                  },
                  "description": {
                    "references": [
                      "var.role_description"
                    ]
                  },
                  "force_detach_policies": {
                    "references": [
                      "var.role_force_detach_policies"
                    ]
                  },
                  "max_session_duration": {
                    "references": [
                      "var.role_maximum_session_duration"
                    ]
                  },
                  "name": {
                    "references": [
                      "local.role_name"
                    ]
                  },
                  "path": {
                    "references": [
                      "var.role_path"
                    ]
                  },
                  "permissions_boundary": {
                    "references": [
                      "var.role_permissions_boundary"
                    ]
                  },
                  "tags": {
                    "references": [
                      "var.tags",
                      "var.role_tags"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.create_role"
                  ]
                }
              },
              {
                "address": "aws_iam_role_policy.additional_inline",
                "mode": "managed",
                "type": "aws_iam_role_policy",
                "name": "additional_inline",
                "provider_config_key": "aws",
                "expressions": {
                  "name": {
                    "references": [
                      "local.policy_name"
                    ]
                  },
                  "policy": {
                    "references": [
                      "data.aws_iam_policy_document.additional_inline[0].json",
                      "data.aws_iam_policy_document.additional_inline[0]",
                      "data.aws_iam_policy_document.additional_inline"
                    ]
                  },
                  "role": {
                    "references": [
                      "aws_iam_role.lambda[0].name",
                      "aws_iam_role.lambda[0]",
                      "aws_iam_role.lambda"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.create_role",
                    "var.attach_policy_statements"
                  ]
                }
              },
              {
                "address": "aws_iam_role_policy.additional_json",
                "mode": "managed",
                "type": "aws_iam_role_policy",
                "name": "additional_json",
                "provider_config_key": "aws",
                "expressions": {
                  "name": {
                    "references": [
                      "local.policy_name"
                    ]
                  },
                  "policy": {
                    "references": [
                      "var.policy_json"
                    ]
                  },
                  "role": {
                    "references": [
                      "aws_iam_role.lambda[0].name",
                      "aws_iam_role.lambda[0]",
                      "aws_iam_role.lambda"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.create_role",
                    "var.attach_policy_json"
                  ]
                }
              },
              {
                "address": "aws_iam_role_policy.additional_jsons",
                "mode": "managed",
                "type": "aws_iam_role_policy",
                "name": "additional_jsons",
                "provider_config_key": "aws",
                "expressions": {
                  "name": {
                    "references": [
                      "local.policy_name",
                      "count.index"
                    ]
                  },
                  "policy": {
                    "references": [
                      "var.policy_jsons",
                      "count.index"
                    ]
                  },
                  "role": {
                    "references": [
                      "aws_iam_role.lambda[0].name",
                      "aws_iam_role.lambda[0]",
                      "aws_iam_role.lambda"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.create_role",
                    "var.attach_policy_jsons",
                    "var.number_of_policy_jsons"
                  ]
                }
              },
              {
                "address": "aws_iam_role_policy.async",
                "mode": "managed",
                "type": "aws_iam_role_policy",
                "name": "async",
                "provider_config_key": "aws",
                "expressions": {
                  "name": {
                    "references": [
                      "local.policy_name"
                    ]
                  },
                  "policy": {
                    "references": [
                      "data.aws_iam_policy_document.async[0].json",
                      "data.aws_iam_policy_document.async[0]",
                      "data.aws_iam_policy_document.async"
                    ]
                  },
                  "role": {
                    "references": [
                      "aws_iam_role.lambda[0].name",
                      "aws_iam_role.lambda[0]",
                      "aws_iam_role.lambda"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.create_role",
                    "var.attach_async_event_policy"
                  ]
                }
              },
              {
                "address": "aws_iam_role_policy.dead_letter",
                "mode": "managed",
                "type": "aws_iam_role_policy",
                "name": "dead_letter",
                "provider_config_key": "aws",
                "expressions": {
                  "name": {
                    "references": [
                      "local.policy_name"
                    ]
                  },
                  "policy": {
                    "references": [
                      "data.aws_iam_policy_document.dead_letter[0].json",
                      "data.aws_iam_policy_document.dead_letter[0]",
                      "data.aws_iam_policy_document.dead_letter"
                    ]
                  },
                  "role": {
                    "references": [
                      "aws_iam_role.lambda[0].name",
                      "aws_iam_role.lambda[0]",
                      "aws_iam_role.lambda"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.create_role",
                    "var.attach_dead_letter_policy"
                  ]
                }
              },
              {
                "address": "aws_iam_role_policy.logs",
                "mode": "managed",
                "type": "aws_iam_role_policy",
                "name": "logs",
                "provider_config_key": "aws",
                "expressions": {
                  "name": {
                    "references": [
                      "local.policy_name"
                    ]
                  },
                  "policy": {
                    "references": [
                      "data.aws_iam_policy_document.logs[0].json",
                      "data.aws_iam_policy_document.logs[0]",
                      "data.aws_iam_policy_document.logs"
                    ]
                  },
                  "role": {
                    "references": [
                      "aws_iam_role.lambda[0].name",
                      "aws_iam_role.lambda[0]",
                      "aws_iam_role.lambda"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.create_role",
                    "var.attach_cloudwatch_logs_policy"
                  ]
                }
              },
              {
                "address": "aws_iam_role_policy.tracing",
                "mode": "managed",
                "type": "aws_iam_role_policy",
                "name": "tracing",
                "provider_config_key": "aws",
                "expressions": {
                  "name": {
                    "references": [
                      "local.policy_name"
                    ]
                  },
                  "policy": {
                    "references": [
                      "data.aws_iam_policy.tracing[0].policy",
                      "data.aws_iam_policy.tracing[0]",
                      "data.aws_iam_policy.tracing"
                    ]
                  },
                  "role": {
                    "references": [
                      "aws_iam_role.lambda[0].name",
                      "aws_iam_role.lambda[0]",
                      "aws_iam_role.lambda"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.create_role",
                    "var.attach_tracing_policy"
                  ]
                }
              },
              {
                "address": "aws_iam_role_policy.vpc",
                "mode": "managed",
                "type": "aws_iam_role_policy",
                "name": "vpc",
                "provider_config_key": "aws",
                "expressions": {
                  "name": {
                    "references": [
                      "local.policy_name"
                    ]
                  },
                  "policy": {
                    "references": [
                      "data.aws_iam_policy.vpc[0].policy",
                      "data.aws_iam_policy.vpc[0]",
                      "data.aws_iam_policy.vpc"
                    ]
                  },
                  "role": {
                    "references": [
                      "aws_iam_role.lambda[0].name",
                      "aws_iam_role.lambda[0]",
                      "aws_iam_role.lambda"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.create_role",
                    "var.attach_network_policy"
                  ]
                }
              },
              {
                "address": "aws_iam_role_policy_attachment.additional_many",
                "mode": "managed",
                "type": "aws_iam_role_policy_attachment",
                "name": "additional_many",
                "provider_config_key": "aws",
                "expressions": {
                  "policy_arn": {
                    "references": [
                      "var.policies",
                      "count.index"
                    ]
                  },
                  "role": {
                    "references": [
                      "aws_iam_role.lambda[0].name",
                      "aws_iam_role.lambda[0]",
                      "aws_iam_role.lambda"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.create_role",
                    "var.attach_policies",
                    "var.number_of_policies"
                  ]
                }
              },
              {
                "address": "aws_iam_role_policy_attachment.additional_one",
                "mode": "managed",
                "type": "aws_iam_role_policy_attachment",
                "name": "additional_one",
                "provider_config_key": "aws",
                "expressions": {
                  "policy_arn": {
                    "references": [
                      "var.policy"
                    ]
                  },
                  "role": {
                    "references": [
                      "aws_iam_role.lambda[0].name",
                      "aws_iam_role.lambda[0]",
                      "aws_iam_role.lambda"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.create_role",
                    "var.attach_policy"
                  ]
                }
              },
              {
                "address": "aws_lambda_event_source_mapping.this",
                "mode": "managed",
                "type": "aws_lambda_event_source_mapping",
                "name": "this",
                "provider_config_key": "aws",
                "expressions": {
                  "batch_size": {
                    "references": [
                      "each.value.batch_size",
                      "each.value"
                    ]
                  },
                  "bisect_batch_on_function_error": {
                    "references": [
                      "each.value.bisect_batch_on_function_error",
                      "each.value"
                    ]
                  },
                  "enabled": {
                    "references": [
                      "each.value.enabled",
                      "each.value"
                    ]
                  },
                  "event_source_arn": {
                    "references": [
                      "each.value.event_source_arn",
                      "each.value"
                    ]
                  },
                  "function_name": {
                    "references": [
                      "aws_lambda_function.this[0].arn",
                      "aws_lambda_function.this[0]",
                      "aws_lambda_function.this"
                    ]
                  },
                  "function_response_types": {
                    "references": [
                      "each.value.function_response_types",
                      "each.value"
                    ]
                  },
                  "maximum_batching_window_in_seconds": {
                    "references": [
                      "each.value.maximum_batching_window_in_seconds",
                      "each.value"
                    ]
                  },
                  "maximum_record_age_in_seconds": {
                    "references": [
                      "each.value.maximum_record_age_in_seconds",
                      "each.value"
                    ]
                  },
                  "maximum_retry_attempts": {
                    "references": [
                      "each.value.maximum_retry_attempts",
                      "each.value"
                    ]
                  },
                  "parallelization_factor": {
                    "references": [
                      "each.value.parallelization_factor",
                      "each.value"
                    ]
                  },
                  "queues": {
                    "references": [
                      "each.value.queues",
                      "each.value"
                    ]
                  },
                  "starting_position": {
                    "references": [
                      "each.value.starting_position",
                      "each.value"
                    ]
                  },
                  "starting_position_timestamp": {
                    "references": [
                      "each.value.starting_position_timestamp",
                      "each.value"
                    ]
                  },
                  "tags": {
                    "references": [
                      "var.tags",
                      "each.value.tags",
                      "each.value"
                    ]
                  },
                  "topics": {
                    "references": [
                      "each.value.topics",
                      "each.value"
                    ]
                  },
                  "tumbling_window_in_seconds": {
                    "references": [
                      "each.value.tumbling_window_in_seconds",
                      "each.value"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "var.event_source_mapping",
                    "local.create",
                    "var.create_function",
                    "var.create_layer",
                    "var.create_unqualified_alias_allowed_triggers"
                  ]
                }
              },
              {
                "address": "aws_lambda_function.this",
                "mode": "managed",
                "type": "aws_lambda_function",
                "name": "this",
                "provider_config_key": "aws",
                "expressions": {
                  "architectures": {
                    "references": [
                      "var.architectures"
                    ]
                  },
                  "code_signing_config_arn": {
                    "references": [
                      "var.code_signing_config_arn"
                    ]
                  },
                  "description": {
                    "references": [
                      "var.description"
                    ]
                  },
                  "filename": {
                    "references": [
                      "local.filename"
                    ]
                  },
                  "function_name": {
                    "references": [
                      "var.function_name"
                    ]
                  },
                  "handler": {
                    "references": [
                      "var.package_type",
                      "var.handler"
                    ]
                  },
                  "image_uri": {
                    "references": [
                      "var.image_uri"
                    ]
                  },
                  "kms_key_arn": {
                    "references": [
                      "var.kms_key_arn"
                    ]
                  },
                  "layers": {
                    "references": [
                      "var.layers"
                    ]
                  },
                  "memory_size": {
                    "references": [
                      "var.memory_size"
                    ]
                  },
                  "package_type": {
                    "references": [
                      "var.package_type"
                    ]
                  },
                  "publish": {
                    "references": [
                      "var.lambda_at_edge",
                      "var.snap_start",
                      "var.publish"
                    ]
                  },
                  "replace_security_groups_on_destroy": {
                    "references": [
                      "var.replace_security_groups_on_destroy"
                    ]
                  },
                  "replacement_security_group_ids": {
                    "references": [
                      "var.replacement_security_group_ids"
                    ]
                  },
                  "reserved_concurrent_executions": {
                    "references": [
                      "var.reserved_concurrent_executions"
                    ]
                  },
                  "role": {
                    "references": [
                      "var.create_role",
                      "aws_iam_role.lambda[0].arn",
                      "aws_iam_role.lambda[0]",
                      "aws_iam_role.lambda",
                      "var.lambda_role"
                    ]
                  },
                  "runtime": {
                    "references": [
                      "var.package_type",
                      "var.runtime"
                    ]
                  },
                  "s3_bucket": {
                    "references": [
                      "local.s3_bucket"
                    ]
                  },
                  "s3_key": {
                    "references": [
                      "local.s3_key"
                    ]
                  },
                  "s3_object_version": {
                    "references": [
                      "local.s3_object_version"
                    ]
                  },
                  "skip_destroy": {
                    "references": [
                      "var.skip_destroy"
                    ]
                  },
                  "source_code_hash": {
                    "references": [
                      "var.ignore_source_code_hash",
                      "local.filename",
                      "local.filename",
                      "local.was_missing",
                      "local.filename"
                    ]
                  },
                  "tags": {
                    "references": [
                      "var.include_default_tag",
                      "var.tags",
                      "var.function_tags"
                    ]
                  },
                  "timeout": {
                    "references": [
                      "var.lambda_at_edge",
                      "var.timeout",
                      "var.timeout"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.create",
                    "var.create_function",
                    "var.create_layer"
                  ]
                },
                "depends_on": [
                  "null_resource.archive",
                  "aws_s3_object.lambda_package",
                  "aws_cloudwatch_log_group.lambda",
                  "aws_iam_role_policy.additional_inline",
                  "aws_iam_role_policy.additional_json",
                  "aws_iam_role_policy.additional_jsons",
                  "aws_iam_role_policy.async",
                  "aws_iam_role_policy.dead_letter",
                  "aws_iam_role_policy.logs",
                  "aws_iam_role_policy.tracing",
                  "aws_iam_role_policy.vpc",
                  "aws_iam_role_policy_attachment.additional_many",
                  "aws_iam_role_policy_attachment.additional_one"
                ]
              },
              {
                "address": "aws_lambda_function_event_invoke_config.this",
                "mode": "managed",
                "type": "aws_lambda_function_event_invoke_config",
                "name": "this",
                "provider_config_key": "aws",
                "expressions": {
                  "function_name": {
                    "references": [
                      "aws_lambda_function.this[0].function_name",
                      "aws_lambda_function.this[0]",
                      "aws_lambda_function.this"
                    ]
                  },
                  "maximum_event_age_in_seconds": {
                    "references": [
                      "var.maximum_event_age_in_seconds"
                    ]
                  },
                  "maximum_retry_attempts": {
                    "references": [
                      "var.maximum_retry_attempts"
                    ]
                  },
                  "qualifier": {
                    "references": [
                      "each.key",
                      "aws_lambda_function.this[0].version",
                      "aws_lambda_function.this[0]",
                      "aws_lambda_function.this"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "local.qualifiers",
                    "local.create",
                    "var.create_function",
                    "var.create_layer",
                    "var.create_async_event_config"
                  ]
                }
              },
              {
                "address": "aws_lambda_function_recursion_config.this",
                "mode": "managed",
                "type": "aws_lambda_function_recursion_config",
                "name": "this",
                "provider_config_key": "aws",
                "expressions": {
                  "function_name": {
                    "references": [
                      "aws_lambda_function.this[0].function_name",
                      "aws_lambda_function.this[0]",
                      "aws_lambda_function.this"
                    ]
                  },
                  "recursive_loop": {
                    "references": [
                      "var.recursive_loop"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.create",
                    "var.create_function",
                    "var.create_layer",
                    "var.recursive_loop"
                  ]
                }
              },
              {
                "address": "aws_lambda_function_url.this",
                "mode": "managed",
                "type": "aws_lambda_function_url",
                "name": "this",
                "provider_config_key": "aws",
                "expressions": {
                  "authorization_type": {
                    "references": [
                      "var.authorization_type"
                    ]
                  },
                  "function_name": {
                    "references": [
                      "aws_lambda_function.this[0].function_name",
                      "aws_lambda_function.this[0]",
                      "aws_lambda_function.this"
                    ]
                  },
                  "invoke_mode": {
                    "references": [
                      "var.invoke_mode"
                    ]
                  },
                  "qualifier": {
                    "references": [
                      "var.create_unqualified_alias_lambda_function_url",
                      "aws_lambda_function.this[0].version",
                      "aws_lambda_function.this[0]",
                      "aws_lambda_function.this"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.create",
                    "var.create_function",
                    "var.create_layer",
                    "var.create_lambda_function_url"
                  ]
                }
              },
              {
                "address": "aws_lambda_layer_version.this",
                "mode": "managed",
                "type": "aws_lambda_layer_version",
                "name": "this",
                "provider_config_key": "aws",
                "expressions": {
                  "compatible_architectures": {
                    "references": [
                      "var.compatible_architectures"
                    ]
                  },
                  "compatible_runtimes": {
                    "references": [
                      "var.compatible_runtimes",
                      "var.compatible_runtimes",
                      "var.runtime",
                      "var.runtime"
                    ]
                  },
                  "description": {
                    "references": [
                      "var.description"
                    ]
                  },
                  "filename": {
                    "references": [
                      "local.filename"
                    ]
                  },
                  "layer_name": {
                    "references": [
                      "var.layer_name"
                    ]
                  },
                  "license_info": {
                    "references": [
                      "var.license_info"
                    ]
                  },
                  "s3_bucket": {
                    "references": [
                      "local.s3_bucket"
                    ]
                  },
                  "s3_key": {
                    "references": [
                      "local.s3_key"
                    ]
                  },
                  "s3_object_version": {
                    "references": [
                      "local.s3_object_version"
                    ]
                  },
                  "skip_destroy": {
                    "references": [
                      "var.layer_skip_destroy"
                    ]
                  },
                  "source_code_hash": {
                    "references": [
                      "var.ignore_source_code_hash",
                      "local.filename",
                      "local.filename",
                      "local.was_missing",
                      "local.filename"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.create",
                    "var.create_layer"
                  ]
                },
                "depends_on": [
                  "null_resource.archive",
                  "aws_s3_object.lambda_package"
                ]
              },
              {
                "address": "aws_lambda_permission.current_version_triggers",
                "mode": "managed",
                "type": "aws_lambda_permission",
                "name": "current_version_triggers",
                "provider_config_key": "aws",
                "expressions": {
                  "action": {
                    "references": [
                      "each.value.action",
                      "each.value"
                    ]
                  },
                  "event_source_token": {
                    "references": [
                      "each.value.event_source_token",
                      "each.value"
                    ]
                  },
                  "function_name": {
                    "references": [
                      "aws_lambda_function.this[0].function_name",
                      "aws_lambda_function.this[0]",
                      "aws_lambda_function.this"
                    ]
                  },
                  "function_url_auth_type": {
                    "references": [
                      "each.value.function_url_auth_type",
                      "each.value"
                    ]
                  },
                  "principal": {
                    "references": [
                      "each.value.principal",
                      "each.value",
                      "each.value.service",
                      "each.value"
                    ]
                  },
                  "principal_org_id": {
                    "references": [
                      "each.value.principal_org_id",
                      "each.value"
                    ]
                  },
                  "qualifier": {
                    "references": [
                      "aws_lambda_function.this[0].version",
                      "aws_lambda_function.this[0]",
                      "aws_lambda_function.this"
                    ]
                  },
                  "source_account": {
                    "references": [
                      "each.value.source_account",
                      "each.value"
                    ]
                  },
                  "source_arn": {
                    "references": [
                      "each.value.source_arn",
                      "each.value"
                    ]
                  },
                  "statement_id_prefix": {
                    "references": [
                      "each.value.statement_id",
                      "each.value",
                      "each.key"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "var.allowed_triggers",
                    "local.create",
                    "var.create_function",
                    "var.create_layer",
                    "var.create_current_version_allowed_triggers"
                  ]
                }
              },
              {
                "address": "aws_lambda_permission.unqualified_alias_triggers",
                "mode": "managed",
                "type": "aws_lambda_permission",
                "name": "unqualified_alias_triggers",
                "provider_config_key": "aws",
                "expressions": {
                  "action": {
                    "references": [
                      "each.value.action",
                      "each.value"
                    ]
                  },
                  "event_source_token": {
                    "references": [
                      "each.value.event_source_token",
                      "each.value"
                    ]
                  },
                  "function_name": {
                    "references": [
                      "aws_lambda_function.this[0].function_name",
                      "aws_lambda_function.this[0]",
                      "aws_lambda_function.this"
                    ]
                  },
                  "function_url_auth_type": {
                    "references": [
                      "each.value.function_url_auth_type",
                      "each.value"
                    ]
                  },
                  "principal": {
                    "references": [
                      "each.value.principal",
                      "each.value",
                      "each.value.service",
                      "each.value"
                    ]
                  },
                  "principal_org_id": {
                    "references": [
                      "each.value.principal_org_id",
                      "each.value"
                    ]
                  },
                  "source_account": {
                    "references": [
                      "each.value.source_account",
                      "each.value"
                    ]
                  },
                  "source_arn": {
                    "references": [
                      "each.value.source_arn",
                      "each.value"
                    ]
                  },
                  "statement_id_prefix": {
                    "references": [
                      "each.value.statement_id",
                      "each.value",
                      "each.key"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "var.allowed_triggers",
                    "local.create",
                    "var.create_function",
                    "var.create_layer",
                    "var.create_unqualified_alias_allowed_triggers"
                  ]
                }
              },
              {
                "address": "aws_lambda_provisioned_concurrency_config.current_version",
                "mode": "managed",
                "type": "aws_lambda_provisioned_concurrency_config",
                "name": "current_version",
                "provider_config_key": "aws",
                "expressions": {
                  "function_name": {
                    "references": [
                      "aws_lambda_function.this[0].function_name",
                      "aws_lambda_function.this[0]",
                      "aws_lambda_function.this"
                    ]
                  },
                  "provisioned_concurrent_executions": {
                    "references": [
                      "var.provisioned_concurrent_executions"
                    ]
                  },
                  "qualifier": {
                    "references": [
                      "aws_lambda_function.this[0].version",
                      "aws_lambda_function.this[0]",
                      "aws_lambda_function.this"
                    ]
                  }
                },
                "schema_version": 1,
                "count_expression": {
                  "references": [
                    "local.create",
                    "var.create_function",
                    "var.create_layer",
                    "var.provisioned_concurrent_executions"
                  ]
                }
              },
              {
                "address": "aws_s3_object.lambda_package",
                "mode": "managed",
                "type": "aws_s3_object",
                "name": "lambda_package",
                "provider_config_key": "aws",
                "expressions": {
                  "acl": {
                    "references": [
                      "var.s3_acl"
                    ]
                  },
                  "bucket": {
                    "references": [
                      "var.s3_bucket"
                    ]
                  },
                  "key": {
                    "references": [
                      "local.s3_key"
                    ]
                  },
                  "kms_key_id": {
                    "references": [
                      "var.s3_kms_key_id"
                    ]
                  },
                  "server_side_encryption": {
                    "references": [
                      "var.s3_server_side_encryption"
                    ]
                  },
                  "source": {
                    "references": [
                      "data.external.archive_prepare[0].result.filename",
                      "data.external.archive_prepare[0].result",
                      "data.external.archive_prepare[0]",
                      "data.external.archive_prepare"
                    ]
                  },
                  "storage_class": {
                    "references": [
                      "var.s3_object_storage_class"
                    ]
                  },
                  "tags": {
                    "references": [
                      "var.s3_object_tags_only",
                      "var.s3_object_tags",
                      "var.tags",
                      "var.s3_object_tags"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.create",
                    "var.store_on_s3",
                    "var.create_package"
                  ]
                },
                "depends_on": [
                  "null_resource.archive"
                ]
              },
              {
                "address": "local_file.archive_plan",
                "mode": "managed",
                "type": "local_file",
                "name": "archive_plan",
                "provider_config_key": "module.lambda_function_with_docker_build_from_ecr:local",
                "expressions": {
                  "content": {
                    "references": [
                      "data.external.archive_prepare[0].result.build_plan",
                      "data.external.archive_prepare[0].result",
                      "data.external.archive_prepare[0]",
                      "data.external.archive_prepare"
                    ]
                  },
                  "directory_permission": {
                    "constant_value": "0755"
                  },
                  "file_permission": {
                    "constant_value": "0644"
                  },
                  "filename": {
                    "references": [
                      "data.external.archive_prepare[0].result.build_plan_filename",
                      "data.external.archive_prepare[0].result",
                      "data.external.archive_prepare[0]",
                      "data.external.archive_prepare"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.create",
                    "var.create_package"
                  ]
                }
              },
              {
                "address": "null_resource.archive",
                "mode": "managed",
                "type": "null_resource",
                "name": "archive",
                "provider_config_key": "module.lambda_function_with_docker_build_from_ecr:null",
                "provisioners": [
                  {
                    "type": "local-exec",
                    "expressions": {
                      "command": {
                        "references": [
                          "data.external.archive_prepare[0].result.build_plan_filename",
                          "data.external.archive_prepare[0].result",
                          "data.external.archive_prepare[0]",
                          "data.external.archive_prepare"
                        ]
                      },
                      "interpreter": {
                        "references": [
                          "local.python",
                          "path.module",
                          "data.external.archive_prepare[0].result.timestamp",
                          "data.external.archive_prepare[0].result",
                          "data.external.archive_prepare[0]",
                          "data.external.archive_prepare"
                        ]
                      }
                    }
                  }
                ],
                "expressions": {
                  "triggers": {
                    "references": [
                      "data.external.archive_prepare[0].result.filename",
                      "data.external.archive_prepare[0].result",
                      "data.external.archive_prepare[0]",
                      "data.external.archive_prepare",
                      "var.trigger_on_package_timestamp",
                      "data.external.archive_prepare[0].result.timestamp",
                      "data.external.archive_prepare[0].result",
                      "data.external.archive_prepare[0]",
                      "data.external.archive_prepare"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.create",
                    "var.create_package"
                  ]
                },
                "depends_on": [
                  "local_file.archive_plan"
                ]
              },
              {
                "address": "null_resource.sam_metadata_aws_lambda_function",
                "mode": "managed",
                "type": "null_resource",
                "name": "sam_metadata_aws_lambda_function",
                "provider_config_key": "module.lambda_function_with_docker_build_from_ecr:null",
                "expressions": {
                  "triggers": {
                    "references": [
                      "var.source_path",
                      "data.external.archive_prepare[0].result.filename",
                      "data.external.archive_prepare[0].result",
                      "data.external.archive_prepare[0]",
                      "data.external.archive_prepare"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.create",
                    "var.create_sam_metadata",
                    "var.create_package",
                    "var.create_function",
                    "var.create_layer"
                  ]
                },
                "depends_on": [
                  "data.external.archive_prepare",
                  "null_resource.archive"
                ]
              },
              {
                "address": "null_resource.sam_metadata_aws_lambda_layer_version",
                "mode": "managed",
                "type": "null_resource",
                "name": "sam_metadata_aws_lambda_layer_version",
                "provider_config_key": "module.lambda_function_with_docker_build_from_ecr:null",
                "expressions": {
                  "triggers": {
                    "references": [
                      "var.source_path",
                      "data.external.archive_prepare[0].result.filename",
                      "data.external.archive_prepare[0].result",
                      "data.external.archive_prepare[0]",
                      "data.external.archive_prepare"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.create",
                    "var.create_sam_metadata",
                    "var.create_package",
                    "var.create_layer"
                  ]
                },
                "depends_on": [
                  "data.external.archive_prepare",
                  "null_resource.archive"
                ]
              },
              {
                "address": "data.aws_arn.log_group_arn",
                "mode": "data",
                "type": "aws_arn",
                "name": "log_group_arn",
                "provider_config_key": "aws",
                "expressions": {
                  "arn": {
                    "references": [
                      "local.log_group_arn_regional"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.create_role",
                    "var.lambda_at_edge"
                  ]
                }
              },
              {
                "address": "data.aws_caller_identity.current",
                "mode": "data",
                "type": "aws_caller_identity",
                "name": "current",
                "provider_config_key": "aws",
                "schema_version": 0
              },
              {
                "address": "data.aws_cloudwatch_log_group.lambda",
                "mode": "data",
                "type": "aws_cloudwatch_log_group",
                "name": "lambda",
                "provider_config_key": "aws",
                "expressions": {
                  "name": {
                    "references": [
                      "var.logging_log_group",
                      "var.lambda_at_edge",
                      "var.function_name"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.create",
                    "var.create_function",
                    "var.create_layer",
                    "var.use_existing_cloudwatch_log_group"
                  ]
                }
              },
              {
                "address": "data.aws_iam_policy.tracing",
                "mode": "data",
                "type": "aws_iam_policy",
                "name": "tracing",
                "provider_config_key": "aws",
                "expressions": {
                  "arn": {
                    "references": [
                      "data.aws_partition.current.partition",
                      "data.aws_partition.current"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.create_role",
                    "var.attach_tracing_policy"
                  ]
                }
              },
              {
                "address": "data.aws_iam_policy.vpc",
                "mode": "data",
                "type": "aws_iam_policy",
                "name": "vpc",
                "provider_config_key": "aws",
                "expressions": {
                  "arn": {
                    "references": [
                      "data.aws_partition.current.partition",
                      "data.aws_partition.current"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.create_role",
                    "var.attach_network_policy"
                  ]
                }
              },
              {
                "address": "data.aws_iam_policy_document.additional_inline",
                "mode": "data",
                "type": "aws_iam_policy_document",
                "name": "additional_inline",
                "provider_config_key": "aws",
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.create_role",
                    "var.attach_policy_statements"
                  ]
                }
              },
              {
                "address": "data.aws_iam_policy_document.assume_role",
                "mode": "data",
                "type": "aws_iam_policy_document",
                "name": "assume_role",
                "provider_config_key": "aws",
                "expressions": {
                  "statement": [
                    {
                      "actions": {
                        "constant_value": [
                          "sts:AssumeRole"
                        ]
                      },
                      "effect": {
                        "constant_value": "Allow"
                      },
                      "principals": [
                        {
                          "identifiers": {
                            "references": [
                              "local.trusted_entities_services"
                            ]
                          },
                          "type": {
                            "constant_value": "Service"
                          }
                        }
                      ]
                    }
                  ]
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.create_role"
                  ]
                }
              },
              {
                "address": "data.aws_iam_policy_document.async",
                "mode": "data",
                "type": "aws_iam_policy_document",
                "name": "async",
                "provider_config_key": "aws",
                "expressions": {
                  "statement": [
                    {
                      "actions": {
                        "constant_value": [
                          "sns:Publish",
                          "sqs:SendMessage",
                          "events:PutEvents",
                          "lambda:InvokeFunction"
                        ]
                      },
                      "effect": {
                        "constant_value": "Allow"
                      },
                      "resources": {
                        "references": [
                          "var.destination_on_failure",
                          "var.destination_on_success"
                        ]
                      }
                    }
                  ]
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.create_role",
                    "var.attach_async_event_policy"
                  ]
                }
              },
              {
                "address": "data.aws_iam_policy_document.dead_letter",
                "mode": "data",
                "type": "aws_iam_policy_document",
                "name": "dead_letter",
                "provider_config_key": "aws",
                "expressions": {
                  "statement": [
                    {
                      "actions": {
                        "constant_value": [
                          "sns:Publish",
                          "sqs:SendMessage"
                        ]
                      },
                      "effect": {
                        "constant_value": "Allow"
                      },
                      "resources": {
                        "references": [
                          "var.dead_letter_target_arn"
                        ]
                      }
                    }
                  ]
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.create_role",
                    "var.attach_dead_letter_policy"
                  ]
                }
              },
              {
                "address": "data.aws_iam_policy_document.logs",
                "mode": "data",
                "type": "aws_iam_policy_document",
                "name": "logs",
                "provider_config_key": "aws",
                "expressions": {
                  "statement": [
                    {
                      "actions": {
                        "references": [
                          "var.use_existing_cloudwatch_log_group",
                          "var.attach_create_log_group_permission"
                        ]
                      },
                      "effect": {
                        "constant_value": "Allow"
                      },
                      "resources": {
                        "references": [
                          "local.log_group_arn"
                        ]
                      }
                    }
                  ]
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.create_role",
                    "var.attach_cloudwatch_logs_policy"
                  ]
                }
              },
              {
                "address": "data.aws_partition.current",
                "mode": "data",
                "type": "aws_partition",
                "name": "current",
                "provider_config_key": "aws",
                "schema_version": 0
              },
              {
                "address": "data.aws_region.current",
                "mode": "data",
                "type": "aws_region",
                "name": "current",
                "provider_config_key": "aws",
                "schema_version": 0
              },
              {
                "address": "data.external.archive_prepare",
                "mode": "data",
                "type": "external",
                "name": "archive_prepare",
                "provider_config_key": "module.lambda_function_with_docker_build_from_ecr:external",
                "expressions": {
                  "program": {
                    "references": [
                      "local.python",
                      "path.module"
                    ]
                  },
                  "query": {
                    "references": [
                      "path.module",
                      "path.root",
                      "path.cwd",
                      "var.build_in_docker",
                      "var.docker_pip_cache",
                      "var.docker_build_root",
                      "var.docker_file",
                      "var.docker_image",
                      "var.docker_with_ssh_agent",
                      "var.docker_additional_options",
                      "var.docker_entrypoint",
                      "var.artifacts_dir",
                      "var.runtime",
                      "var.source_path",
                      "var.hash_extra",
                      "var.recreate_missing_package"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.create",
                    "var.create_package"
                  ]
                }
              }
            ],
            "variables": {
              "allowed_triggers": {
                "default": {},
                "description": "Map of allowed triggers to create Lambda permissions"
              },
              "architectures": {
                "default": null,
                "description": "Instruction set architecture for your Lambda function. Valid values are [\"x86_64\"] and [\"arm64\"]."
              },
              "artifacts_dir": {
                "default": "builds",
                "description": "Directory name where artifacts should be stored"
              },
              "assume_role_policy_statements": {
                "default": {},
                "description": "Map of dynamic policy statements for assuming Lambda Function role (trust relationship)"
              },
              "attach_async_event_policy": {
                "default": false,
                "description": "Controls whether async event policy should be added to IAM role for Lambda Function"
              },
              "attach_cloudwatch_logs_policy": {
                "default": true,
                "description": "Controls whether CloudWatch Logs policy should be added to IAM role for Lambda Function"
              },
              "attach_create_log_group_permission": {
                "default": true,
                "description": "Controls whether to add the create log group permission to the CloudWatch logs policy"
              },
              "attach_dead_letter_policy": {
                "default": false,
                "description": "Controls whether SNS/SQS dead letter notification policy should be added to IAM role for Lambda Function"
              },
              "attach_network_policy": {
                "default": false,
                "description": "Controls whether VPC/network policy should be added to IAM role for Lambda Function"
              },
              "attach_policies": {
                "default": false,
                "description": "Controls whether list of policies should be added to IAM role for Lambda Function"
              },
              "attach_policy": {
                "default": false,
                "description": "Controls whether policy should be added to IAM role for Lambda Function"
              },
              "attach_policy_json": {
                "default": false,
                "description": "Controls whether policy_json should be added to IAM role for Lambda Function"
              },
              "attach_policy_jsons": {
                "default": false,
                "description": "Controls whether policy_jsons should be added to IAM role for Lambda Function"
              },
              "attach_policy_statements": {
                "default": false,
                "description": "Controls whether policy_statements should be added to IAM role for Lambda Function"
              },
              "attach_tracing_policy": {
                "default": false,
                "description": "Controls whether X-Ray tracing policy should be added to IAM role for Lambda Function"
              },
              "authorization_type": {
                "default": "NONE",
                "description": "The type of authentication that the Lambda Function URL uses. Set to 'AWS_IAM' to restrict access to authenticated IAM users only. Set to 'NONE' to bypass IAM authentication and create a public endpoint."
              },
              "build_in_docker": {
                "default": false,
                "description": "Whether to build dependencies in Docker"
              },
              "cloudwatch_logs_kms_key_id": {
                "default": null,
                "description": "The ARN of the KMS Key to use when encrypting log data."
              },
              "cloudwatch_logs_log_group_class": {
                "default": null,
                "description": "Specified the log class of the log group. Possible values are: `STANDARD` or `INFREQUENT_ACCESS`"
              },
              "cloudwatch_logs_retention_in_days": {
                "default": null,
                "description": "Specifies the number of days you want to retain log events in the specified log group. Possible values are: 1, 3, 5, 7, 14, 30, 60, 90, 120, 150, 180, 365, 400, 545, 731, 1827, and 3653."
              },
              "cloudwatch_logs_skip_destroy": {
                "default": false,
                "description": "Whether to keep the log group (and any logs it may contain) at destroy time."
              },
              "cloudwatch_logs_tags": {
                "default": {},
                "description": "A map of tags to assign to the resource."
              },
              "code_signing_config_arn": {
                "default": null,
                "description": "Amazon Resource Name (ARN) for a Code Signing Configuration"
              },
              "compatible_architectures": {
                "default": null,
                "description": "A list of Architectures Lambda layer is compatible with. Currently x86_64 and arm64 can be specified."
              },
              "compatible_runtimes": {
                "default": [],
                "description": "A list of Runtimes this layer is compatible with. Up to 5 runtimes can be specified."
              },
              "cors": {
                "default": {},
                "description": "CORS settings to be used by the Lambda Function URL"
              },
              "create": {
                "default": true,
                "description": "Controls whether resources should be created"
              },
              "create_async_event_config": {
                "default": false,
                "description": "Controls whether async event configuration for Lambda Function/Alias should be created"
              },
              "create_current_version_allowed_triggers": {
                "default": true,
                "description": "Whether to allow triggers on current version of Lambda Function (this will revoke permissions from previous version because Terraform manages only current resources)"
              },
              "create_current_version_async_event_config": {
                "default": true,
                "description": "Whether to allow async event configuration on current version of Lambda Function (this will revoke permissions from previous version because Terraform manages only current resources)"
              },
              "create_function": {
                "default": true,
                "description": "Controls whether Lambda Function resource should be created"
              },
              "create_lambda_function_url": {
                "default": false,
                "description": "Controls whether the Lambda Function URL resource should be created"
              },
              "create_layer": {
                "default": false,
                "description": "Controls whether Lambda Layer resource should be created"
              },
              "create_package": {
                "default": true,
                "description": "Controls whether Lambda package should be created"
              },
              "create_role": {
                "default": true,
                "description": "Controls whether IAM role for Lambda Function should be created"
              },
              "create_sam_metadata": {
                "default": false,
                "description": "Controls whether the SAM metadata null resource should be created"
              },
              "create_unqualified_alias_allowed_triggers": {
                "default": true,
                "description": "Whether to allow triggers on unqualified alias pointing to $LATEST version"
              },
              "create_unqualified_alias_async_event_config": {
                "default": true,
                "description": "Whether to allow async event configuration on unqualified alias pointing to $LATEST version"
              },
              "create_unqualified_alias_lambda_function_url": {
                "default": true,
                "description": "Whether to use unqualified alias pointing to $LATEST version in Lambda Function URL"
              },
              "dead_letter_target_arn": {
                "default": null,
                "description": "The ARN of an SNS topic or SQS queue to notify when an invocation fails."
              },
              "description": {
                "default": "",
                "description": "Description of your Lambda Function (or Layer)"
              },
              "destination_on_failure": {
                "default": null,
                "description": "Amazon Resource Name (ARN) of the destination resource for failed asynchronous invocations"
              },
              "destination_on_success": {
                "default": null,
                "description": "Amazon Resource Name (ARN) of the destination resource for successful asynchronous invocations"
              },
              "docker_additional_options": {
                "default": [],
                "description": "Additional options to pass to the docker run command (e.g. to set environment variables, volumes, etc.)"
              },
              "docker_build_root": {
                "default": "",
                "description": "Root dir where to build in Docker"
              },
              "docker_entrypoint": {
                "default": null,
                "description": "Path to the Docker entrypoint to use"
              },
              "docker_file": {
                "default": "",
                "description": "Path to a Dockerfile when building in Docker"
              },
              "docker_image": {
                "default": "",
                "description": "Docker image to use for the build"
              },
              "docker_pip_cache": {
                "default": null,
                "description": "Whether to mount a shared pip cache folder into docker environment or not"
              },
              "docker_with_ssh_agent": {
                "default": false,
                "description": "Whether to pass SSH_AUTH_SOCK into docker environment or not"
              },
              "environment_variables": {
                "default": {},
                "description": "A map that defines environment variables for the Lambda Function."
              },
              "ephemeral_storage_size": {
                "default": 512,
                "description": "Amount of ephemeral storage (/tmp) in MB your Lambda Function can use at runtime. Valid value between 512 MB to 10,240 MB (10 GB)."
              },
              "event_source_mapping": {
                "default": {},
                "description": "Map of event source mapping"
              },
              "file_system_arn": {
                "default": null,
                "description": "The Amazon Resource Name (ARN) of the Amazon EFS Access Point that provides access to the file system."
              },
              "file_system_local_mount_path": {
                "default": null,
                "description": "The path where the function can access the file system, starting with /mnt/."
              },
              "function_name": {
                "default": "",
                "description": "A unique name for your Lambda Function"
              },
              "function_tags": {
                "default": {},
                "description": "A map of tags to assign only to the lambda function"
              },
              "handler": {
                "default": "",
                "description": "Lambda Function entrypoint in your code"
              },
              "hash_extra": {
                "default": "",
                "description": "The string to add into hashing function. Useful when building same source path for different functions."
              },
              "ignore_source_code_hash": {
                "default": false,
                "description": "Whether to ignore changes to the function's source code hash. Set to true if you manage infrastructure and code deployments separately."
              },
              "image_config_command": {
                "default": [],
                "description": "The CMD for the docker image"
              },
              "image_config_entry_point": {
                "default": [],
                "description": "The ENTRYPOINT for the docker image"
              },
              "image_config_working_directory": {
                "default": null,
                "description": "The working directory for the docker image"
              },
              "image_uri": {
                "default": null,
                "description": "The ECR image URI containing the function's deployment package."
              },
              "include_default_tag": {
                "default": true,
                "description": "Set to false to not include the default tag in the tags map."
              },
              "invoke_mode": {
                "default": null,
                "description": "Invoke mode of the Lambda Function URL. Valid values are BUFFERED (default) and RESPONSE_STREAM."
              },
              "ipv6_allowed_for_dual_stack": {
                "default": null,
                "description": "Allows outbound IPv6 traffic on VPC functions that are connected to dual-stack subnets"
              },
              "kms_key_arn": {
                "default": null,
                "description": "The ARN of KMS key to use by your Lambda Function"
              },
              "lambda_at_edge": {
                "default": false,
                "description": "Set this to true if using Lambda@Edge, to enable publishing, limit the timeout, and allow edgelambda.amazonaws.com to invoke the function"
              },
              "lambda_at_edge_logs_all_regions": {
                "default": true,
                "description": "Whether to specify a wildcard in IAM policy used by Lambda@Edge to allow logging in all regions"
              },
              "lambda_role": {
                "default": "",
                "description": " IAM role ARN attached to the Lambda Function. This governs both who / what can invoke your Lambda Function, as well as what resources our Lambda Function has access to. See Lambda Permission Model for more details."
              },
              "layer_name": {
                "default": "",
                "description": "Name of Lambda Layer to create"
              },
              "layer_skip_destroy": {
                "default": false,
                "description": "Whether to retain the old version of a previously deployed Lambda Layer."
              },
              "layers": {
                "default": null,
                "description": "List of Lambda Layer Version ARNs (maximum of 5) to attach to your Lambda Function."
              },
              "license_info": {
                "default": "",
                "description": "License info for your Lambda Layer. Eg, MIT or full url of a license."
              },
              "local_existing_package": {
                "default": null,
                "description": "The absolute path to an existing zip-file to use"
              },
              "logging_application_log_level": {
                "default": "INFO",
                "description": "The application log level of the Lambda Function. Valid values are \"TRACE\", \"DEBUG\", \"INFO\", \"WARN\", \"ERROR\", or \"FATAL\"."
              },
              "logging_log_format": {
                "default": "Text",
                "description": "The log format of the Lambda Function. Valid values are \"JSON\" or \"Text\"."
              },
              "logging_log_group": {
                "default": null,
                "description": "The CloudWatch log group to send logs to."
              },
              "logging_system_log_level": {
                "default": "INFO",
                "description": "The system log level of the Lambda Function. Valid values are \"DEBUG\", \"INFO\", or \"WARN\"."
              },
              "maximum_event_age_in_seconds": {
                "default": null,
                "description": "Maximum age of a request that Lambda sends to a function for processing in seconds. Valid values between 60 and 21600."
              },
              "maximum_retry_attempts": {
                "default": null,
                "description": "Maximum number of times to retry when the function returns an error. Valid values between 0 and 2. Defaults to 2."
              },
              "memory_size": {
                "default": 128,
                "description": "Amount of memory in MB your Lambda Function can use at runtime. Valid value between 128 MB to 10,240 MB (10 GB), in 64 MB increments."
              },
              "number_of_policies": {
                "default": 0,
                "description": "Number of policies to attach to IAM role for Lambda Function"
              },
              "number_of_policy_jsons": {
                "default": 0,
                "description": "Number of policies JSON to attach to IAM role for Lambda Function"
              },
              "package_type": {
                "default": "Zip",
                "description": "The Lambda deployment package type. Valid options: Zip or Image"
              },
              "policies": {
                "default": [],
                "description": "List of policy statements ARN to attach to Lambda Function role"
              },
              "policy": {
                "default": null,
                "description": "An additional policy document ARN to attach to the Lambda Function role"
              },
              "policy_json": {
                "default": null,
                "description": "An additional policy document as JSON to attach to the Lambda Function role"
              },
              "policy_jsons": {
                "default": [],
                "description": "List of additional policy documents as JSON to attach to Lambda Function role"
              },
              "policy_name": {
                "default": null,
                "description": "IAM policy name. It override the default value, which is the same as role_name"
              },
              "policy_path": {
                "default": null,
                "description": "Path of policies to that should be added to IAM role for Lambda Function"
              },
              "policy_statements": {
                "default": {},
                "description": "Map of dynamic policy statements to attach to Lambda Function role"
              },
              "provisioned_concurrent_executions": {
                "default": -1,
                "description": "Amount of capacity to allocate. Set to 1 or greater to enable, or set to 0 to disable provisioned concurrency."
              },
              "publish": {
                "default": false,
                "description": "Whether to publish creation/change as new Lambda Function Version."
              },
              "putin_khuylo": {
                "default": true,
                "description": "Do you agree that Putin doesn't respect Ukrainian sovereignty and territorial integrity? More info: https://en.wikipedia.org/wiki/Putin_khuylo!"
              },
              "recreate_missing_package": {
                "default": true,
                "description": "Whether to recreate missing Lambda package if it is missing locally or not"
              },
              "recursive_loop": {
                "default": null,
                "description": "Lambda function recursion configuration. Valid values are Allow or Terminate."
              },
              "replace_security_groups_on_destroy": {
                "default": null,
                "description": "(Optional) When true, all security groups defined in vpc_security_group_ids will be replaced with the default security group after the function is destroyed. Set the replacement_security_group_ids variable to use a custom list of security groups for replacement instead."
              },
              "replacement_security_group_ids": {
                "default": null,
                "description": "(Optional) List of security group IDs to assign to orphaned Lambda function network interfaces upon destruction. replace_security_groups_on_destroy must be set to true to use this attribute."
              },
              "reserved_concurrent_executions": {
                "default": -1,
                "description": "The amount of reserved concurrent executions for this Lambda Function. A value of 0 disables Lambda Function from being triggered and -1 removes any concurrency limitations. Defaults to Unreserved Concurrency Limits -1."
              },
              "role_description": {
                "default": null,
                "description": "Description of IAM role to use for Lambda Function"
              },
              "role_force_detach_policies": {
                "default": true,
                "description": "Specifies to force detaching any policies the IAM role has before destroying it."
              },
              "role_maximum_session_duration": {
                "default": 3600,
                "description": "Maximum session duration, in seconds, for the IAM role"
              },
              "role_name": {
                "default": null,
                "description": "Name of IAM role to use for Lambda Function"
              },
              "role_path": {
                "default": null,
                "description": "Path of IAM role to use for Lambda Function"
              },
              "role_permissions_boundary": {
                "default": null,
                "description": "The ARN of the policy that is used to set the permissions boundary for the IAM role used by Lambda Function"
              },
              "role_tags": {
                "default": {},
                "description": "A map of tags to assign to IAM role"
              },
              "runtime": {
                "default": "",
                "description": "Lambda Function runtime"
              },
              "s3_acl": {
                "default": "private",
                "description": "The canned ACL to apply. Valid values are private, public-read, public-read-write, aws-exec-read, authenticated-read, bucket-owner-read, and bucket-owner-full-control. Defaults to private."
              },
              "s3_bucket": {
                "default": null,
                "description": "S3 bucket to store artifacts"
              },
              "s3_existing_package": {
                "default": null,
                "description": "The S3 bucket object with keys bucket, key, version pointing to an existing zip-file to use"
              },
              "s3_kms_key_id": {
                "default": null,
                "description": "Specifies a custom KMS key to use for S3 object encryption."
              },
              "s3_object_override_default_tags": {
                "default": false,
                "description": "Whether to override the default_tags from provider? NB: S3 objects support a maximum of 10 tags."
              },
              "s3_object_storage_class": {
                "default": "ONEZONE_IA",
                "description": "Specifies the desired Storage Class for the artifact uploaded to S3. Can be either STANDARD, REDUCED_REDUNDANCY, ONEZONE_IA, INTELLIGENT_TIERING, or STANDARD_IA."
              },
              "s3_object_tags": {
                "default": {},
                "description": "A map of tags to assign to S3 bucket object."
              },
              "s3_object_tags_only": {
                "default": false,
                "description": "Set to true to not merge tags with s3_object_tags. Useful to avoid breaching S3 Object 10 tag limit."
              },
              "s3_prefix": {
                "default": null,
                "description": "Directory name where artifacts should be stored in the S3 bucket. If unset, the path from `artifacts_dir` is used"
              },
              "s3_server_side_encryption": {
                "default": null,
                "description": "Specifies server-side encryption of the object in S3. Valid values are \"AES256\" and \"aws:kms\"."
              },
              "skip_destroy": {
                "default": null,
                "description": "Set to true if you do not wish the function to be deleted at destroy time, and instead just remove the function from the Terraform state. Useful for Lambda@Edge functions attached to CloudFront distributions."
              },
              "snap_start": {
                "default": false,
                "description": "(Optional) Snap start settings for low-latency startups"
              },
              "source_path": {
                "default": null,
                "description": "The absolute path to a local file or directory containing your Lambda source code"
              },
              "store_on_s3": {
                "default": false,
                "description": "Whether to store produced artifacts on S3 or locally."
              },
              "tags": {
                "default": {},
                "description": "A map of tags to assign to resources."
              },
              "timeout": {
                "default": 3,
                "description": "The amount of time your Lambda Function has to run in seconds."
              },
              "timeouts": {
                "default": {},
                "description": "Define maximum timeout for creating, updating, and deleting Lambda Function resources"
              },
              "tracing_mode": {
                "default": null,
                "description": "Tracing mode of the Lambda Function. Valid value can be either PassThrough or Active."
              },
              "trigger_on_package_timestamp": {
                "default": true,
                "description": "Whether to recreate the Lambda package if the timestamp changes"
              },
              "trusted_entities": {
                "default": [],
                "description": "List of additional trusted entities for assuming Lambda Function role (trust relationship)"
              },
              "use_existing_cloudwatch_log_group": {
                "default": false,
                "description": "Whether to use an existing CloudWatch log group or create new"
              },
              "vpc_security_group_ids": {
                "default": null,
                "description": "List of security group ids when Lambda Function should run in the VPC."
              },
              "vpc_subnet_ids": {
                "default": null,
                "description": "List of subnet ids when Lambda Function should run in the VPC. Usually private or intra subnets."
              }
            }
          }
        }
      },
      "variables": {
        "lambda_secret": {
          "default": null,
          "description": "JWT token secret for Lambda function"
        }
      }
    }
  },
  "relevant_attributes": [
    {
      "resource": "module.lambda_function_with_docker_build_from_ecr.data.aws_arn.log_group_arn[0]",
      "attribute": [
        "partition"
      ]
    },
    {
      "resource": "module.lambda_function_with_docker_build_from_ecr.data.external.archive_prepare[0]",
      "attribute": [
        "result",
        "was_missing"
      ]
    },
    {
      "resource": "module.lambda_function_with_docker_build_from_ecr.aws_lambda_layer_version.this[0]",
      "attribute": [
        "source_code_size"
      ]
    },
    {
      "resource": "module.lambda_function_with_docker_build_from_ecr.aws_lambda_layer_version.this[0]",
      "attribute": [
        "arn"
      ]
    },
    {
      "resource": "module.ecr.aws_ecrpublic_repository.this[0]",
      "attribute": [
        "arn"
      ]
    },
    {
      "resource": "module.ecr.aws_ecr_repository.this[0]",
      "attribute": [
        "registry_id"
      ]
    },
    {
      "resource": "module.lambda_function_with_docker_build_from_ecr.aws_lambda_function.this[0]",
      "attribute": [
        "signing_job_arn"
      ]
    },
    {
      "resource": "module.lambda_function_with_docker_build_from_ecr.aws_lambda_function.this[0]",
      "attribute": [
        "source_code_hash"
      ]
    },
    {
      "resource": "module.lambda_function_with_docker_build_from_ecr.aws_cloudwatch_log_group.lambda[0]",
      "attribute": [
        "arn"
      ]
    },
    {
      "resource": "module.lambda_function_with_docker_build_from_ecr.data.external.archive_prepare[0]",
      "attribute": [
        "result",
        "filename"
      ]
    },
    {
      "resource": "module.lambda_function_with_docker_build_from_ecr.data.aws_caller_identity.current",
      "attribute": [
        "account_id"
      ]
    },
    {
      "resource": "module.lambda_function_with_docker_build_from_ecr.aws_lambda_function.this[0]",
      "attribute": [
        "signing_profile_version_arn"
      ]
    },
    {
      "resource": "module.lambda_function_with_docker_build_from_ecr.aws_lambda_function.this[0]",
      "attribute": [
        "kms_key_arn"
      ]
    },
    {
      "resource": "module.lambda_function_with_docker_build_from_ecr.aws_lambda_function_url.this[0]",
      "attribute": [
        "url_id"
      ]
    },
    {
      "resource": "module.lambda_function_with_docker_build_from_ecr.data.aws_arn.log_group_arn[0]",
      "attribute": [
        "resource"
      ]
    },
    {
      "resource": "module.lambda_function_with_docker_build_from_ecr.data.aws_cloudwatch_log_group.lambda[0]",
      "attribute": [
        "arn"
      ]
    },
    {
      "resource": "module.lambda_function_with_docker_build_from_ecr.data.aws_arn.log_group_arn[0]",
      "attribute": [
        "account"
      ]
    },
    {
      "resource": "module.ecr.aws_ecrpublic_repository.this[0]",
      "attribute": [
        "id"
      ]
    },
    {
      "resource": "module.ecr.aws_ecrpublic_repository.this[0]",
      "attribute": [
        "registry_id"
      ]
    },
    {
      "resource": "module.lambda_function_with_docker_build_from_ecr.aws_iam_role.lambda[0]",
      "attribute": [
        "arn"
      ]
    },
    {
      "resource": "module.lambda_function_with_docker_build_from_ecr.aws_iam_role.lambda[0]",
      "attribute": [
        "unique_id"
      ]
    },
    {
      "resource": "module.docker_build_from_ecr.docker_registry_image.this",
      "attribute": [
        "id"
      ]
    },
    {
      "resource": "module.lambda_function_with_docker_build_from_ecr.aws_lambda_function.this[0]",
      "attribute": [
        "arn"
      ]
    },
    {
      "resource": "module.ecr.aws_ecr_repository.this[0]",
      "attribute": [
        "repository_url"
      ]
    },
    {
      "resource": "module.lambda_function_with_docker_build_from_ecr.aws_lambda_function_url.this[0]",
      "attribute": [
        "function_url"
      ]
    },
    {
      "resource": "module.lambda_function_with_docker_build_from_ecr.data.aws_arn.log_group_arn[0]",
      "attribute": [
        "service"
      ]
    },
    {
      "resource": "module.docker_build_from_ecr.data.aws_region.current",
      "attribute": [
        "name"
      ]
    },
    {
      "resource": "module.lambda_function_with_docker_build_from_ecr.aws_lambda_layer_version.this[0]",
      "attribute": [
        "created_date"
      ]
    },
    {
      "resource": "module.ecr.aws_ecrpublic_repository.this[0]",
      "attribute": [
        "repository_uri"
      ]
    },
    {
      "resource": "module.lambda_function_with_docker_build_from_ecr.aws_iam_role.lambda[0]",
      "attribute": [
        "name"
      ]
    },
    {
      "resource": "module.lambda_function_with_docker_build_from_ecr.aws_lambda_function.this[0]",
      "attribute": [
        "qualified_arn"
      ]
    },
    {
      "resource": "module.lambda_function_with_docker_build_from_ecr.aws_lambda_function.this[0]",
      "attribute": [
        "last_modified"
      ]
    },
    {
      "resource": "module.docker_build_from_ecr.aws_ecr_repository.this[0]",
      "attribute": [
        "id"
      ]
    },
    {
      "resource": "module.lambda_function_with_docker_build_from_ecr.data.aws_cloudwatch_log_group.lambda[0]",
      "attribute": [
        "name"
      ]
    },
    {
      "resource": "module.lambda_function_with_docker_build_from_ecr.aws_cloudwatch_log_group.lambda[0]",
      "attribute": [
        "name"
      ]
    },
    {
      "resource": "module.lambda_function_with_docker_build_from_ecr.aws_lambda_layer_version.this[0]",
      "attribute": [
        "layer_arn"
      ]
    },
    {
      "resource": "module.ecr.aws_ecr_repository.this[0]",
      "attribute": [
        "name"
      ]
    },
    {
      "resource": "module.ecr.aws_ecr_repository.this[0]",
      "attribute": [
        "arn"
      ]
    },
    {
      "resource": "module.lambda_function_with_docker_build_from_ecr.data.aws_region.current",
      "attribute": [
        "name"
      ]
    },
    {
      "resource": "module.lambda_function_with_docker_build_from_ecr.aws_lambda_function.this[0]",
      "attribute": [
        "qualified_invoke_arn"
      ]
    },
    {
      "resource": "module.lambda_function_with_docker_build_from_ecr.aws_lambda_event_source_mapping.this",
      "attribute": []
    },
    {
      "resource": "module.docker_build_from_ecr.data.aws_caller_identity.this",
      "attribute": [
        "account_id"
      ]
    },
    {
      "resource": "module.docker_build_from_ecr.docker_registry_image.this",
      "attribute": [
        "name"
      ]
    },
    {
      "resource": "module.lambda_function_with_docker_build_from_ecr.aws_lambda_function.this[0]",
      "attribute": [
        "source_code_size"
      ]
    },
    {
      "resource": "module.lambda_function_with_docker_build_from_ecr.aws_lambda_function.this[0]",
      "attribute": [
        "invoke_arn"
      ]
    },
    {
      "resource": "module.lambda_function_with_docker_build_from_ecr.aws_lambda_function.this[0]",
      "attribute": [
        "version"
      ]
    },
    {
      "resource": "module.lambda_function_with_docker_build_from_ecr.aws_lambda_function.this[0]",
      "attribute": [
        "function_name"
      ]
    },
    {
      "resource": "module.docker_build_from_ecr.docker_image.this",
      "attribute": [
        "name"
      ]
    },
    {
      "resource": "module.lambda_function_with_docker_build_from_ecr.aws_lambda_layer_version.this[0]",
      "attribute": [
        "version"
      ]
    },
    {
      "resource": "module.lambda_function_with_docker_build_from_ecr.aws_s3_object.lambda_package[0]",
      "attribute": [
        "version_id"
      ]
    }
  ],
  "timestamp": "2025-02-04T11:50:07Z",
  "applyable": false,
  "complete": true,
  "errored": false
}
